<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2024/02/27/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2024/02/27/%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="字符串的输入输出"><a href="#字符串的输入输出" class="headerlink" title="字符串的输入输出"></a>字符串的输入输出</h2><p><strong>需要读入空格时</strong></p><ul><li>string 类型用getline(cin,s)</li><li>数组类型用cin.getline(s,100)</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">char</span> s[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">fgets</span>(s,<span class="number">100000</span>,stdin);</span><br><span class="line"><span class="comment">//cin.getline(s,100);</span></span><br><span class="line">cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>不需要读入空格时可以直接用cin和scanf(%s遇到空格就结束了）</strong></p><ul><li>puts输出（包括换行符）</li></ul><p><img src="C:\Users\鑫霜\AppData\Roaming\Typora\typora-user-images\image-20220108123941715.png" alt="image-20220108123941715"></p><h2 id="标准库类型string"><a href="#标准库类型string" class="headerlink" title="标准库类型string"></a>标准库类型string</h2><p><img src="C:\Users\鑫霜\AppData\Roaming\Typora\typora-user-images\image-20220108133105261.png" alt="image-20220108133105261"></p><ul><li><p>不可用scanf读入</p></li><li><p>可用printf输出</p></li></ul><p><strong>注意</strong>：<code>printf(&quot;%s\n&quot;,s1.c_str())</code>(.c_str()是一个函数，返回的是首地址)</p><ul><li>支持比较，相加，可以直接加字符、字符串</li><li>当把string对象和字符字面值及字符串字面值混在一条语句中使用时，必须确保每个加法运算符的两侧的运算对象至少有一个是string</li></ul><p><strong>相应的函数</strong></p><ul><li>empty()</li><li>size()</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s1 = <span class="string">&quot;abcd&quot;</span>,s2;</span><br><span class="line">    <span class="comment">//判断是否为空</span></span><br><span class="line">    cout &lt;&lt; s1.<span class="built_in">empty</span>() &lt;&lt; endl;<span class="comment">//0</span></span><br><span class="line">    cout &lt;&lt; s2.<span class="built_in">empty</span>() &lt;&lt; endl;<span class="comment">//1</span></span><br><span class="line">    <span class="comment">//测量长度（比strlen快）</span></span><br><span class="line">    cout &lt;&lt; s1.<span class="built_in">size</span>() &lt;&lt; endl;<span class="comment">//4</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>string中字符的遍历可用<code>for(char c : s) cout &lt;&lt; c &lt;&lt; endl</code></li></ul><p><img src="C:\Users\鑫霜\AppData\Roaming\Typora\typora-user-images\image-20220108140518014.png" alt="image-20220108140518014"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">char</span> c : s) cout &lt;&lt; c &lt;&lt; endl;</span><br><span class="line">    <span class="comment">/*等价于</span></span><br><span class="line"><span class="comment">    for(int i=0;i&lt;s.size();i++)&#123;</span></span><br><span class="line"><span class="comment">    char c = s[i];</span></span><br><span class="line"><span class="comment">    cout &lt;&lt; c &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">char</span> &amp;c : s) c = <span class="string">&#x27;a&#x27;</span>;<span class="comment">//加上引用符号s才会相应改变</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字符串的函数"><a href="#字符串的函数" class="headerlink" title="字符串的函数"></a>字符串的函数</h2><p><img src="C:\Users\鑫霜\AppData\Roaming\Typora\typora-user-images\image-20220108123941715.png" alt="image-20220108123941715"></p><ul><li><p>str.back()：str的最后一个字符</p></li><li><p>str.pop_back()：把str最后一个空格删掉</p></li><li><p>substr(i,len)：i是起始位置，len是长度</p><ul><li><code>&quot;abcde&quot;.substr(0,3)=&quot;abc&quot;</code></li><li><code>&quot;abcde&quot;.substr(3)=&quot;de&quot;</code></li></ul></li><li><p><code>stringstream  ssin(s);</code> ：ssin是自定义的名称，s是要查找的字符串，之后ssin就可以当cin用，从s中读出任意需要的格式（头文件是sstream)</p></li><li><p><code>sscanf(s,&quot;%d%s%d%lf&quot;,&amp;a,str,&amp;B,&amp;c);</code>：头文件csdio,跟上面的作用差不多</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/02/27/hello-world/"/>
      <url>/2024/02/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
