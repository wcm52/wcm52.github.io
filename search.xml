<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>acwing 蓝桥杯辅导课贪心章节习题</title>
    <url>/2024/03/04/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E8%B4%AA%E5%BF%83/</url>
    <content><![CDATA[<h2 id="1055-股票买卖-II"><a href="#1055-股票买卖-II" class="headerlink" title="1055. 股票买卖 II"></a>1055. 股票买卖 II</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/1057/">题目</a></h3><p>给定一个长度为 <em>N</em> 的数组，数组中的第 <em>i</em> 个数字表示一个给定股票在第 <em>i</em> 天的价格。设计一个算法来计算你所能获取的最大利润。你可以尽可能地完成更多的交易（多次买卖一支股票）。<span id="more"></span></p>
<p>注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p>
<h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含整数 <em>N</em>，表示数组长度。第二行包含 <em>N</em> 个不大于 10000 的正整数，表示完整的数组。</p>
<h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，表示最大利润。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>N</em>≤105</p>
<h4 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">7 1 5 3 6 4</span><br></pre></td></tr></table></figure>

<h4 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure>

<h4 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">1 2 3 4 5</span><br></pre></td></tr></table></figure>

<h4 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>

<h4 id="输入样例3："><a href="#输入样例3：" class="headerlink" title="输入样例3："></a>输入样例3：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">7 6 4 3 1</span><br></pre></td></tr></table></figure>

<h4 id="输出样例3："><a href="#输出样例3：" class="headerlink" title="输出样例3："></a>输出样例3：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure>

<h4 id="样例解释"><a href="#样例解释" class="headerlink" title="样例解释"></a>样例解释</h4><p>样例1：在第 2 天（股票价格 &#x3D; 1）的时候买入，在第 3 天（股票价格 &#x3D; 5）的时候卖出, 这笔交易所能获得利润 &#x3D; 5-1 &#x3D; 4 。随后，在第 4 天（股票价格 &#x3D; 3）的时候买入，在第 5 天（股票价格 &#x3D; 6）的时候卖出, 这笔交易所能获得利润 &#x3D; 6-3 &#x3D; 3  。共得利润 4+3 &#x3D; 7。</p>
<p>样例2：在第 1 天（股票价格 &#x3D; 1）的时候买入，在第 5 天 （股票价格 &#x3D; 5）的时候卖出, 这笔交易所能获得利润 &#x3D; 5-1 &#x3D; 4 。注意你不能在第 1 天和第 2 天接连购买股票，之后再将它们卖出。因为这样属于同时参与了多笔交易，你必须在再次购买前出售掉之前的股票。</p>
<p>样例3：在这种情况下, 不进行任何交易, 所以最大利润为 0。</p>
<h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>输入一支股票每天的价钱，这只股票可以进行多次买入卖出，求最大利益</p>
<h3 id="算法一（贪心）"><a href="#算法一（贪心）" class="headerlink" title="算法一（贪心）"></a>算法一（贪心）</h3><p>当后一天大于前一天时，在前一天买入，后一天卖出，最后得到的就是最大利益</p>
<p>(一个跨度为多天的交易，都可以用若干个跨度等于一天的交易来计算)</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i+<span class="number">1</span> &lt; n; i++)</span><br><span class="line">        <span class="keyword">if</span>(a[i+<span class="number">1</span>] &gt; a[i]) res += a[i+<span class="number">1</span>]-a[i];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,res);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="算法二（DP）"><a href="#算法二（DP）" class="headerlink" title="算法二（DP）"></a>算法二（DP）</h3><p><img src="https://cdn.acwing.com/media/article/image/2021/04/15/55909_5706e7949d-IMG_7844DAF97668-1.jpeg" alt="IMG_7844DAF97668-1.jpeg"></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>, INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> w[N];</span><br><span class="line"><span class="type">int</span> f[N][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;w[i]);</span><br><span class="line"></span><br><span class="line">    f[<span class="number">0</span>][<span class="number">1</span>] = -INF;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        f[i][<span class="number">0</span>] = <span class="built_in">max</span>(f[i - <span class="number">1</span>][<span class="number">0</span>], f[i - <span class="number">1</span>][<span class="number">1</span>] + w[i]);</span><br><span class="line">        f[i][<span class="number">1</span>] = <span class="built_in">max</span>(f[i - <span class="number">1</span>][<span class="number">1</span>], f[i - <span class="number">1</span>][<span class="number">0</span>] - w[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, f[n][<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="104-货仓选址"><a href="#104-货仓选址" class="headerlink" title="104. 货仓选址"></a>104. 货仓选址</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/106/">题目</a></h3><p>在一条数轴上有 <em>N</em> 家商店，它们的坐标分别为 <em>A</em>1∼<em>A**N</em>。</p>
<p>现在需要在数轴上建立一家货仓，每天清晨，从货仓到每家商店都要运送一车商品。</p>
<p>为了提高效率，求把货仓建在何处，可以使得货仓到每家商店的距离之和最小。</p>
<h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行输入整数 <em>N</em>。第二行 <em>N</em> 个整数 <em>A</em>1∼<em>A**N</em>。</p>
<h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，表示距离之和的最小值。</p>
<h4 id="数据范围-1"><a href="#数据范围-1" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>N</em>≤100000,<br>0≤<em>A**i</em>≤40000</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">6 2 9 1</span><br></pre></td></tr></table></figure>

<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12</span><br></pre></td></tr></table></figure>

<h3 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h3><p>把货舱建在中位数处距离之和最小</p>
<p><img src="C:\Users\鑫霜\AppData\Roaming\Typora\typora-user-images\image-20220305201917738.png" alt="image-20220305201917738"></p>
<p><img src="C:\Users\鑫霜\AppData\Roaming\Typora\typora-user-images\image-20220305202009320.png" alt="image-20220305202009320"></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    <span class="built_in">sort</span>(a, a + n);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        res += <span class="built_in">abs</span>(a[i] - a[n/<span class="number">2</span>]);</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="122-糖果传递"><a href="#122-糖果传递" class="headerlink" title="122. 糖果传递"></a>122. 糖果传递</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/124/">题目</a></h3><p>有 <em>n</em> 个小朋友坐成一圈，每人有 <em>a</em>[<em>i</em>] 个糖果。每人只能给左右两人传递糖果。每人每次传递一个糖果代价为 1。求使所有人获得均等糖果的最小代价。</p>
<h4 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行输入一个正整数 <em>n</em>，表示小朋友的个数。接下来 <em>n</em> 行，每行一个整数 <em>a</em>[<em>i</em>]，表示第 <em>i</em> 个小朋友初始得到的糖果的颗数。</p>
<h4 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，表示最小代价。</p>
<h4 id="数据范围-2"><a href="#数据范围-2" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>n</em>≤1000000,<br>0≤<em>a</em>[<em>i</em>]≤2×109,<br> 数据保证一定有解。</p>
<h4 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">5</span><br><span class="line">4</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>

<h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>还是求中位数问题，只不过需要变形</p>
<p>设 xi 表示第 i 个小朋友给了第 i-1 个小朋友 xi 个糖果，如果 xi 小于0 ，则表示第i-1个小朋友给了第 i 个小朋友 xi 个糖果，所以答案就是<code>res=|x1|+|x2|+|x3|+....+|xn|</code></p>
<p>(x1表示第n个小朋友给了第1个小朋友x1个糖果)</p>
<ul>
<li><p>对于第一个小朋友，他给了第 n 个小朋友 x1 个糖果，得到了第2个小朋友给的 x2 个糖果，所以<code> ave = a1-x1+x2</code></p>
</li>
<li><p>对于第二个小朋友，<code>ave = a2-x2+x3</code>，对于第三个小朋友，<code>ave = a3-x3+x4</code></p>
</li>
<li><p>以此类推，每一个 xn都可以用 x1 表示出来，即<code>x2 = x1+ave-a1</code>，<code>x3 = x2+ave-a2</code>,即<code>x3 = x1+ave-a1 + ave-a2</code>，令<code>c1 = a1-ave</code>,<code>c2 = a2-ave</code>,以此类推，xn &#x3D; x1-c(n-1)</p>
</li>
<li><p>所以最后的答案变成求|x1|+|x1-c1|+|x1-c2|+….+|x1-c(n-1)|的最小值</p>
</li>
<li><p>根据|xn-c(n-1)|的几何意义可知最小值就是找中间的数，所以最后 x1 就是找 c1 到 c(n-1) 的中位数</p>
</li>
</ul>
<p><img src="C:\Users\鑫霜\AppData\Roaming\Typora\typora-user-images\image-20220305210838521.png" alt="image-20220305210838521"></p>
<h3 id="相关代码-1"><a href="#相关代码-1" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N =<span class="number">1000010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> c[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">        sum += a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> ave = sum / n;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        c[i] = a[i] + c[i<span class="number">-1</span>] - ave;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">sort</span>(c+<span class="number">1</span>,c+n+<span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        res += <span class="built_in">abs</span>(c[i] - c[n/<span class="number">2</span>+<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://www.acwing.com/solution/content/955/">参考作者：acwing_top_1_AK</a></p>
<h2 id="112-雷达设备"><a href="#112-雷达设备" class="headerlink" title="112. 雷达设备"></a>112. 雷达设备</h2><h3 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/114/">题目</a></h3><p>假设海岸是一条无限长的直线，陆地位于海岸的一侧，海洋位于另外一侧。每个小岛都位于海洋一侧的某个点上。</p>
<p>雷达装置均位于海岸线上，且雷达的监测范围为 <em>d</em>，当小岛与某雷达的距离不超过 <em>d</em> 时，该小岛可以被雷达覆盖。</p>
<p>我们使用笛卡尔坐标系，定义海岸线为 <em>x</em> 轴，海的一侧在 <em>x</em> 轴上方，陆地一侧在 <em>x</em> 轴下方。</p>
<p>现在给出每个小岛的具体坐标以及雷达的检测范围，请你求出能够使所有小岛都被雷达覆盖所需的最小雷达数目。</p>
<h4 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行输入两个整数 <em>n</em> 和 <em>d</em>，分别代表小岛数目和雷达检测范围。接下来 <em>n</em> 行，每行输入两个整数，分别代表小岛的 <em>x</em>，<em>y</em> 轴坐标。同一行数据之间用空格隔开。</p>
<h4 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，代表所需的最小雷达数目，若没有解决方案则所需数目输出 −1。</p>
<h4 id="数据范围-3"><a href="#数据范围-3" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>n</em>≤1000,<br>−1000≤<em>x</em>,<em>y</em>≤1000</p>
<h4 id="输入样例：-2"><a href="#输入样例：-2" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 2</span><br><span class="line">1 2</span><br><span class="line">-3 1</span><br><span class="line">2 1</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-2"><a href="#输出样例：-2" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>

<h3 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h3><p>每个点对应在海岸线上能放的雷达范围为（a,b）</p>
<ul>
<li>区间左端点 a&#x3D;sqrt(d*d-y*y)-x</li>
<li>区间右端点 b&#x3D;sqrt(d*d-y*y)+x</li>
</ul>
<p><img src="https://www.acwing.com/media/article/image/2019/02/26/1_742fce9a39-QQ%E5%9B%BE%E7%89%8720190226014010.png" alt="img"></p>
<ul>
<li>将每个区间按右端点从小到大排序</li>
<li>如果选择的点在下一个区间内，则跳过（判断一个点是否在下一个区间内，只要这个点所在区间的右端点小于下一个区间的左端点，则一定不在下一个区间内）</li>
<li>如果选择的点不在下一个区间内，则选择下一个区间的右端点</li>
</ul>
<p><img src="C:\Users\鑫霜\AppData\Roaming\Typora\typora-user-images\image-20220306104630968.png" alt="image-20220306104630968"></p>
<h3 id="相关代码-2"><a href="#相关代码-2" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">double</span>,<span class="type">double</span>&gt; PDD;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,d;</span><br><span class="line">PDD seg[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; d;</span><br><span class="line">    </span><br><span class="line">    <span class="type">bool</span> success = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x,y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(y &gt; d) </span><br><span class="line">        &#123;</span><br><span class="line">            success = <span class="literal">false</span>;<span class="comment">//无解的情况</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//第一个点存右端点，方便排序</span></span><br><span class="line">        <span class="keyword">auto</span> len = <span class="built_in">sqrt</span>(d*d-y*y);</span><br><span class="line">        seg[i].first = x + len,seg[i].second = x - len;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">sort</span>(seg,seg+n);<span class="comment">//按右端点从小到大排序</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(!success) <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="type">double</span> point = <span class="number">-1e20</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(point &lt; seg[i].second) <span class="comment">//如果选择的点小于左端点，则需要再选一个点</span></span><br><span class="line">            &#123;</span><br><span class="line">                point = seg[i].first;</span><br><span class="line">                cnt ++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; cnt &lt;&lt; endl;</span><br><span class="line">            </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1235-付账问题"><a href="#1235-付账问题" class="headerlink" title="1235. 付账问题"></a>1235. 付账问题</h2><h3 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/1237/">题目</a></h3><p>几个人一起出去吃饭是常有的事。但在结帐的时候，常常会出现一些争执。</p>
<p>现在有 <em>n</em> 个人出去吃饭，他们总共消费了 <em>S</em> 元。其中第 <em>i</em> 个人带了 <em>a**i</em> 元。</p>
<p>幸运的是，所有人带的钱的总数是足够付账的，但现在问题来了：每个人分别要出多少钱呢？</p>
<p>为了公平起见，我们希望在总付钱量恰好为 <em>S</em> 的前提下，最后每个人付的钱的标准差最小。这里我们约定，每个人支付的钱数可以是任意非负实数，即可以不是 1 分钱的整数倍。</p>
<p>你需要输出最小的标准差是多少。</p>
<p>标准差的介绍：标准差是多个数与它们平均数差值的平方平均数，一般用于刻画这些数之间的“偏差有多大”。</p>
<p>形式化地说，设第 <em>i</em> 个人付的钱为 <em>b**i</em></p>
<p> 元，那么标准差为 : </p>
<p><img src="https://cdn.acwing.com/media/article/image/2019/12/04/19_6734517a16-p1.png" alt="p1.png"> </p>
<h4 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含两个整数 <em>n</em>、<em>S</em>；</p>
<p>第二行包含 <em>n</em> 个非负整数 <em>a</em>1, …, <em>a**n</em>。</p>
<h4 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出最小的标准差，四舍五入保留 4 位小数。</p>
<h4 id="数据范围-4"><a href="#数据范围-4" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>n</em>≤5×105,<br>0≤<em>a**i</em>≤109,<br>0≤<em>S</em>≤1015。</p>
<h4 id="输入样例1：-1"><a href="#输入样例1：-1" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 2333</span><br><span class="line">666 666 666 666 666</span><br></pre></td></tr></table></figure>

<h4 id="输出样例1：-1"><a href="#输出样例1：-1" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0.0000</span><br></pre></td></tr></table></figure>

<h4 id="输入样例2：-1"><a href="#输入样例2：-1" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10 30</span><br><span class="line">2 1 4 7 4 8 3 6 4 7</span><br></pre></td></tr></table></figure>

<h4 id="输出样例2：-1"><a href="#输出样例2：-1" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0.7928</span><br></pre></td></tr></table></figure>

<h3 id="解题思路-2"><a href="#解题思路-2" class="headerlink" title="解题思路"></a>解题思路</h3><p>方差代表的是波动范围，标准差就是方差开根号</p>
<ul>
<li>要保证波动最小就要保证每个人拿出来的钱尽可能地接近平均数</li>
<li>如果每个人拥有的钱大于等于平均数，则每个人拿出和平均数一样多的钱</li>
<li>如果有人的钱比平均数小，有人的钱比平均数多<ul>
<li>钱少的人把钱全部拿出</li>
<li>钱多的人均摊钱少的人和平均数的差值</li>
</ul>
</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20200209122521800.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTA4MDg2Nw==,size_16,color_FFFFFF,t_70" alt="img"></p>
<p><img src="https://img-blog.csdnimg.cn/20200209122531728.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTA4MDg2Nw==,size_16,color_FFFFFF,t_70"></p>
<h3 id="相关代码-3"><a href="#相关代码-3" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">500010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> n,s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; s; </span><br><span class="line">    </span><br><span class="line">    <span class="type">double</span>  ave1 = s*<span class="number">1.0</span> / n, ave2 = ave1;<span class="comment">//ave2表示 均摊钱少的人的与平均数的差值后 的平均数</span></span><br><span class="line">    <span class="type">long</span> <span class="type">double</span> sum = <span class="number">0</span>;<span class="comment">//改成long double 才能过最后一组数据</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">sort</span>(a,a+n);<span class="comment">//把钱数由小到大排序</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i] &lt;= ave2)</span><br><span class="line">        &#123;</span><br><span class="line">            sum += (a[i] - ave1) * (a[i] - ave1);</span><br><span class="line">            <span class="comment">//算减去钱少的人之后每个人要摊的钱</span></span><br><span class="line">            s -= a[i];</span><br><span class="line">            ave2 = s*<span class="number">1.0</span> / (n-i<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            sum += (ave2 - ave1) * (ave2 - ave1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.4llf\n&quot;</span>,<span class="built_in">sqrt</span>(sum/n));<span class="comment">//long double 要用%llf输出</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1239-乘积最大"><a href="#1239-乘积最大" class="headerlink" title="1239. 乘积最大"></a>1239. 乘积最大</h2><h3 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/1241/">题目</a></h3><p>给定 <em>N</em> 个整数 <em>A</em>1,<em>A</em>2,…<em>A**N</em>。请你从中选出 <em>K</em> 个数，使其乘积最大。  </p>
<p>请你求出最大的乘积，由于乘积可能超出整型范围，你只需输出乘积除以 1000000009 的余数。  </p>
<p>注意，如果 <em>X</em>&lt;0， 我们定义 <em>X</em> 除以 1000000009 的余数是负(−<em>X</em>)除以 1000000009 的余数，即：0−((0−<em>x</em>)%1000000009)</p>
<h4 id="输入格式-5"><a href="#输入格式-5" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含两个整数 <em>N</em> 和 <em>K</em>。</p>
<p>以下 <em>N</em> 行每行一个整数 <em>A**i</em>。</p>
<h4 id="输出格式-5"><a href="#输出格式-5" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，表示答案。</p>
<h4 id="数据范围-5"><a href="#数据范围-5" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>K</em>≤<em>N</em>≤105,<br>−105≤<em>A**i</em>≤105</p>
<h4 id="输入样例1：-2"><a href="#输入样例1：-2" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 3</span><br><span class="line">-100000</span><br><span class="line">-10000</span><br><span class="line">2</span><br><span class="line">100000</span><br><span class="line">10000</span><br></pre></td></tr></table></figure>

<h4 id="输出样例1：-2"><a href="#输出样例1：-2" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">999100009</span><br></pre></td></tr></table></figure>

<h4 id="输入样例2：-2"><a href="#输入样例2：-2" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 3</span><br><span class="line">-100000</span><br><span class="line">-100000</span><br><span class="line">-2</span><br><span class="line">-100000</span><br><span class="line">-100000</span><br></pre></td></tr></table></figure>

<h4 id="输出样例2：-2"><a href="#输出样例2：-2" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-999999829</span><br></pre></td></tr></table></figure>

<h3 id="解题思路-3"><a href="#解题思路-3" class="headerlink" title="解题思路"></a>解题思路</h3><p>（注意的意思就是负数取余的余数就是负数，c 语言负数取余就表示负数，这表述我们选择时最后的乘积是负数，最后得到的答案也是负数）</p>
<p>分情况</p>
<ul>
<li><p>首先对输入的整数排序</p>
</li>
<li><p>如果 k&#x3D;&#x3D;n，则需要全选</p>
</li>
<li><p>如果 k&lt;n</p>
<ul>
<li>当 k 为偶数时，一定可以得到一个非负的结果</li>
<li>当 k 为奇数时<ul>
<li>当所有数都是负数，最后的结果也是负数，最大值就从右边开始选</li>
<li>至少存在一个非负数，先选这个非负数（一定会选最右边的一个数才能使得结果最大），然后 k– 变为偶数，再根据偶数种情况来判断</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="相关代码-4"><a href="#相关代码-4" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">1000000009</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> n,k;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    <span class="type">int</span> l = <span class="number">0</span>, r = n<span class="number">-1</span>,sign = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> res = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">sort</span>(a,a+n);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//如果是奇数个，则一定要选最右边的一个数，选过之后，个数减少，右端点移动向左移动一位，变为偶数个</span></span><br><span class="line">    <span class="keyword">if</span>(k % <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        res = a[r];</span><br><span class="line">        <span class="keyword">if</span>(a[r] &lt; <span class="number">0</span>) sign = <span class="number">-1</span>;<span class="comment">//如果最大值都小于0，则表示所有数都小于0，所以要选择一个绝对值最小的数就是最大值</span></span><br><span class="line">        k--;</span><br><span class="line">        r--;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//个数为偶数个时</span></span><br><span class="line">    <span class="keyword">while</span>(k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> x = (<span class="type">long</span> <span class="type">long</span>)a[l] * a[l+<span class="number">1</span>], y = (<span class="type">long</span> <span class="type">long</span>)a[r] * a[r<span class="number">-1</span>];<span class="comment">//左右两边都取一对，判断大小</span></span><br><span class="line">        <span class="keyword">if</span>(x * sign &gt; y * sign)<span class="comment">//如果x和y都是负数，则找绝对值最小的答案</span></span><br><span class="line">        &#123;</span><br><span class="line">            res = x % mod * res % mod; <span class="comment">// 需要注意的是 :不可以写成(x * res) % mod ,也不可以写成是 res % mod * x % mod</span></span><br><span class="line">                                       <span class="comment">// 因为x最大是 10^10，如果不先取模的话，和res相乘的结果最大是 10^19,会暴long long。           </span></span><br><span class="line">           </span><br><span class="line">            l += <span class="number">2</span>;<span class="comment">//指针移动</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            res = y % mod * res % mod;</span><br><span class="line">            r -= <span class="number">2</span>;<span class="comment">//指针移动</span></span><br><span class="line">        &#125;</span><br><span class="line">        k -= <span class="number">2</span>;<span class="comment">//取完一次后个数减少两个</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,res);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1247-后缀表达式"><a href="#1247-后缀表达式" class="headerlink" title="1247. 后缀表达式"></a>1247. 后缀表达式</h2><h3 id="题目-6"><a href="#题目-6" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/1249/">题目</a></h3><p>给定 <em>N</em> 个加号、<em>M</em> 个减号以及 <em>N</em>+<em>M</em>+1 个整数 <em>A</em>1,<em>A</em>2,⋅⋅⋅,<em>A**N</em>+<em>M</em>+1，小明想知道在所有由这 <em>N</em> 个加号、<em>M</em> 个减号以及 <em>N</em>+<em>M</em>+1 个整数凑出的合法的后缀表达式中，结果最大的是哪一个？请你输出这个最大的结果。例如使用 123+−，则 “23+1−” 这个后缀表达式结果是 4，是最大的。</p>
<h4 id="输入格式-6"><a href="#输入格式-6" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含两个整数 <em>N</em> 和 <em>M</em>。</p>
<p>第二行包含 <em>N</em>+<em>M</em>+1 个整数 <em>A</em>1,<em>A</em>2,⋅⋅⋅,<em>A**N</em>+<em>M</em>+1。</p>
<h4 id="输出格式-6"><a href="#输出格式-6" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，代表答案。</p>
<h4 id="数据范围-6"><a href="#数据范围-6" class="headerlink" title="数据范围"></a>数据范围</h4><p>0≤<em>N</em>,<em>M</em>≤105,<br>−109≤<em>A**i</em>≤109</p>
<h4 id="输入样例：-3"><a href="#输入样例：-3" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 1</span><br><span class="line">1 2 3</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-3"><a href="#输出样例：-3" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>

<h3 id="解题思路-4"><a href="#解题思路-4" class="headerlink" title="解题思路"></a>解题思路</h3><ul>
<li><p>当负号个数不为0时，由于负号可以组合，也就是加括号</p>
</li>
<li><p>比如4 5 + 3 2 - -（m &#x3D; 2, n &#x3D; 1,有m+n+1个数）最大值就是4+5-(3-2)&#x3D;8</p>
</li>
<li><p>所以负号有1~m+n个，至少有一个正数，（因为没有符号就表示正数），所以除了最大值和最小值，中间的数可以任意加正负号，也就是说中间只要有负数就可以在前面加一个负号使之变成正数，即最后答案<code>res=max-min+abs(a[i])(i从1到n+m)</code></p>
</li>
<li><p>当负号个数为0时，把所有的数加起来即可</p>
</li>
<li><p>举例，n &#x3D; 5 ,m &#x3D; 5,11个数</p>
<ul>
<li><p>-(1-2-3-4-5)+6+7+8+9+10+11，此时有1个负号</p>
</li>
<li><p>(1-2-3-4-5)-(6+7+8+9+10+11)，此时有 n+m 个负号</p>
</li>
<li><p>可以任意把正数或者负数拿进括号中去，所以负数的范围是（1，n+m）</p>
</li>
</ul>
</li>
</ul>
<h3 id="相关代码-5"><a href="#相关代码-5" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">200010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n + m + <span class="number">1</span>; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">        s += a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">sort</span>(a,a+n+m+<span class="number">1</span>);<span class="comment">//排序，便于找最大和最小值</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(!m)<span class="comment">//当m等于0时，直接输出所有数的和</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> res = a[n+m] - a[<span class="number">0</span>];<span class="comment">//至少有一个正号一个负号</span></span><br><span class="line">    </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; n + m; i++) res += <span class="built_in">abs</span>(a[i]);<span class="comment">//中间的数任意加正负号使之变成绝对值</span></span><br><span class="line">    </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    </span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
        <category>习题</category>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>算法</tag>
        <tag>Acwing</tag>
        <tag>贪心</tag>
      </tags>
  </entry>
  <entry>
    <title>acwing 蓝桥杯辅导课双指针、BFS与图论章节习题</title>
    <url>/2024/03/04/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E5%8F%8C%E6%8C%87%E9%92%88%E3%80%81BFS%E4%B8%8E%E5%9B%BE%E8%AE%BA/</url>
    <content><![CDATA[<h1 id="1238-日志统计"><a href="#1238-日志统计" class="headerlink" title="1238. 日志统计"></a>1238. 日志统计</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>小明维护着一个程序员论坛。现在他收集了一份”点赞”日志，日志共有 <em>N</em></p>
<p> 行。其中每一行的格式是：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ts id  </span><br></pre></td></tr></table></figure>

<span id="more"></span>表示在 ts 时刻编号 id的帖子收到一个”赞”。  现在小明想统计有哪些帖子曾经是”热帖”。如果一个帖子曾在任意一个长度为 *D* 的时间段内收到不少于 *K* 个赞，小明就认为这个帖子曾是”热帖”。  

<p>具体来说，如果存在某个时刻 <em>T</em> 满足该帖在 [<em>T</em>,<em>T</em>+<em>D</em>) 这段时间内(注意是左闭右开区间)收到不少于 <em>K</em> 个赞，该帖就曾是”热帖”。  </p>
<p>给定日志，请你帮助小明统计出所有曾是”热帖”的帖子编号。  </p>
<h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含三个整数 <em>N</em>,<em>D</em>,<em>K</em>。  </p>
<p>以下 <em>N</em>行每行一条日志，包含两个整数 <em>t**s</em> 和 <em>i**d</em>。</p>
<h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>按从小到大的顺序输出热帖 <em>i**d</em>。</p>
<p>每个 <em>id</em> 占一行。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>K</em>≤<em>N</em>≤10^5^,<br>0≤<em>t</em>s*,<em>i</em>d<em>≤10^5^,<br>1≤</em>D*≤10000</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7 10 2</span><br><span class="line">0 1</span><br><span class="line">0 10</span><br><span class="line">10 10</span><br><span class="line">10 1</span><br><span class="line">9 1</span><br><span class="line">100 3</span><br><span class="line">100 3</span><br></pre></td></tr></table></figure>

<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">3</span><br></pre></td></tr></table></figure>

<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>（双指针）<a href="https://www.acwing.com/solution/content/16049/">题解参考</a></p>
<p>给定点赞时间 ts 和点赞的 id ，要求时间范围 d 内某个 id 得到点赞的数量大于 k ，输出 k </p>
<h2 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> cnt[N];<span class="comment">//cnt[i]存id为i的获赞数量</span></span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"></span><br><span class="line">pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;pi[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,d,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;n,&amp;d,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;pi[i].first,&amp;pi[i].second);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(pi,pi+n);<span class="comment">//按照first（时间）排个序</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; n; i++)&#123;<span class="comment">//i先移动，j后移动，j最开始指向0，当i与j的时间范围跨度超过d时，j当前的id的点赞就无效了</span></span><br><span class="line">        cnt[pi[i].second]++;<span class="comment">//当前的这个id点赞有效，数量加一</span></span><br><span class="line">        <span class="keyword">while</span>(pi[i].first-pi[j].first &gt;= d)&#123;<span class="comment">//当点赞的时间太久远时</span></span><br><span class="line">            cnt[pi[j].second]--;<span class="comment">//最开始的那个id的赞就无效了</span></span><br><span class="line">            j ++;<span class="comment">//j要往后移动</span></span><br><span class="line">        &#125;<span class="comment">//这个循环直到j所代表的赞不过期时</span></span><br><span class="line">        <span class="keyword">if</span>(cnt[pi[i].second] &gt;= k)&#123;<span class="comment">//此id点赞数量满足条件</span></span><br><span class="line">            st[pi[i].second] = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">100000</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(st[i])&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="1101-献给阿尔吉侬的花束"><a href="#1101-献给阿尔吉侬的花束" class="headerlink" title="1101. 献给阿尔吉侬的花束"></a>1101. 献给阿尔吉侬的花束</h1><p>（广度优先搜索）</p>
<h2 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h2><p>阿尔吉侬是一只聪明又慵懒的小白鼠，它最擅长的就是走各种各样的迷宫。今天它要挑战一个非常大的迷宫，研究员们为了鼓励阿尔吉侬尽快到达终点，就在终点放了一块阿尔吉侬最喜欢的奶酪。现在研究员们想知道，如果阿尔吉侬足够聪明，它最少需要多少时间就能吃到奶酪。</p>
<p>迷宫用一个 R×C的字符矩阵来表示。字符 S 表示阿尔吉侬所在的位置，字符 E 表示奶酪所在的位置，字符 # 表示墙壁，字符 . 表示可以通行。</p>
<p>阿尔吉侬在 1 个单位时间内可以从当前的位置走到它上下左右四个方向上的任意一个位置，但不能走出地图边界。</p>
<h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行是一个正整数 T，表示一共有 T 组数据。</p>
<p>每一组数据的第一行包含了两个用空格分开的正整数 R 和 C，表示地图是一个 R×C 的矩阵。</p>
<p>接下来的 R 行描述了地图的具体内容，每一行包含了 C�个字符。字符含义如题目描述中所述。保证有且仅有一个 S 和 E。</p>
<h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>对于每一组数据，输出阿尔吉侬吃到奶酪的最少单位时间。</p>
<p>若阿尔吉侬无法吃到奶酪，则输出“oop!”（只输出引号里面的内容，不输出引号）。</p>
<p>每组数据的输出结果占一行。</p>
<h4 id="数据范围-1"><a href="#数据范围-1" class="headerlink" title="数据范围"></a>数据范围</h4><p>1&lt;T≤10<br>2≤R,C≤200</p>
<h4 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">3 4</span><br><span class="line">.S..</span><br><span class="line">###.</span><br><span class="line">..E.</span><br><span class="line">3 4</span><br><span class="line">.S..</span><br><span class="line">.E..</span><br><span class="line">....</span><br><span class="line">3 4</span><br><span class="line">.S..</span><br><span class="line">####</span><br><span class="line">..E.</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">1</span><br><span class="line">oop!</span><br></pre></td></tr></table></figure>

<h2 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h2><p>就是个迷宫问题，找最短的从开始到结束的位置。用广度优先搜索 bfs ，即将每个位置的 x 和 y 坐标看成一个整体加入队列，</p>
<ul>
<li><p>首先将起始坐标加入队列</p>
</li>
<li><p>当队列非空时</p>
</li>
<li><p>取出队首元素</p>
</li>
<li><p>找它的合法的上下左右的元素，依次加入，每找出一个合法的元素更行一下它的距离，即上一步的距离加一</p>
</li>
<li><p>返回队列非空循环进行</p>
</li>
</ul>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">210</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> g[N][N];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> dist[N][N];<span class="comment">//存到i,j的路程</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">(PII start, PII end)</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dist,<span class="number">-1</span>,<span class="keyword">sizeof</span> dist);</span><br><span class="line">    queue&lt;PII&gt; q;</span><br><span class="line">    <span class="type">int</span> dx[<span class="number">4</span>] = &#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,dy[<span class="number">4</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;<span class="comment">//为了方便判断合法坐标，表示上下左右</span></span><br><span class="line">    q.<span class="built_in">push</span>(start);<span class="comment">//将起始点加入队列</span></span><br><span class="line">    dist[start.x][start.y] = <span class="number">0</span>;<span class="comment">//起始点的距离为0</span></span><br><span class="line">    <span class="keyword">while</span>(q.<span class="built_in">size</span>())&#123;<span class="comment">//队列非空时</span></span><br><span class="line">        PII t = q.<span class="built_in">front</span>();<span class="comment">//取出队首元素</span></span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="comment">//找当前这个点的可行路径（即上下左右）</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)&#123;</span><br><span class="line">            <span class="type">int</span> x = t.x + dx[i];</span><br><span class="line">            <span class="type">int</span> y = t.y + dy[i];</span><br><span class="line">            <span class="keyword">if</span>(x &lt; <span class="number">0</span> || x &gt;= n || y &lt; <span class="number">0</span> || y &gt;= m) <span class="keyword">continue</span>;<span class="comment">//这个点是否合法</span></span><br><span class="line">            <span class="keyword">if</span>(dist[x][y] != <span class="number">-1</span>) <span class="keyword">continue</span>;<span class="comment">//当前的路已经走过了</span></span><br><span class="line">            <span class="keyword">if</span>(g[x][y] == <span class="string">&#x27;#&#x27;</span>) <span class="keyword">continue</span>;<span class="comment">//是墙壁就不能走</span></span><br><span class="line">            dist[x][y] = dist[t.x][t.y] + <span class="number">1</span>;<span class="comment">//更新新走的这条路的总路径</span></span><br><span class="line">            <span class="comment">//当找到最后一个点时，直接结束</span></span><br><span class="line">            <span class="keyword">if</span>(end == <span class="built_in">make_pair</span>(x,y)) <span class="keyword">return</span> dist[x][y];</span><br><span class="line">            q.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(x,y));<span class="comment">//将新的这个点加入</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,g[i]);</span><br><span class="line">        PII start,end;<span class="comment">//判断起始和结束位置</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(g[i][j] == <span class="string">&#x27;S&#x27;</span>) start = &#123;i,j&#125;;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(g[i][j] == <span class="string">&#x27;E&#x27;</span>) end = &#123;i,j&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> distance = <span class="built_in">bfs</span>(start,end);</span><br><span class="line">        <span class="keyword">if</span>(distance == <span class="number">-1</span>) <span class="built_in">printf</span>(<span class="string">&quot;oop!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,distance);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="1096-地牢大师"><a href="#1096-地牢大师" class="headerlink" title="1096. 地牢大师"></a>1096. 地牢大师</h1><h2 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h2><p>你现在被困在一个三维地牢中，需要找到最快脱离的出路！</p>
<p>地牢由若干个单位立方体组成，其中部分不含岩石障碍可以直接通过，部分包含岩石障碍无法通过。</p>
<p>向北，向南，向东，向西，向上或向下移动一个单元距离均需要一分钟。</p>
<p>你不能沿对角线移动，迷宫边界都是坚硬的岩石，你不能走出边界范围。</p>
<p>请问，你有可能逃脱吗？如果可以，需要多长时间？</p>
<h4 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入包含多组测试数据。</p>
<p>每组数据第一行包含三个整数 L,R,C 分别表示地牢层数，以及每一层地牢的行数和列数。</p>
<p>接下来是 L 个 R 行 C 列的字符矩阵，用来表示每一层地牢的具体状况。</p>
<p>每个字符用来描述一个地牢单元的具体状况。</p>
<p>其中, 充满岩石障碍的单元格用”#”表示，不含障碍的空单元格用”.”表示，你的起始位置用”S”表示，终点用”E”表示。</p>
<p>每一个字符矩阵后面都会包含一个空行。</p>
<p>当输入一行为”0 0 0”时，表示输入终止。</p>
<h4 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h4><p>每组数据输出一个结果，每个结果占一行。</p>
<p>如果能够逃脱地牢，则输出”Escaped in x minute(s).”，其中X为逃脱所需最短时间。</p>
<p>如果不能逃脱地牢，则输出”Trapped!”。</p>
<h4 id="数据范围-2"><a href="#数据范围-2" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤L,R,C≤100</p>
<h4 id="输入样例：-2"><a href="#输入样例：-2" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 4 5</span><br><span class="line">S....</span><br><span class="line">.###.</span><br><span class="line">.##..</span><br><span class="line">###.#</span><br><span class="line"></span><br><span class="line">#####</span><br><span class="line">#####</span><br><span class="line">##.##</span><br><span class="line">##...</span><br><span class="line"></span><br><span class="line">#####</span><br><span class="line">#####</span><br><span class="line">#.###</span><br><span class="line">####E</span><br><span class="line"></span><br><span class="line">1 3 3</span><br><span class="line">S##</span><br><span class="line">#E#</span><br><span class="line">###</span><br><span class="line"></span><br><span class="line">0 0 0</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-2"><a href="#输出样例：-2" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Escaped in 11 minute(s).</span><br><span class="line">Trapped</span><br></pre></td></tr></table></figure>

<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>还是用宽度优先搜索，不过注意是三维坐标</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line">    <span class="type">int</span> x,y,z;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> g[N][N][N];</span><br><span class="line"><span class="type">int</span> dist[N][N][N];</span><br><span class="line"><span class="type">int</span> t,m,n;</span><br><span class="line"><span class="comment">//三维坐标对应位置改变的坐标</span></span><br><span class="line"><span class="type">int</span> dx[<span class="number">6</span>] = &#123;<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> dy[<span class="number">6</span>] = &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> dz[<span class="number">6</span>] = &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">(node start,node end)</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dist,<span class="number">-1</span>,<span class="keyword">sizeof</span> dist);</span><br><span class="line">    queue&lt;node&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(start);</span><br><span class="line">    <span class="comment">//注意是开始的距离赋值为0</span></span><br><span class="line">    dist[start.x][start.y][start.z] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(q.<span class="built_in">size</span>())&#123;</span><br><span class="line">        node tm = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)&#123;</span><br><span class="line">            <span class="type">int</span> x = tm.x + dx[i], y = tm.y + dy[i], z = tm.z + dz[i];</span><br><span class="line">            <span class="comment">//不合法的点</span></span><br><span class="line">            <span class="keyword">if</span>(x &lt; <span class="number">0</span> || x &gt;= t || y &lt; <span class="number">0</span> || y &gt;= m || z &lt; <span class="number">0</span> || z &gt;= n) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(dist[x][y][z] != <span class="number">-1</span>) <span class="keyword">continue</span>;<span class="comment">//已经访问过了</span></span><br><span class="line">            <span class="keyword">if</span>(g[x][y][z] == <span class="string">&#x27;#&#x27;</span>) <span class="keyword">continue</span>;<span class="comment">//墙壁不访问</span></span><br><span class="line">            dist[x][y][z] = dist[tm.x][tm.y][tm.z] + <span class="number">1</span>;</span><br><span class="line">            node temp;</span><br><span class="line">            temp.x = x,temp.y = y,temp.z = z;</span><br><span class="line">            <span class="keyword">if</span>(z == end.z &amp;&amp; x == end.x &amp;&amp; y == end.y)&#123;</span><br><span class="line">                <span class="keyword">return</span> dist[x][y][z];</span><br><span class="line">            &#125;</span><br><span class="line">            q.<span class="built_in">push</span>(temp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    node start,end;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;t,&amp;m,&amp;n), t || m || n)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; t; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++)&#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;g[i][j]);</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; n; k++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(g[i][j][k] == <span class="string">&#x27;S&#x27;</span>)&#123;</span><br><span class="line">                        start = &#123;i,j,k&#125;;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(g[i][j][k] == <span class="string">&#x27;E&#x27;</span>)&#123;</span><br><span class="line">                        end = &#123;i,j,k&#125;;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> distance = <span class="built_in">bfs</span>(start,end);</span><br><span class="line">        <span class="keyword">if</span>(distance == <span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Trapped!\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Escaped in %d minute(s).\n&quot;</span>,distance);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







<h1 id="1113-红与黑"><a href="#1113-红与黑" class="headerlink" title="1113. 红与黑"></a>1113. 红与黑</h1><h2 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h2><p>有一间长方形的房子，地上铺了红色、黑色两种颜色的正方形瓷砖。</p>
<p>你站在其中一块黑色的瓷砖上，只能向相邻（上下左右四个方向）的黑色瓷砖移动。</p>
<p>请写一个程序，计算你总共能够到达多少块黑色的瓷砖。</p>
<h4 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入包括多个数据集合。</p>
<p>每个数据集合的第一行是两个整数 <em>W</em> 和 <em>H</em>，分别表示 <em>x</em> 方向和 <em>y</em> 方向瓷砖的数量。</p>
<p>在接下来的 <em>H</em> 行中，每行包括 <em>W</em> 个字符。每个字符表示一块瓷砖的颜色，规则如下</p>
<p>1）‘.’：黑色的瓷砖；<br> 2）‘#’：红色的瓷砖；<br> 3）‘@’：黑色的瓷砖，并且你站在这块瓷砖上。该字符在每个数据集合中唯一出现一次。</p>
<p>当在一行中读入的是两个零时，表示输入结束。</p>
<h4 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h4><p>对每个数据集合，分别输出一行，显示你从初始位置出发能到达的瓷砖数(记数时包括初始位置的瓷砖)。</p>
<h4 id="数据范围-3"><a href="#数据范围-3" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>W</em>,<em>H</em>≤20</p>
<h4 id="输入样例：-3"><a href="#输入样例：-3" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6 9 </span><br><span class="line">....#. </span><br><span class="line">.....# </span><br><span class="line">...... </span><br><span class="line">...... </span><br><span class="line">...... </span><br><span class="line">...... </span><br><span class="line">...... </span><br><span class="line">#@...# </span><br><span class="line">.#..#. </span><br><span class="line">0 0</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-3"><a href="#输出样例：-3" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">45</span><br></pre></td></tr></table></figure>

<h2 id="题意-2"><a href="#题意-2" class="headerlink" title="题意"></a>题意</h2><p>要求能到达的所有格子（不是一趟能到达的格子）</p>
<h2 id="相关代码-1"><a href="#相关代码-1" class="headerlink" title="相关代码"></a>相关代码</h2><h3 id="bfs（宽度优先搜索）"><a href="#bfs（宽度优先搜索）" class="headerlink" title="bfs（宽度优先搜索）"></a>bfs（宽度优先搜索）</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> g[N][N];</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> st[N][N];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">(PII start)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">1</span>;</span><br><span class="line">    queue&lt;PII&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(start);</span><br><span class="line">    <span class="type">int</span> dx[<span class="number">4</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;,dy[<span class="number">4</span>] = &#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    st[start.x][start.y] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">while</span>(q.<span class="built_in">size</span>())&#123;</span><br><span class="line">        PII t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)&#123;</span><br><span class="line">            <span class="type">int</span> x = t.x + dx[i], y = t.y + dy[i];</span><br><span class="line">            <span class="keyword">if</span>(x &lt; <span class="number">0</span> || x &gt;= m || y &lt; <span class="number">0</span> || y &gt;= n) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(st[x][y]) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(g[x][y] == <span class="string">&#x27;#&#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line">            st[x][y] = <span class="literal">true</span>;</span><br><span class="line">            cnt++;<span class="comment">//存所有的可行路径</span></span><br><span class="line">            q.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(x,y));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">while</span>(n&amp;&amp;m)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(st,<span class="number">0</span>,<span class="keyword">sizeof</span> st);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,g[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        PII start;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(g[i][j] == <span class="string">&#x27;@&#x27;</span>)&#123;</span><br><span class="line">                    start = &#123;i,j&#125;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in">bfs</span>(start));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="dfs（深度优先搜索）"><a href="#dfs（深度优先搜索）" class="headerlink" title="dfs（深度优先搜索）"></a>dfs（深度优先搜索）</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> g[N][N];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> dx[] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;,dy[] = &#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line">    g[x][y] = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)&#123;</span><br><span class="line">        <span class="type">int</span> a = x+dx[i],b = y+dy[i];</span><br><span class="line">        <span class="keyword">if</span>(a &lt; <span class="number">0</span> || a &gt;= m || b &lt; <span class="number">0</span> || b &gt;= n) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(g[a][b] == <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">            cnt+=<span class="built_in">dfs</span>(a,b);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">while</span>(n&amp;&amp;m)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,g[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> x,y;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(g[i][j] == <span class="string">&#x27;@&#x27;</span>)&#123;</span><br><span class="line">                    x = i;</span><br><span class="line">                    y = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in">dfs</span>(x,y));</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="1224-交换瓶子"><a href="#1224-交换瓶子" class="headerlink" title="1224. 交换瓶子"></a>1224. 交换瓶子</h1><h2 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a>题目</h2><p>有 N 个瓶子，编号 1∼N，放在架子上。</p>
<p>比如有 55 个瓶子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 1 3 5 4</span><br></pre></td></tr></table></figure>

<p>要求每次拿起 22 个瓶子，交换它们的位置。</p>
<p>经过若干次后，使得瓶子的序号为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 2 3 4 5</span><br></pre></td></tr></table></figure>

<p>对于这么简单的情况，显然，至少需要交换 2 次就可以复位。</p>
<p>如果瓶子更多呢？你可以通过编程来解决。</p>
<h4 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含一个整数 N，表示瓶子数量。</p>
<p>第二行包含 N个整数，表示瓶子目前的排列状况。</p>
<h4 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个正整数，表示至少交换多少次，才能完成排序。</p>
<h4 id="数据范围-4"><a href="#数据范围-4" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤N≤10000,</p>
<h4 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">3 1 2 5 4</span><br></pre></td></tr></table></figure>

<h4 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>

<h4 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">5 4 3 2 1</span><br></pre></td></tr></table></figure>

<h4 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>

<h2 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h2><p><img src="/%E5%8F%8C%E6%8C%87%E9%92%88%E3%80%81BFS%E4%B8%8E%E5%9B%BE%E8%AE%BA.assets/image-20230407145239024.png" alt="image-20230407145239024"></p>
<h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">10010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!st[i])&#123;</span><br><span class="line">            cnt++;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = i; !st[j]; j = a[j])&#123;</span><br><span class="line">                st[j] = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">               </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; n-cnt &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="1240-完全二叉树的权值"><a href="#1240-完全二叉树的权值" class="headerlink" title="1240. 完全二叉树的权值"></a>1240. 完全二叉树的权值</h1><h2 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a>题目</h2><p>给定一棵包含 <em>N</em> 个节点的完全二叉树，树上每个节点都有一个权值，按从上到下、从左到右的顺序依次是 <em>A</em>1,<em>A</em>2,⋅⋅⋅<em>A</em>N，如下图所示：</p>
<p><img src="/%E5%8F%8C%E6%8C%87%E9%92%88%E3%80%81BFS%E4%B8%8E%E5%9B%BE%E8%AE%BA.assets/19_2f0cae5817-QQ%E6%88%AA%E5%9B%BE20191205124611.png" alt="QQ截图20191205124611.png"> </p>
<p>现在小明要把相同深度的节点的权值加在一起，他想知道哪个深度的节点权值之和最大？</p>
<p>如果有多个深度的权值和同为最大，请你输出其中最小的深度。</p>
<p>注：根的深度是 1。</p>
<h4 id="输入格式-5"><a href="#输入格式-5" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含一个整数 <em>N</em>。</p>
<p>第二行包含 <em>N</em> 个整数 <em>A</em>1,<em>A</em>2,⋅⋅⋅<em>A**N</em>。</p>
<h4 id="输出格式-5"><a href="#输出格式-5" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数代表答案。</p>
<h4 id="数据范围-5"><a href="#数据范围-5" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>N</em>≤10^5^,<br>−10^5^≤<em>Ai</em>≤10^5^</p>
<h4 id="输入样例：-4"><a href="#输入样例：-4" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7</span><br><span class="line">1 6 5 4 3 2 1</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-4"><a href="#输出样例：-4" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>

<h2 id="解题思路-2"><a href="#解题思路-2" class="headerlink" title="解题思路"></a>解题思路</h2><p>使用双指针算法，一个指向深度，一个指向节点数</p>
<h2 id="相关代码-2"><a href="#相关代码-2" class="headerlink" title="相关代码"></a>相关代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ma = <span class="number">-1e18</span>;<span class="comment">//开long long，同时要存成最小的负数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> d = <span class="number">1</span>,i = <span class="number">1</span>; i &lt;= n; d++,i*=<span class="number">2</span>)&#123;<span class="comment">//d存层数，i存每一层开始的编号</span></span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> s = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//每一层有2的d-1次方个</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = i; j &lt; i + (<span class="number">1</span>&lt;&lt;d - <span class="number">1</span>)  &amp;&amp; j &lt;= n; j++)&#123;</span><br><span class="line">            s+=a[j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ma &lt;= s) &#123;</span><br><span class="line">            ma = s;</span><br><span class="line">            res = d;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
        <category>习题</category>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>算法</tag>
        <tag>双指针</tag>
        <tag>BFS</tag>
        <tag>图论</tag>
        <tag>Acwing</tag>
      </tags>
  </entry>
  <entry>
    <title>acwing 蓝桥杯辅导课数学与简单DP章节习题</title>
    <url>/2024/03/04/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E6%95%B0%E5%AD%A6%E4%B8%8E%E7%AE%80%E5%8D%95DP/</url>
    <content><![CDATA[<h2 id="1205-买不到的数目"><a href="#1205-买不到的数目" class="headerlink" title="1205. 买不到的数目"></a>1205. 买不到的数目</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/1207/">题目</a></h3><p>小明开了一家糖果店。</p>
<p>他别出心裁：把水果糖包成4颗一包和7颗一包的两种。</p>
<p>糖果不能拆包卖。<span id="more"></span></p>
<p>小朋友来买糖的时候，他就用这两种包装来组合。</p>
<p>当然有些糖果数目是无法组合出来的，比如要买 10 颗糖。</p>
<p>你可以用计算机测试一下，在这种包装情况下，最大不能买到的数量是17。</p>
<p>大于17的任何数字都可以用4和7组合出来。</p>
<p>本题的要求就是在已知两个包装的数量时，求最大不能组合出的数字。</p>
<h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>两个正整数 <em>n</em>,<em>m</em>，表示每种包装中糖的颗数。</p>
<h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>一个正整数，表示最大不能买到的糖数。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>2≤<em>n</em>,<em>m</em>≤1000，<br> 保证数据一定有解。</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4 7</span><br></pre></td></tr></table></figure>

<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">17</span><br></pre></td></tr></table></figure>

<h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>输入两个数，求这两个数最大不能组合出的数字</p>
<h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>先用暴力打表找出规律，再直接带规律就行</p>
<p>用dfs</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m,n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(x &gt;= m &amp;&amp; <span class="built_in">dfs</span>(x-m)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(x &gt;= n &amp;&amp; <span class="built_in">dfs</span>(x-n)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">1000</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">dfs</span>(i)) res=i;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入 输出</span><br><span class="line">3 2  1</span><br><span class="line">3 4  5</span><br><span class="line">3 5  7</span><br><span class="line">3 7  11</span><br><span class="line">3 8  13</span><br><span class="line">m n  res</span><br></pre></td></tr></table></figure>

<p>当m&#x3D;3时，res&#x3D;2n-3</p>
<figure class="highlight plaintext"><figcaption><span>输出</span></figcaption><table><tr><td class="code"><pre><span class="line">5 2 3</span><br><span class="line">5 3 7</span><br><span class="line">5 4 11</span><br><span class="line">5 6 19</span><br><span class="line">5 7 23</span><br><span class="line">m n  res</span><br></pre></td></tr></table></figure>

<p>当m&#x3D;5时，res&#x3D;4n-5;</p>
<p>所以规律为</p>
<p>res &#x3D; n(m-1) - m &#x3D; nm - n - m;</p>
<h3 id="最终代码"><a href="#最终代码" class="headerlink" title="最终代码"></a>最终代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> m,n;</span><br><span class="line">    cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line">    cout &lt;&lt; m*n-m-n &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1211-蚂蚁感冒"><a href="#1211-蚂蚁感冒" class="headerlink" title="1211. 蚂蚁感冒"></a>1211. 蚂蚁感冒</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/1213/">题目</a></h3><p>长 100厘米的细长直杆子上有 <em>n</em>只蚂蚁。它们的头有的朝左，有的朝右。 每只蚂蚁都只能沿着杆子向前爬，速度是 1 厘米&#x2F;秒。</p>
<p>当两只蚂蚁碰面时，它们会同时掉头往相反的方向爬行。这些蚂蚁中，有 1 只蚂蚁感冒了。</p>
<p>并且在和其它蚂蚁碰面时，会把感冒传染给碰到的蚂蚁。</p>
<p>请你计算，当所有蚂蚁都爬离杆子时，有多少只蚂蚁患上了感冒。</p>
<h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行输入一个整数 <em>n</em>, 表示蚂蚁的总数。接着的一行是 <em>n</em> 个用空格分开的整数 <em>X**i</em>, <em>X**i</em> 的绝对值表示蚂蚁离开杆子左边端点的距离。正值表示头朝右，负值表示头朝左，数据中不会出现 0 值，也不会出现两只蚂蚁占用同一位置。</p>
<p>其中，第一个数据代表的蚂蚁感冒了。</p>
<h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出1个整数，表示最后感冒蚂蚁的数目。</p>
<h4 id="数据范围-1"><a href="#数据范围-1" class="headerlink" title="数据范围"></a>数据范围</h4><p>1&lt;<em>n</em>&lt;50</p>
<p>,<br>0&lt;|<em>X**i</em>|&lt;100</p>
<h4 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">5 -2 8</span><br></pre></td></tr></table></figure>

<h4 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure>

<h4 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">-10 8 -20 12 25</span><br></pre></td></tr></table></figure>

<h4 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>

<h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>一根杆子上有n只蚂蚁，输入n和n只蚂蚁，正数表示向右，负数表示向左，数字代表距离，其中第一只蚂蚁感冒，当患有感冒的蚂蚁与没有感冒的蚂蚁碰上时，两只蚂蚁都会感冒，然后两只蚂蚁都会掉头，输出最后有多少只蚂蚁感冒。</p>
<h3 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h3><p>当两只蚂蚁<strong>相碰后掉头</strong>，就相当于这两只蚂蚁<strong>不掉头直接穿过</strong>，所以我们直接简化成所有蚂蚁都不掉头，而是直接穿过</p>
<p>这样向右和向左就分别有两种情况满足条件</p>
<p><img src="C:\Users\鑫霜\Desktop\FE61C4FA79123E4438C742E76147B4CC.jpg" alt="img"></p>
<p>可以分别统计右边向左走和左边向右走的蚂蚁数目，</p>
<p>当蚂蚁向左走时，如果一只左边向右走的蚂蚁都没有，则不会相撞，最后只有一只蚂蚁感冒。</p>
<p>其他情况则一定有一只蚂蚁从左边向右走，后面所有右边向左走的蚂蚁都要感冒，所以最后的蚂蚁数量直接是left+right+1</p>
<p>当蚂蚁向右走时同理可得。</p>
<h3 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">55</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> x[N];<span class="comment">//x[N]存输入的蚂蚁位置及方向</span></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin &gt;&gt; x[i];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> left=<span class="number">0</span>,right=<span class="number">0</span>;<span class="comment">//left表示左边向右走，right表示右边向左走</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">abs</span>(x[i]) &gt; <span class="built_in">abs</span>(x[<span class="number">0</span>]) &amp;&amp; x[i] &lt; <span class="number">0</span> ) right++;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">abs</span>(x[i]) &lt; <span class="built_in">abs</span>(x[<span class="number">0</span>]) &amp;&amp; x[i] &gt; <span class="number">0</span>) left++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>((x[<span class="number">0</span>] &gt; <span class="number">0</span> &amp;&amp; right == <span class="number">0</span>) || (x[<span class="number">0</span>] &lt; <span class="number">0</span> &amp;&amp; left ==<span class="number">0</span>)) cout &lt;&lt; <span class="number">1</span> &lt;&lt; endl;<span class="comment">//当一次都没有相碰时，只有一只蚂蚁感冒</span></span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; left + right + <span class="number">1</span> &lt;&lt; endl;<span class="comment">//因为最开始还有一只蚂蚁感冒，所以要加上最开始的一只蚂蚁</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>​          </p>
<h2 id="1216-饮料换购"><a href="#1216-饮料换购" class="headerlink" title="1216. 饮料换购"></a>1216. 饮料换购</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/1218/">题目</a></h3><p>乐羊羊饮料厂正在举办一次促销优惠活动。乐羊羊C型饮料，凭3个瓶盖可以再换一瓶C型饮料，并且可以一直循环下去(但不允许暂借或赊账)。</p>
<p>请你计算一下，如果小明不浪费瓶盖，尽量地参加活动，那么，对于他初始买入的 <em>n</em> 瓶饮料，最后他一共能喝到多少瓶饮料。</p>
<h4 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入一个整数 <em>n</em>,表示初始买入的饮料数量。</p>
<h4 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，表示一共能够喝到的饮料数量。</p>
<h4 id="数据范围-2"><a href="#数据范围-2" class="headerlink" title="数据范围"></a>数据范围</h4><p>0&lt;<em>n</em>&lt;10000</p>
<h4 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">100</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">149</span><br></pre></td></tr></table></figure>

<h3 id="相关代码-1"><a href="#相关代码-1" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,cnt=<span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> m=n;</span><br><span class="line">    <span class="keyword">while</span>(n/<span class="number">3</span> &gt;= <span class="number">1</span>)&#123;</span><br><span class="line">        cnt += n/<span class="number">3</span>;</span><br><span class="line">        n = n/<span class="number">3</span> + n%<span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; cnt+m &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<hr>
<h2 id="2-01背包问题"><a href="#2-01背包问题" class="headerlink" title="2. 01背包问题"></a>2. 01背包问题</h2><h3 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/2/">题目</a></h3><p>有 <em>N</em> 件物品和一个容量是 <em>V</em> 的背包。每件物品只能使用一次。第 <em>i</em> 件物品的体积是 <em>v**i</em>，价值是 <em>w**i</em>。</p>
<p>求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。 输出最大价值。</p>
<h4 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行两个整数，<em>N</em>，<em>V</em>，用空格隔开，分别表示物品数量和背包容积。接下来有 <em>N</em> 行，每行两个整数 <em>v**i</em>,<em>w**i</em>，用空格隔开，分别表示第 <em>i</em> 件物品的体积和价值。</p>
<h4 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，表示最大价值。</p>
<h4 id="数据范围-3"><a href="#数据范围-3" class="headerlink" title="数据范围"></a>数据范围</h4><p>0&lt;<em>N</em>,<em>V</em>≤1000<br>0&lt;<em>v**i</em>,<em>w**i</em>≤1000</p>
<h4 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4 5</span><br><span class="line">1 2</span><br><span class="line">2 4</span><br><span class="line">3 4</span><br><span class="line">4 5</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-2"><a href="#输出样例：-2" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8</span><br></pre></td></tr></table></figure>

<h3 id="解题思路-2"><a href="#解题思路-2" class="headerlink" title="解题思路"></a>解题思路</h3><p><img src="https://s2.loli.net/2024/03/04/EjGYrD15Hfebz4P.png" alt="image-20220224214216658"></p>
<p><code>f[i][j]</code>代表前 i 个物品，总体积为 j 的物品价值，每一个<code>f[i][j]</code>要与前面的<code>f[i-1][j]</code>相联系</p>
<ul>
<li><p>如果选第 i 个物品，那么<code>f[i][j]=f[i-1][j-v[i]]+w[i]</code>，即<strong>前 i 个物品总体积为 j 的物品价值就是之前 i-1 个物品，体积为 j-v[i] 的物品的价值加上第 i 个物品的价值 w[i]</strong></p>
</li>
<li><p>如果不选第 i 个物品，那么<code>f[i][j]=f[i-1][j]</code>，即价值就是前 i-1 个物品的价值</p>
</li>
</ul>
<p>而我们要求的是最优解，就在两者之间取最大值</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> f[N][N];<span class="comment">//f[i][j]表示前i个物品，总体积为j的物品的价值</span></span><br><span class="line"><span class="type">int</span> v[N],w[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;<span class="comment">//n代表数量，m代表体积</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; v[i] &gt;&gt; w[i];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            f[i][j]=f[i<span class="number">-1</span>][j];</span><br><span class="line">            <span class="keyword">if</span>(j&gt;=v[i])&#123;</span><br><span class="line">                f[i][j]=<span class="built_in">max</span>(f[i][j],f[i<span class="number">-1</span>][j-v[i]]+w[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; f[n][m] &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>优化版本</strong></p>
<p>因为<code>f[i][j]</code>求的是每一个体积的最优解，而我们只需要求体积为 m 的最优解，所以可以将二维简化为一维</p>
<p><code>f[j]</code>表示的是，n 件物品，体积为 j 的最大价值</p>
<p>体积必须要从 m 开始列举</p>
<ul>
<li>二维情况下，每一个<code>f[i][j]</code>都是由上一轮 i-1 状态得来的</li>
<li>一维情况下，如果从小到大列举，第 i 个体积较大的价值还是由当前的第 i 轮物品推出来的，而不是 i-1 个物品。即在第 i 轮中，算过第 i 个较小体积物品的价值后，后面算较大的体积的物品价值时还是用的当前第 i 轮的较小的物品价值，本来用的应该是上一轮较小的物品价值（因为有两重循环）</li>
<li>直接逆序后，每一个较小的都是上一轮的，就不会出现这种问题</li>
</ul>
<p><a href="https://www.acwing.com/solution/content/1374/">下面为优化参考</a></p>
<p>将状态f[i][j]优化到一维f[j]，实际上只需要做一个等价变形。</p>
<p>为什么可以这样变形呢？我们定义的状态f[i][j]可以求得任意合法的i与j最优解，但题目只需要求得最终状态f[n][m]，因此我们只需要一维的空间来更新状态。</p>
<p>（1）状态f[j]定义：N件物品，背包容量j下的最优解。</p>
<p>（2）注意枚举背包容量j必须从m开始。</p>
<p>（3）为什么一维情况下枚举背包容量需要逆序？在二维情况下，状态f[i][j]是由上一轮i - 1的状态得来的，f[i][j]与f[i - 1][j]是独立的。而优化到一维后，如果我们还是正序，则有f[较小体积]更新到f[较大体积]，则有可能本应该用第i-1轮的状态却用的是第i轮的状态。</p>
<p>（4）例如，一维状态第i轮对体积为 3</p>
<p>的物品进行决策，则f[7]由f[4]更新而来，这里的f[4]正确应该是f[i - 1][4]，但从小到大枚举j这里的f[4]在第i轮计算却变成了f[i][4]。当逆序枚举背包容量j时，我们求f[7]同样由f[4]更新，但由于是逆序，这里的f[4]还没有在第i轮计算，所以此时实际计算的f[4]仍然是f[i - 1][4]。</p>
<p>（5）简单来说，一维情况正序更新状态f[j]需要用到前面计算的状态已经被「<strong>污染</strong>」，逆序则不会有这样的问题。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> f[N];<span class="comment">//f[j]总体积为j的物品的价值</span></span><br><span class="line"><span class="type">int</span> v[N],w[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; v[i] &gt;&gt; w[i];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=m;j&gt;=v[i];j--)&#123;<span class="comment">//体积必须从最大开始</span></span><br><span class="line">            f[j]=<span class="built_in">max</span>(f[j],f[j-v[i]]+w[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; f[m] &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://www.acwing.com/solution/content/1374/">参考深蓝</a>加上自己的一点小理解</p>
<h2 id="1015-摘花生"><a href="#1015-摘花生" class="headerlink" title="1015. 摘花生"></a>1015. 摘花生</h2><h3 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/1017/">题目</a></h3><p>Hello Kitty想摘点花生送给她喜欢的米老鼠。</p>
<p>她来到一片有网格状道路的矩形花生地(如下图)，从西北角进去，东南角出来。</p>
<p>地里每个道路的交叉点上都有种着一株花生苗，上面有若干颗花生，经过一株花生苗就能摘走该它上面所有的花生。</p>
<p>Hello Kitty只能向东或向南走，不能向西或向北走。</p>
<p>问Hello Kitty最多能够摘到多少颗花生。</p>
<p><img src="https://cdn.acwing.com/media/article/image/2019/09/12/19_a8509f26d5-1.gif" alt="1.gif"> </p>
<h4 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行是一个整数T，代表一共有多少组数据。</p>
<p>接下来是T组数据。</p>
<p>每组数据的第一行是两个整数，分别代表花生苗的行数R和列数 C。</p>
<p>每组数据的接下来R行数据，从北向南依次描述每行花生苗的情况。每行数据有C个整数，按从西向东的顺序描述了该行每株花生苗上的花生数目M。</p>
<h4 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式"></a>输出格式</h4><p>对每组输入数据，输出一行，内容为Hello Kitty能摘到得最多的花生颗数。</p>
<h4 id="数据范围-4"><a href="#数据范围-4" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>T</em>≤100,<br>1≤<em>R</em>,<em>C</em>≤100,<br>0≤<em>M</em>≤1000</p>
<h4 id="输入样例：-2"><a href="#输入样例：-2" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">2 2</span><br><span class="line">1 1</span><br><span class="line">3 4</span><br><span class="line">2 3</span><br><span class="line">2 3 4</span><br><span class="line">1 6 5</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-3"><a href="#输出样例：-3" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">16</span><br></pre></td></tr></table></figure>

<h3 id="解题思路-3"><a href="#解题思路-3" class="headerlink" title="解题思路"></a>解题思路</h3><p><img src="https://s2.loli.net/2024/03/04/SRQenDrmKCG2qH9.png" alt="image-20220224214139664"></p>
<p>用<code>f[i][j]</code>存从(1,1)到 (i,j) 的最大花生数，<strong>每一个<code>f[i][j]</code>都是由上一个<code>f[i-1][j]</code>或者<code>f[i][j-1]</code>移动一步得来的</strong>，所以<code>f[i][j]</code>就是两者之间的最大值加上 (i,j) 的花生数即可</p>
<h3 id="相关代码-2"><a href="#相关代码-2" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">110</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> f[N][N];<span class="comment">//f[i][j]存从(1,1)到(i,j)的最大值</span></span><br><span class="line"><span class="type">int</span> w[N][N];</span><br><span class="line"><span class="type">int</span> m,n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">                cin &gt;&gt; w[i][j];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">                f[i][j]=<span class="built_in">max</span>(f[i][j<span class="number">-1</span>],f[i<span class="number">-1</span>][j])+w[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; f[m][n] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="895-最长上升子序列"><a href="#895-最长上升子序列" class="headerlink" title="895. 最长上升子序列"></a>895. 最长上升子序列</h2><h3 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/897/">题目</a></h3><p>给定一个长度为 <em>N</em> 的数列，求数值严格单调递增的子序列的长度最长是多少。</p>
<h4 id="输入格式-5"><a href="#输入格式-5" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含整数 <em>N</em>。</p>
<p>第二行包含 <em>N</em> 个整数，表示完整序列。</p>
<h4 id="输出格式-5"><a href="#输出格式-5" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，表示最大长度。</p>
<h4 id="数据范围-5"><a href="#数据范围-5" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>N</em>≤1000，<br>−10的9次方≤数列中的数≤10的9次方</p>
<h4 id="输入样例：-3"><a href="#输入样例：-3" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7</span><br><span class="line">3 1 2 1 8 5 6</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-4"><a href="#输出样例：-4" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>

<h3 id="解题思路-4"><a href="#解题思路-4" class="headerlink" title="解题思路"></a>解题思路</h3><p><img src="https://s2.loli.net/2024/03/04/GCx1VjTwrY5y69A.png" alt="image-20220224202342072"></p>
<ul>
<li><p><code>f[i]</code>表示从<code>a[1]</code>到<code>a[i]</code>的最大单调递增子序列的值</p>
</li>
<li><p>在状态计算时，我们从<code>a[i]</code>的前一个元素<code>a[k]</code>（倒数第二个元素）开始考虑，当满足<code>a[k]&lt;a[i]</code>时，则<code>f[i]=f[k]+1</code></p>
</li>
<li><p>由于<strong>倒数第二个元素的值不确定，有多种方案</strong>，可能为<code>a[1]</code>到<code>a[i-1]</code>中的一个，所以我们再用一重循环来找出这些所有情况的最大值</p>
</li>
</ul>
<h3 id="相关代码-3"><a href="#相关代码-3" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> f[N];<span class="comment">//f[i]表示从1到i的最大单调递增序列的值</span></span><br><span class="line"><span class="type">int</span> w[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; w[i];</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        f[i]=<span class="number">1</span>;<span class="comment">//当只有i一个元素时，结果为1</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;i;j++)<span class="comment">//找出倒数第二个元素为1到i-1中的一个时，f[i]的最大值</span></span><br><span class="line">            <span class="comment">//（每一个f[j]在第i轮中都记录了1到j的最大单调递增序列的值，所以在i+1轮时，当倒数第二个元素是a[j]时，如果满足倒数第一个元素大于倒数第二个元素，f[i+1]的值直接就是f[i+1]与f[j]+1的最大值）</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(w[i]&gt;w[j]) f[i]=<span class="built_in">max</span>(f[i],f[j]+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        res=<span class="built_in">max</span>(res,f[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1212-地宫取宝"><a href="#1212-地宫取宝" class="headerlink" title="1212. 地宫取宝"></a>1212. 地宫取宝</h2><h3 id="题目-6"><a href="#题目-6" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/1214/">题目</a></h3><p>X 国王有一个地宫宝库，是 <em>n</em>×<em>m</em> 个格子的矩阵，每个格子放一件宝贝，每个宝贝贴着价值标签。地宫的入口在左上角，出口在右下角。</p>
<p>小明被带到地宫的入口，国王要求他只能向右或向下行走。走过某个格子时，如果那个格子中的宝贝价值比小明手中任意宝贝价值都大，小明就可以拿起它（当然，也可以不拿）。</p>
<p>当小明走到出口时，如果他手中的宝贝恰好是 <em>k</em> 件，则这些宝贝就可以送给小明。</p>
<p>请你帮小明算一算，在给定的局面下，他有多少种不同的行动方案能获得这 <em>k</em></p>
<p> 件宝贝。</p>
<h4 id="输入格式-6"><a href="#输入格式-6" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行 3 个整数，<em>n</em>,<em>m</em>,<em>k</em>，含义见题目描述。</p>
<p>接下来 <em>n</em> 行，每行有 <em>m</em> 个整数 <em>C**i</em></p>
<p> 用来描述宝库矩阵每个格子的宝贝价值。</p>
<h4 id="输出格式-6"><a href="#输出格式-6" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，表示正好取 <em>k</em> 个宝贝的行动方案数。</p>
<p>该数字可能很大，输出它对 1000000007 取模的结果。</p>
<h4 id="数据范围-6"><a href="#数据范围-6" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>n</em>,<em>m</em>≤50,<br>1≤<em>k</em>≤12,<br>0≤<em>C**i</em>≤12</p>
<h4 id="输入样例1：-1"><a href="#输入样例1：-1" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 2 2</span><br><span class="line">1 2</span><br><span class="line">2 1</span><br></pre></td></tr></table></figure>

<h4 id="输出样例1：-1"><a href="#输出样例1：-1" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>

<h4 id="输入样例2：-1"><a href="#输入样例2：-1" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 3 2</span><br><span class="line">1 2 3</span><br><span class="line">2 1 5</span><br></pre></td></tr></table></figure>

<h4 id="输出样例2：-1"><a href="#输出样例2：-1" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">14</span><br></pre></td></tr></table></figure>

<h3 id="解题思路-5"><a href="#解题思路-5" class="headerlink" title="解题思路"></a>解题思路</h3><p>（集合要保证不重不漏）</p>
<p>用一个四重数组<code>f[i][i][k][c]</code>表示所有从起点走到<code>(i,j)</code>,且已经取了 k 件物品，最后一个数是 c 的合法方案数</p>
<p><img src="https://s2.loli.net/2024/03/04/j3pR2zxeCDrSLUT.png" alt="image-20220226203753936"></p>
<ul>
<li>将<code>f[i][j][k][c]</code>的集合划分成如图几个部分，分别考虑每个部分的前一步</li>
</ul>
<h3 id="相关代码-4"><a href="#相关代码-4" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">55</span>,MOD=<span class="number">1000000007</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> f[N][N][<span class="number">13</span>][<span class="number">14</span>];<span class="comment">//</span></span><br><span class="line"><span class="type">int</span> w[N][N];</span><br><span class="line"><span class="type">int</span> n,m,k;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> res;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt;= m;j++)&#123;</span><br><span class="line">            cin &gt;&gt; w[i][j];</span><br><span class="line">            w[i][j]++;</span><br><span class="line">            <span class="comment">//因为初始化不选第一个宝贝是时，要保证价值是-1，这样后面如果有价值为0的才能选上</span></span><br><span class="line">            <span class="comment">//因为数组下标不能为负数，那就每个价值加1</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="comment">//初始化</span></span><br><span class="line">    f[<span class="number">1</span>][<span class="number">1</span>][<span class="number">1</span>][w[<span class="number">1</span>][<span class="number">1</span>]] = <span class="number">1</span>;<span class="comment">//选第一个宝贝</span></span><br><span class="line">    f[<span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;<span class="comment">//不选第一个宝贝</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">1</span> &amp;&amp; j == <span class="number">1</span>) <span class="keyword">continue</span>;<span class="comment">//第一个物品已经进行了初始化，不用考虑</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> u = <span class="number">0</span>; u &lt;= k; u++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> v = <span class="number">0</span>; v &lt;= <span class="number">13</span>; v++)&#123;</span><br><span class="line">                    <span class="type">int</span> &amp;val = f[i][j][u][v];<span class="comment">//用引用来简写</span></span><br><span class="line">                    val = (val + f[i<span class="number">-1</span>][j][u][v]) % MOD;<span class="comment">//向下走不选</span></span><br><span class="line">                    val = (val + f[i][j<span class="number">-1</span>][u][v]) % MOD;<span class="comment">//向右走不选</span></span><br><span class="line">                    <span class="keyword">if</span>(u &gt; <span class="number">0</span> &amp;&amp; w[i][j] == v)&#123;<span class="comment">//当要选择物品时，必须保证数量大于0同时价值与代表价值的下标相同</span></span><br><span class="line">                        <span class="keyword">for</span>(<span class="type">int</span> c = <span class="number">0</span>; c &lt; v; c++)&#123;<span class="comment">//查找前面所有价值比v小的情况</span></span><br><span class="line">                            <span class="comment">//c代表前一轮的最大的一个数</span></span><br><span class="line">                            val = (val + f[i<span class="number">-1</span>][j][u<span class="number">-1</span>][c]) % MOD;<span class="comment">//向下走选</span></span><br><span class="line">                            val = (val + f[i][j<span class="number">-1</span>][u<span class="number">-1</span>][c]) % MOD;<span class="comment">//向下走不选</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">13</span>;i++) res = (res+f[n][m][k][i]) % MOD;<span class="comment">//查找所有满足情况的条件加起来就是结果</span></span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="1214-波动数列"><a href="#1214-波动数列" class="headerlink" title="1214. 波动数列"></a>1214. 波动数列</h2><h3 id="题目-7"><a href="#题目-7" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/1216/">题目</a></h3><p>观察这个数列：1 3 0 2 -1 1 -2 …</p>
<p>这个数列中后一项总是比前一项增加2或者减少3，<strong>且每一项都为整数</strong>。</p>
<p>栋栋对这种数列很好奇，他想知道长度为 <em>n</em> 和为 <em>s</em> 而且后一项总是比前一项增加 <em>a</em> 或者减少 <em>b</em> 的整数数列可能有多少种呢？</p>
<h4 id="输入格式-7"><a href="#输入格式-7" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含四个整数 <em>n</em>,<em>s</em>,<em>a</em>,<em>b</em>，含义如前面所述。</p>
<h4 id="输出格式-7"><a href="#输出格式-7" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，包含一个整数，表示满足条件的方案数。</p>
<p>由于这个数很大，请输出方案数除以 100000007 的余数。</p>
<h4 id="数据范围-7"><a href="#数据范围-7" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>n</em>≤1000,<br>−109≤<em>s</em>≤109,<br>1≤<em>a</em>,<em>b</em>≤106</p>
<h4 id="输入样例：-4"><a href="#输入样例：-4" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4 10 2 3</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-5"><a href="#输出样例：-5" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>

<h4 id="样例解释"><a href="#样例解释" class="headerlink" title="样例解释"></a>样例解释</h4><p>两个满足条件的数列分别是2 4 1 3和7 4 1 -2。</p>
<h3 id="解题思路-6"><a href="#解题思路-6" class="headerlink" title="解题思路"></a>解题思路</h3><p> 设第一个数为<code>x</code>，则第二个数为<code>x+d1</code>，第三个数为<code>x+d1+d2</code> …。这里的d1，d2表示a或者−b，所以这个数列为：</p>
<p><code>x, x+d1, x+d1+d2, x+d1+d2+d3, …, x+d1+d2+…+dn−1</code>，</p>
<p>又因为数列之和为s，所以转化成：</p>
<p><code>n∗x+(n−1)∗d1+(n−2)∗d2+(n−3)∗d3+…+dn−1=s</code>（其中有两个变量，x和$d_i$组合，由于x的取值范围太大，因此将x进行转化，用$d_i$组合表示）</p>
<p>再进一步转化：</p>
<p>$( s−[(n−1)∗d1+(n−2)∗d2+(n−3)∗d3+…+dn−1] )&#x2F; n&#x3D;x$</p>
<p>因为x是任意整数，所以又转化成：</p>
<p> s 与<code>(n−1)∗d1+(n−2)∗d2+(n−3)∗d3+…+dn−1 </code>模n的余数相同。</p>
<p>(相当于单除小数部分要相同相减才能为整数，或者只有多余的数一样，减掉之后就刚好是倍数关系)</p>
<p><strong>因此问题就转化成求解合法的$d_i$组合个数</strong>（只要$d_i$组合确定，x就确定了，方案也就确定了）</p>
<p>合法就要求$d_i$组合的余数与s模n的余数相等，转化成组合问题，也就是动态规划问题</p>
<p><img src="https://s2.loli.net/2024/03/04/FZEPbUjAGqxnMdY.png" alt="image-20220301115959121"></p>
<p>f[i][j] 就表示前i项余数为j的方案个数（+a或者-b后得到的都是余数j，因此要上一轮两种方案合起来就是总的数量）</p>
<p>所以用<code>f[i][j]</code>将所有前 i 项，余数为 j 的方案存下来，最后的结果就是<code>f[n-1][s%n]</code></p>
<p>参考</p>
<p><a href="https://www.acwing.com/solution/content/9223/">optimjie</a></p>
<p><a href="https://www.acwing.com/solution/content/72795/">AcWing 1214. 波动数列（有公式详细推导） - AcWing</a></p>
<h3 id="相关代码-5"><a href="#相关代码-5" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1010</span>,MOD=<span class="number">100000007</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> f[N][N];<span class="comment">//f[i][j]表示只考虑前i项，且当前总和除以n，余数为j的方案数</span></span><br><span class="line"><span class="type">int</span> n,s,a,b;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get_mod</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span><span class="comment">//因为余数可能有负的，所以这里是求a除以b的正余数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (a % b + b) % b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; s &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    </span><br><span class="line">    f[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">            f[i][j] = (f[i<span class="number">-1</span>][<span class="built_in">get_mod</span>(j-i*a,n)]+ f[i<span class="number">-1</span>][<span class="built_in">get_mod</span>(j+i*b,n)]) % MOD;<span class="comment">//最后结果是两种情况之和</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; f[n<span class="number">-1</span>][<span class="built_in">get_mod</span>(s,n)] &lt;&lt; endl;<span class="comment">//下标是从0开始，f[n-1]就代表了第 n 项</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>[同余详解入门-CSDN博客](<a href="https://blog.csdn.net/shiyongyang/article/details/78108895#:~:text=%E5%90%8C%E4%BD%99%E5%85%B3%E7%B3%BB%EF%BC%9A%E5%90%8C%E4%BD%99%EF%BC%9A%E5%A6%82%E6%9E%9Ca%E5%92%8Cb%E9%99%A4%E4%BB%A5c%E7%9A%84%E4%BD%99%E6%95%B0%E7%9B%B8%E5%90%8C%EF%BC%8C%E5%B0%B1%E8%AF%B4a%E5%92%8Cb%E5%85%B3%E4%BA%8E%E6%A8%A1c%E5%90%8C%E4%BD%99%EF%BC%8C%E8%AE%B0%E4%BD%9Ca%E2%89%A1b">https://blog.csdn.net/shiyongyang/article/details/78108895#:~:text=同余关系：同余：如果a和b除以c的余数相同，就说a和b关于模c同余，记作a≡b</a> (mod,c)。 如果两个数a和b的差能够被m整除，那么就说a和b对模数m同余（关于m同余）。 比如，28-13%3D15除以5正好除尽，我们就说28和13对于模数5同于，因为15是5的整数倍。)</p>
]]></content>
      <categories>
        <category>C++</category>
        <category>习题</category>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>算法</tag>
        <tag>Acwing</tag>
        <tag>数学与简单DP</tag>
      </tags>
  </entry>
  <entry>
    <title>acwing 蓝桥杯辅导课数论章节习题</title>
    <url>/2024/03/04/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E6%95%B0%E8%AE%BA/</url>
    <content><![CDATA[<h2 id="欧几里得算法"><a href="#欧几里得算法" class="headerlink" title="欧几里得算法"></a>欧几里得算法</h2><p>a和b的最大公约数就等于 b和a mod b的最大公约数</p>
<p><img src="https://s2.loli.net/2024/03/04/JwN42IylYGhgbOF.png" alt="image-20220309164748729"><span id="more"></span></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b ? <span class="built_in">gcd</span>(b,a % b): a;<span class="comment">//b如果等于0的话，最大公约数就是a本身</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">gcd</span>(a,b) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="裴属定理-扩展欧几里得算法"><a href="#裴属定理-扩展欧几里得算法" class="headerlink" title="裴属定理(扩展欧几里得算法)"></a>裴属定理(扩展欧几里得算法)</h3><p>若a和b的最大公约数是d，则一定存在x,y，使得$ax+by &#x3D; d$（x,y是整数）</p>
<p>只要得出一组解$ax_0+by_0&#x3D;d$，则其他的解可以表示为</p>
<p>$x&#x3D;x_0+kb^&#96;$</p>
<p>$y &#x3D; y_0-ka^&#96;$</p>
<p>($b^<code>= &#123;b\over d&#125;,a^</code>&#x3D;{a\over d}$)</p>
<p>求其中一组可行解x<del>0</del>，y<del>0</del></p>
<p><img src="https://s2.loli.net/2024/03/04/pHJd2VjgTrB6nfq.png" alt="image-20220319193038114"></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Exgcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> &amp;x, <span class="type">int</span> &amp;y)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!b) &#123;</span><br><span class="line">    x = <span class="number">1</span>;</span><br><span class="line">    y = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="type">int</span> d = <span class="built_in">Exgcd</span>(b, a % b, x, y);</span><br><span class="line">  <span class="type">int</span> t = x;</span><br><span class="line">  x = y;</span><br><span class="line">  y = t - (a / b) * y;</span><br><span class="line">  <span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="算术基本定理"><a href="#算术基本定理" class="headerlink" title="算术基本定理"></a><a href="https://www.cnblogs.com/liugl7/p/6263221.html">算术基本定理</a></h2><h3 id="算数基本定理："><a href="#算数基本定理：" class="headerlink" title="算数基本定理："></a>算数基本定理：</h3><p>每一个大于1的数都可以被唯一的写成素数的乘积，在乘积中的素因子按照非降序排列，即所有的正整数都可以唯一的分成若干个质因子乘积的形式</p>
<p>正整数$x$的分解式$x&#x3D;p_1^{a_1}\times p_2^{a_2}\times p_3^{a_3}\times …\times p_k^{a_k}$称为n的标准分解式，其中$p1, p2, p3, ···,pk$ 是素数，$p1&lt;p2&lt;p3&lt;···&lt;pk$  且$a1,a2,a3···an$是正整数。</p>
<h3 id="x的约数个数为："><a href="#x的约数个数为：" class="headerlink" title="x的约数个数为："></a><strong>x的约数个数</strong>为：</h3><p>$(a_1+1)\times (a_2+1)\times (a_3+1)\times a_{n+1}$</p>
<p>证：x的约数可以任意从 p<del>1</del> 到 p<del>k</del> 之间选择， p<del>1</del> 有$(a_1+1)$种选法，p<del>k</del> 有$(a_k+1)$种选法，所以最终个数就是所有的乘起来（因为每一个数也可以不选，所以会加一）</p>
<h3 id="x的约数和："><a href="#x的约数和：" class="headerlink" title="x的约数和："></a>x的约数和：</h3><p>$(1+p_1+p_1^2+p_1^3+…+p_1^{a_1})(1+p_2+p_2^2+…+p_2^{a_2})…(1+p_k+p_k^2…+p_k^{a_k})$</p>
<p>展开即可，对应上面的约数个数（从每种之间选一个组成的乘积就是约数）</p>
<h2 id="线性筛法求素数-欧拉筛法"><a href="#线性筛法求素数-欧拉筛法" class="headerlink" title="线性筛法求素数(欧拉筛法)"></a>线性筛法求素数(欧拉筛法)</h2><p>大致原理为 从2开始筛选素数 将每次筛选好的素数存储到primes 数组中然后将含有该素数因子的合数全部筛掉 用此算法的时间复杂度可以达到O(n);</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> primes[N];<span class="comment">//存素数</span></span><br><span class="line"><span class="type">int</span> cnt;<span class="comment">//存素数个数</span></span><br><span class="line"><span class="type">bool</span> st[N];<span class="comment">//0代表是素数，1代表不是素数，刚开始先假设所有数都是素数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get_primes</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(st[i] == <span class="number">0</span>) primes[cnt++] = i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; cnt; j++)<span class="comment">//筛掉含有素数因子的合数</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(primes[j] * i &gt; n) <span class="keyword">break</span>;<span class="comment">//如果质数的i倍大于我们要求的范围，则结束循环</span></span><br><span class="line">            st[primes[j] * i] = <span class="literal">true</span>;<span class="comment">// 把质数的i倍筛掉</span></span><br><span class="line">             </span><br><span class="line">            <span class="keyword">if</span>(i % primes[j] == <span class="number">0</span>) <span class="keyword">break</span>;<span class="comment">// 通过最小质因子来筛，即如果i不是素数，则结束本轮循环，不用i来筛后面的合数</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">get_primes</span>(<span class="number">100000</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,primes[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://images0.cnblogs.com/i/574543/201407/172319235992161.png"></p>
<p>每一个合数都是用最小质因子筛掉的，比如6是用2筛掉的，10也是用2筛掉的，即 j &#x3D; 0 时，如上图</p>
<ul>
<li>因为prime中素数是递增的，所以如果i%prime[j]!&#x3D;0代表i的最小质因数还没有找到，即i的最小质因数大于prime[j]，也就是说prime[j]就是i*prime[j]的最小质因数，于是i*prime[j]被它的最小质因数筛掉了</li>
<li>如果当i%prime[j]&#x3D;&#x3D;0时，代表i的最小质因数是prime[j]，那么i*prime[j+k](k&gt;0)这个合数的最小质因数就不是prime[j+k]而是prime[j]了，所以i*prime[j+k]应该被prime[j]筛掉，而不是后续的prime[j+k]，于是在此时break</li>
</ul>
<p><a href="https://www.acwing.com/solution/content/97535/">参考</a> <a href="https://www.cnblogs.com/grubbyskyer/p/3852421.html">参考</a></p>
<h2 id="1246-等差数列"><a href="#1246-等差数列" class="headerlink" title="1246. 等差数列"></a><a href="https://www.acwing.com/solution/content/98586/">1246. 等差数列</a></h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/1248/">题目</a></h3><p>数学老师给小明出了一道等差数列求和的题目。但是粗心的小明忘记了一部分的数列，只记得其中 <em>N</em> 个整数。</p>
<p>现在给出这 <em>N</em> 个整数，小明想知道包含这 <em>N</em> 个整数的最短的等差数列有几项？</p>
<h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入的第一行包含一个整数 <em>N</em>。</p>
<p>第二行包含 <em>N</em> 个整数 <em>A</em>1,<em>A</em>2,⋅⋅⋅,<em>A**N</em>。(注意 <em>A</em>1∼<em>A**N</em> 并不一定是按等差数<br> 列中的顺序给出)</p>
<h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数表示答案。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>2≤<em>N</em>≤100000,<br>0≤*A<sub>i</sub>*≤109</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">2 6 4 10 20</span><br></pre></td></tr></table></figure>

<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure>

<h4 id="样例解释"><a href="#样例解释" class="headerlink" title="样例解释"></a>样例解释</h4><p>包含 2、6、4、10、20</p>
<p> 的最短的等差数列是 2、4、6、8、10、12、14、16、18、20。</p>
<h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><ul>
<li><p>等差数列每两个数之间的差值是kd，所以我们只要求出公差d，即所有差值的最大公约数，最后再求项数，即( a[n-1] - a[0] )&#x2F;d + 1;</p>
</li>
<li><p>还要单独特判公差等于0的情况</p>
</li>
</ul>
<h3 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N],d[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b ? <span class="built_in">gcd</span>(b,a % b) : a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">sort</span>(a,a+n);<span class="comment">//进行排序</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">        d[i] = a[i] - a[i<span class="number">-1</span>];<span class="comment">//存每个相邻两个数的差</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a[<span class="number">0</span>] == a[n<span class="number">-1</span>]) cout &lt;&lt; n &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="type">int</span> md = d[<span class="number">1</span>];<span class="comment">//假设公差是第一个差值</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">         md = <span class="built_in">gcd</span>(md,d[i+<span class="number">1</span>]);<span class="comment">//求所有数的最大公约数</span></span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="type">int</span> res = (a[n<span class="number">-1</span>] - a[<span class="number">0</span>])/md + <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">        cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1295-X的因子链"><a href="#1295-X的因子链" class="headerlink" title="1295. X的因子链"></a>1295. X的因子链</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/1297/">题目</a></h3><p>输入正整数 <em>X</em>，求 <em>X</em> 的大于 1 的因子组成的满足任意前一项都能整除后一项的严格递增序列的最大长度，以及满足最大长度的序列的个数。</p>
<h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入包含多组数据，每组数据占一行，包含一个正整数表示 <em>X</em>。</p>
<h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>对于每组数据，输出序列的最大长度以及满足最大长度的序列的个数。</p>
<p>每个结果占一行。</p>
<h4 id="数据范围-1"><a href="#数据范围-1" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>X</em>≤220</p>
<h4 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">10</span><br><span class="line">100</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 1</span><br><span class="line">1 1</span><br><span class="line">2 1</span><br><span class="line">2 2</span><br><span class="line">4 6</span><br></pre></td></tr></table></figure>

<h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>输入x，求 x 的因子满足</p>
<ol>
<li>因子不包括1</li>
<li>因子单调递增</li>
<li>后一项可以整除前一项</li>
</ol>
<p>的最长序列，输出长度和序列个数</p>
<h3 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h3><h4 id="算术基本定理-1"><a href="#算术基本定理-1" class="headerlink" title="算术基本定理"></a><a href="https://www.cnblogs.com/liugl7/p/6263221.html">算术基本定理</a></h4><p>每一个大于1的数都可以被唯一的写成素数的乘积，在乘积中的素因子按照非降序排列，即所有的正整数都可以唯一的分成若干个质因子乘积的形式</p>
<p>正整数 $x$的分解式$x&#x3D;p_1^{a_1}\times p_2^{a_2}\times p_3^{a_3}\times …\times p_k^{a_k}$称为$x$的标准分解式，其中$p1, p2, p3, ···,pk $是素数，$p_1 &lt; p_2 &lt; … &lt; p_k$且 $a_1,a_2,a_3···a_n$是正整数。</p>
<p>所以我们可以将 X 分解成上述形式，一共就有 $a_1+a_2+a_3+…..+a_k $个质因子，（其中有重复的质因子，$a_1$个$p_1$，$a_2$个$p_2$…)</p>
<p>要保证序列最长，则倍数为质因数可以保证序列最长，（如果不是质因数，则还可以在中间插入一项），所以最长序列为 $a_1+a_2+a_3+…..+a_k$</p>
<p>假设序列为 $x1, x2, x3, x4….. xn$</p>
<p>对应的映射 $x1$,   $x2\over x1$ , $x3\over x2$, $x4\over x3$……$\frac{x4}{x_{n-1}}$</p>
<p>每两个数之间的倍数都是 $x$ 的质因数，所以求不同的序列相当于求 $x$ 质因数的不同排列方式，去重排列组合:</p>
<p>$\frac{(a_1+a_2+a_3+…..+a_k)!}{a_1!\times a_2! \times…\times a_k}$</p>
<h4 id="线性筛法求素数-欧拉筛法-1"><a href="#线性筛法求素数-欧拉筛法-1" class="headerlink" title="线性筛法求素数(欧拉筛法)"></a>线性筛法求素数(欧拉筛法)</h4><p>大致原理为 从2开始筛选素数 将每次筛选好的素数存储到primes 数组中然后将含有该素数因子的合数全部筛掉 用此算法的时间复杂度可以达到O(n);</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> primes[N];<span class="comment">//存素数</span></span><br><span class="line"><span class="type">int</span> cnt;<span class="comment">//存素数个数</span></span><br><span class="line"><span class="type">bool</span> st[N];<span class="comment">//0代表是素数，1代表不是素数，刚开始先假设所有数都是素数</span></span><br><span class="line"><span class="type">int</span> minp[N];<span class="comment">//存最小质因子</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get_primes</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(st[i] == <span class="number">0</span>) primes[cnt++] = i,minp[i] = i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; cnt; j++)<span class="comment">//筛掉含有素数因子的合数</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(primes[j] * i &gt; n) <span class="keyword">break</span>;<span class="comment">//如果质数的i倍大于我们要求的范围，则结束循环</span></span><br><span class="line">            st[primes[j] * i] = <span class="literal">true</span>;<span class="comment">// 把质数的i倍筛掉</span></span><br><span class="line">            minp[primes[j] * i] = primes[j];</span><br><span class="line">             </span><br><span class="line">            <span class="keyword">if</span>(i % primes[j] == <span class="number">0</span>) <span class="keyword">break</span>;<span class="comment">// 通过最小质因子来筛，即如果i不是素数，则结束本轮循环，不用i来筛后面的合数</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">get_primes</span>(<span class="number">100000</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,primes[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://images0.cnblogs.com/i/574543/201407/172319235992161.png"></p>
<p>每一个合数都是用最小质因子筛掉的，比如6是用2筛掉的，10也是用2筛掉的，即 j &#x3D; 0 时，如上图</p>
<ul>
<li>因为prime中素数是递增的，所以如果i%prime[j]!&#x3D;0代表i的最小质因数还没有找到，即i的最小质因数大于prime[j]，也就是说prime[j]就是i*prime[j]的最小质因数，于是i*prime[j]被它的最小质因数筛掉了</li>
<li>如果当i%prime[j]&#x3D;&#x3D;0时，代表i的最小质因数是prime[j]，那么i*prime[j+k](k&gt;0)这个合数的最小质因数就不是prime[j+k]而是prime[j]了，所以i*prime[j+k]应该被prime[j]筛掉，而不是后续的prime[j+k]，于是在此时break</li>
</ul>
<p><a href="https://www.acwing.com/solution/content/97535/">参考</a> <a href="https://www.cnblogs.com/grubbyskyer/p/3852421.html">参考</a></p>
<p>例：</p>
<p>$12 &#x3D; 2^2 \times 3$</p>
<p>$p1 &#x3D; 2，p2 &#x3D; 3$，$a_1 &#x3D; 2,a_2 &#x3D; 1$</p>
<p>总共有$2 + 1 &#x3D; 3$个质因子，即2个2，1个3，则可能的情况：</p>
<p>$1，2，2\times 2，2\times 2 \times3 $    倍数关系为2 2 3</p>
<p>$1，2，2 \times 3，2\times 3 \times 2 $      倍数关系为2 3 2</p>
<p>$1，3，3\times 2，3\times 2 \times 3$       倍数关系为3 2 2</p>
<p>（1不算进去）</p>
<p>所以长度为3，不同序列为3</p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul>
<li>最长的序列就是质因子的个数</li>
<li>最长序列的个数就是质因子的去重排列数目</li>
<li>通过线性筛法求素数来找出最小质因子，从而找出所有质因子及其个数</li>
</ul>
<h3 id="相关代码-1"><a href="#相关代码-1" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = (<span class="number">1</span> &lt;&lt; <span class="number">20</span>) + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> primes[N];<span class="comment">//存素数</span></span><br><span class="line"><span class="type">int</span> cnt;<span class="comment">//存素数个数</span></span><br><span class="line"><span class="type">bool</span> st[N];<span class="comment">//0代表是素数，1代表不是素数，刚开始先假设所有数都是素数</span></span><br><span class="line"><span class="type">int</span> minp[N];<span class="comment">//存最小质因子</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get_primes</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(st[i] == <span class="number">0</span>) primes[cnt++] = i,minp[i] = i;<span class="comment">//是质数则最小公约数就是本身</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; cnt; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(primes[j] * i &gt; n) <span class="keyword">break</span>;</span><br><span class="line">            st[primes[j] * i] = <span class="literal">true</span>;</span><br><span class="line">            minp[primes[j] * i] = primes[j];</span><br><span class="line">            <span class="keyword">if</span>(i % primes[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">get_primes</span>(N);</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="type">int</span> sum[N];<span class="comment">//sum[N]存每个质因子出现的次数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x) != <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> tot = <span class="number">0</span>;<span class="comment">//tol存总的质因子数量</span></span><br><span class="line">        <span class="type">int</span> k = <span class="number">0</span>,sum[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(x &gt; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> p = minp[x];</span><br><span class="line">            sum[k] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(x % p == <span class="number">0</span>)<span class="comment">//算质因子为p的个数</span></span><br><span class="line">            &#123;</span><br><span class="line">                sum[k]++;</span><br><span class="line">                tot++;</span><br><span class="line">                x /= p;</span><br><span class="line">            &#125;</span><br><span class="line">            k++;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//算去重排列数量</span></span><br><span class="line">        ll res = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt;= tot; i++) res *= i;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= sum[i]; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                res /= j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %lld\n&quot;</span>,tot,res);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>C++</category>
        <category>习题</category>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>算法</tag>
        <tag>Acwing</tag>
        <tag>数论</tag>
      </tags>
  </entry>
  <entry>
    <title>acwing 蓝桥杯辅导课枚举、模拟与排序章节习题</title>
    <url>/2024/03/04/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E6%9E%9A%E4%B8%BE%E3%80%81%E6%A8%A1%E6%8B%9F%E4%B8%8E%E6%8E%92%E5%BA%8F/</url>
    <content><![CDATA[<h2 id="1210-连号区间数"><a href="#1210-连号区间数" class="headerlink" title="1210. 连号区间数"></a>1210. 连号区间数</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/1212/">题目</a></h3><p>小明这些天一直在思考这样一个奇怪而有趣的问题：</p>
<p>在 1∼<em>N</em> 的某个排列中有多少个连号区间呢？</p>
<p>这里所说的连号区间的定义是：<span id="more"></span></p>
<p>如果区间 [<em>L</em>,<em>R</em>] 里的所有元素（即此排列的第 <em>L</em> 个到第 <em>R</em> 个元素）递增排序后能得到一个长度为 <em>R</em>−<em>L</em>+1 的“连续”数列，则称这个区间连号区间。</p>
<p>当 <em>N</em> 很小的时候，小明可以很快地算出答案，但是当 <em>N</em> 变大的时候，问题就不是那么简单了，现在小明需要你的帮助。</p>
<h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行是一个正整数 <em>N</em>，表示排列的规模。</p>
<p>第二行是 <em>N</em> 个不同的数字 <em>P**i</em>，表示这 <em>N</em> 个数字的某一排列。</p>
<h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，表示不同连号区间的数目。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>N</em>≤10000,<br>1≤<em>P**i</em>≤<em>N</em></p>
<h4 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">3 2 4 1</span><br></pre></td></tr></table></figure>

<h4 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure>

<h4 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">3 4 2 5 1</span><br></pre></td></tr></table></figure>

<h4 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">9</span><br></pre></td></tr></table></figure>

<h4 id="样例解释"><a href="#样例解释" class="headerlink" title="样例解释"></a>样例解释</h4><p>第一个用例中，有 7 个连号区间分别是：[1,1],[1,2],[1,3],[1,4],[2,2],[3,3],[4,4]<br> 第二个用例中，有 9 个连号区间分别是：[1,1],[1,2],[1,3],[1,4],[1,5],[2,2],[3,3],[4,4],[5,5]</p>
<h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>输入一行组合数字（不重复），求有多少个连着的区间，使得其中数字可以由大到小连续排列，比如样例一的连号区间为 (3) (2) (4) (1) (3 2) (3 2 4) (3 2 4 1)</p>
<h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>先直接暴力枚举左右端点L和R,</p>
<p>判断是否是连号区间：</p>
<ul>
<li>由于这列数中没有重复数字，所以一个连号区中的数字满足max - min &#x3D; R - L</li>
</ul>
<p>满足条件则结果加一</p>
<h3 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">10010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="comment">//左端点</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> Max = <span class="number">-1e8</span>,Min = <span class="number">1e8</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i;j&lt;n;j++)<span class="comment">//右端点</span></span><br><span class="line">        &#123;</span><br><span class="line">            Max = <span class="built_in">max</span>(Max,a[j]);</span><br><span class="line">            Min = <span class="built_in">min</span>(Min,a[j]);</span><br><span class="line">            <span class="keyword">if</span>(Max - Min == j - i) res++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1236-递增三元组"><a href="#1236-递增三元组" class="headerlink" title="1236.递增三元组"></a>1236.递增三元组</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/1238/">题目</a></h3><p>给定三个整数数组<em>A</em>&#x3D;[<em>A</em>1,<em>A</em>2,…<em>A**N</em>], <em>B</em>&#x3D;[<em>B</em>1,<em>B</em>2,…<em>B**N</em>], <em>C</em>&#x3D;[<em>C</em>1,<em>C</em>2,…<em>C**N</em>],</p>
<p>请你统计有多少个三元组 (<em>i</em>,<em>j</em>,<em>k</em>) 满足：</p>
<p>1≤<em>i</em>,<em>j</em>,<em>k</em>≤<em>N</em></p>
<p> <em>A**i</em>&lt;<em>B**j</em>&lt;<em>C**k</em></p>
<h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含一个整数 <em>N</em>。</p>
<p>第二行包含 <em>N</em> 个整数 <em>A</em>1,<em>A</em>2,…<em>A**N</em>。</p>
<p>第三行包含 <em>N</em> 个整数 <em>B</em>1,<em>B</em>2,…<em>B**N</em>。</p>
<p>第四行包含 <em>N</em> 个整数 <em>C</em>1,<em>C</em>2,…<em>C**N</em>。</p>
<h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>一个整数表示答案。</p>
<h4 id="数据范围-1"><a href="#数据范围-1" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>N</em>≤105,<br>0≤<em>A**i</em>,<em>B**i</em>,<em>C**i</em>≤105</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">1 1 1</span><br><span class="line">2 2 2</span><br><span class="line">3 3 3</span><br></pre></td></tr></table></figure>

<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">27</span><br></pre></td></tr></table></figure>

<h3 id="相关代码-1"><a href="#相关代码-1" class="headerlink" title="相关代码"></a>相关代码</h3><p>前缀和</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N =<span class="number">10010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N],b[N],c[N];</span><br><span class="line"><span class="type">int</span> as[N];<span class="comment">//放A[]中有多少个数小于b[i]，as[1]就代表A中有as[i]个数小于b[i]</span></span><br><span class="line"><span class="type">int</span> cs[N];<span class="comment">//放C[]中有多少个数大于于b[i]</span></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> cnt[N],s[N];<span class="comment">//cnt[i]表示i的个数,s[i]表示从0到i有多少个数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]),a[i]++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;b[i]),b[i]++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;c[i]),c[i]++;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//求as[N]</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) cnt[a[i]]++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; N; i++) s[i] = s[i<span class="number">-1</span>] + cnt[i];<span class="comment">//s[i]代表从1到i，a[i]的个数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) as[i] = s[b[i]<span class="number">-1</span>];<span class="comment">//as[i]存从A中1到b[i]-1的个数，即A中小于b[i]的个数</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//清零cnt[N],s[N]</span></span><br><span class="line">    <span class="built_in">memset</span>(cnt, <span class="number">0</span>, <span class="keyword">sizeof</span> cnt);</span><br><span class="line">    <span class="built_in">memset</span>(s, <span class="number">0</span>, <span class="keyword">sizeof</span> s);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//求cs[N]</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) cnt[c[i]]++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; N; i++) s[i] = s[i<span class="number">-1</span>] + cnt[i];<span class="comment">//s[i]代表从1到i，c[i]的个数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) cs[i] = s[N<span class="number">-1</span>] - s[b[i]];</span><br><span class="line">    </span><br><span class="line">    LL res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) res += (LL)as[i] * cs[i];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%ld&quot;</span>,res);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1245-特别数的和"><a href="#1245-特别数的和" class="headerlink" title="1245. 特别数的和"></a>1245. 特别数的和</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/1247/">题目</a></h3><p>小明对数位中含有 2、0、1、9 的数字很感兴趣（不包括前导 0），在 1 到 40 中这样的数包括 1、2、9、10 至 32、39 和 40，共 28 个，他们的和是 574。</p>
<p>请问，在 1 到 <em>n</em> 中，所有这样的数的和是多少？</p>
<h4 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含一个整数 <em>n</em>。</p>
<h4 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，包含一个整数，表示满足条件的数的和。</p>
<h4 id="数据范围-2"><a href="#数据范围-2" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>n</em>≤10000</p>
<h4 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">40</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">574</span><br></pre></td></tr></table></figure>

<h3 id="算法1"><a href="#算法1" class="headerlink" title="算法1"></a>算法1</h3><p>可以用<code>sscanf</code>和<code>ssprintf</code>，先将数字转化为一个字符串，判断每个字符是否满足条件，如果满足，再将当前字符串转化为一个数字，结果加上这个数字</p>
<h4 id="相关代码-2"><a href="#相关代码-2" class="headerlink" title="相关代码"></a>相关代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> str[<span class="number">6</span>];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> x=<span class="number">0</span>,res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt;= n; i++)<span class="comment">//枚举从1到n的每个数</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">sprintf</span>(str,<span class="string">&quot;%d&quot;</span>,i);<span class="comment">//把数字i变成字符数组str</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; str[j] != <span class="string">&#x27;\0&#x27;</span>; j++)<span class="comment">//判断每个数字是否满足条件</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(str[j] == <span class="string">&#x27;2&#x27;</span> || str[j] == <span class="string">&#x27;0&#x27;</span> || str[j] == <span class="string">&#x27;1&#x27;</span> || str[j] == <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">sscanf</span>(str,<span class="string">&quot;%d&quot;</span>,&amp;x);<span class="comment">//把字符数组str变成数字x</span></span><br><span class="line">                res += x;</span><br><span class="line">                <span class="keyword">break</span>;<span class="comment">//在这个字符串中只要有一个字符满足条件即可</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="算法2"><a href="#算法2" class="headerlink" title="算法2"></a>算法2</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x = i;</span><br><span class="line">        <span class="keyword">while</span>(x)</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="type">int</span> a = x % <span class="number">10</span>;<span class="comment">//判断末位是否符合条件</span></span><br><span class="line">            x = x/<span class="number">10</span>;<span class="comment">//将末位去除</span></span><br><span class="line">            <span class="keyword">if</span>(a == <span class="number">1</span> || a == <span class="number">2</span> || a == <span class="number">0</span> || a == <span class="number">9</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                res += i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1204-错误票据"><a href="#1204-错误票据" class="headerlink" title="1204. 错误票据"></a>1204. 错误票据</h2><h3 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/1206/">题目</a></h3><p>某涉密单位下发了某种票据，并要在年终全部收回。每张票据有唯一的ID号。全年所有票据的ID号是连续的，但ID的开始数码是随机选定的。因为工作人员疏忽，在录入ID号的时候发生了一处错误，造成了某个ID断号，另外一个ID重号。你的任务是通过编程，找出断号的ID和重号的ID。假设断号不可能发生在最大和最小号。</p>
<h4 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含整数 <em>N</em>，表示后面共有 <em>N</em> 行数据。接下来 <em>N</em> 行，每行包含空格分开的若干个（不大于100个）正整数（不大于100000），每个整数代表一个ID号。</p>
<h4 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h4><p>要求程序输出1行，含两个整数 <em>m</em>,<em>n</em>，用空格分隔。其中，<em>m</em>表示断号ID，<em>n</em>表示重号ID。</p>
<h4 id="数据范围-3"><a href="#数据范围-3" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>N</em>≤100</p>
<h4 id="输入样例：-2"><a href="#输入样例：-2" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">5 6 8 11 9 </span><br><span class="line">10 12 9</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-2"><a href="#输出样例：-2" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7 9</span><br></pre></td></tr></table></figure>

<h3 id="算法1-1"><a href="#算法1-1" class="headerlink" title="算法1"></a>算法1</h3><p>找出这组数的最大值和最小值，记录下每个数出现的次数，找出出现次数为0和2的数输出</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100000</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> cnt[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="type">int</span> Max = <span class="number">0</span>,Min = <span class="number">100000</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; x)</span><br><span class="line">    &#123;</span><br><span class="line">        cnt[x] ++;</span><br><span class="line">        Max = <span class="built_in">max</span>(Max,x);</span><br><span class="line">        Min = <span class="built_in">min</span>(Min,x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> xdh=<span class="number">0</span>,xch=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = Min; i &lt;= Max; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(cnt[i] == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            xdh = i;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(cnt[i] == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            xch = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        cout &lt;&lt; xdh &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; xch &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="算法2-1"><a href="#算法2-1" class="headerlink" title="算法2"></a>算法2</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> cnt;</span><br><span class="line">    cin &gt;&gt; cnt;</span><br><span class="line">    string line;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">getline</span>(cin,line);<span class="comment">//读入第一行的空格</span></span><br><span class="line">    <span class="keyword">while</span>(cnt--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">getline</span>(cin,line);<span class="comment">//getline是包含回车读入</span></span><br><span class="line">        <span class="function">stringstream <span class="title">ssin</span><span class="params">(line)</span></span>;<span class="comment">//相当于从line中读入</span></span><br><span class="line">    </span><br><span class="line">        <span class="keyword">while</span>(ssin &gt;&gt; a[n]) n++;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">sort</span>(a, a + n);<span class="comment">//对a中的所有排序</span></span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> res1,res2;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span>  i= <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i] == a[i+<span class="number">1</span>]) res1 = a[i];</span><br><span class="line">        <span class="keyword">if</span>(a[i+<span class="number">1</span>] - a[i] &gt;= <span class="number">2</span>) res2 = a[i]+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; res2 &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; res1 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="466-回文日期"><a href="#466-回文日期" class="headerlink" title="466. 回文日期"></a>466. 回文日期</h2><h3 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/468/">题目</a></h3><p>在日常生活中，通过年、月、日这三个要素可以表示出一个唯一确定的日期。牛牛习惯用 8 位数字表示一个日期，其中，前 4 位代表年份，接下来 2 位代表月份，最后 2 位代表日期。</p>
<p>显然：一个日期只有一种表示方法，而两个不同的日期的表示方法不会相同。牛牛认为，一个日期是回文的，当且仅当表示这个日期的 8 位数字是回文的。</p>
<p>现在，牛牛想知道：在他指定的两个日期之间（包含这两个日期本身），有多少个真实存在的日期是回文的。</p>
<p>一个 8 位数字是回文的，当且仅当对于所有的 <em>i</em>(1≤<em>i</em>≤8) 从左向右数的第 <em>i</em> 个数字和第 9−<em>i</em> 个数字（即从右向左数的第 <em>i</em> 个数字）是相同的。</p>
<p>例如：</p>
<p>对于 2016 年 11 月 19 日，用 8 位数字 20161119 表示，它不是回文的。</p>
<p>对于 2010 年 1 月 2 日，用 8 位数字 20100102 表示，它是回文的。对于 2010 年 10 月 2 日，用 8 位数字 20101002 表示，它不是回文的。</p>
<h4 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入包括两行，每行包括一个 8 位数字。    第一行表示牛牛指定的起始日期 <em>d<strong>a</strong>t**e</em>1，第二行表示牛牛指定的终止日期 <em>d<strong>a</strong>t**e</em>2。保证 <em>d<strong>a</strong>t**e</em>1 和 <em>d<strong>a</strong>t**e</em>2 都是真实存在的日期，且年份部分一定为 4 位数字，且首位数字不为 0。保证 <em>d<strong>a</strong>t**e</em>1 一定不晚于 <em>d<strong>a</strong>t**e</em>2。</p>
<h4 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出共一行，包含一个整数，表示在 <em>d<strong>a</strong>t**e</em>1 和 <em>d<strong>a</strong>t**e</em>2</p>
<p> 之间，有多少个日期是回文的。</p>
<h4 id="输入样例：-3"><a href="#输入样例：-3" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">20110101</span><br><span class="line">20111231</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-3"><a href="#输出样例：-3" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure>

<h3 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h3><p>列举从1000到9999之间的数，求出相应的回文数组成的日期date，判断该日期是否合法（date要处于date1到date2之间）</p>
<h3 id="相关代码-3"><a href="#相关代码-3" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> date)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">13</span>] = &#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> t = date % <span class="number">10000</span>;</span><br><span class="line">    <span class="type">int</span> day = t % <span class="number">100</span>, month = t / <span class="number">100</span>;</span><br><span class="line">    <span class="type">int</span> year = date / <span class="number">10000</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(year % <span class="number">400</span> == <span class="number">0</span> || year % <span class="number">100</span> != <span class="number">0</span> &amp;&amp; year % <span class="number">4</span> == <span class="number">0</span> ) a[<span class="number">2</span>]++;<span class="comment">//判断是不是闰年，是闰年则二月天数加一</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( day == <span class="number">0</span> || day &gt; a[month] || month == <span class="number">0</span> || month &gt; <span class="number">12</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> date1,date2;</span><br><span class="line">    cin &gt;&gt; date1 &gt;&gt; date2;</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1000</span>; i &lt; <span class="number">10000</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x = i;</span><br><span class="line">        <span class="type">int</span> date=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(x &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            date = date * <span class="number">10</span> + x % <span class="number">10</span>; </span><br><span class="line">            x /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        date += i *<span class="number">10000</span> ;<span class="comment">//用date来每个存回文日期，如果该日期合法，计数器加一</span></span><br><span class="line">        <span class="keyword">if</span>(date1 &lt;= date &amp;&amp; date &lt;= date2 &amp;&amp; <span class="built_in">check</span>(date)) cnt++;<span class="comment">//date必须在date1到date2之间</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; cnt &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="1219-移动距离"><a href="#1219-移动距离" class="headerlink" title="1219. 移动距离"></a>1219. 移动距离</h2><h3 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/1221/">题目</a></h3><p>X星球居民小区的楼房全是一样的，并且按矩阵样式排列。其楼房的编号为 1,2,3…</p>
<p>当排满一行时，从下一行相邻的楼往反方向排号。</p>
<p>比如：当小区排号宽度为 6 时，开始情形如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1  2  3  4  5  6</span><br><span class="line">12 11 10 9  8  7</span><br><span class="line">13 14 15 .....</span><br></pre></td></tr></table></figure>

<p>我们的问题是：已知了两个楼号 <em>m</em> 和 <em>n</em>，需要求出它们之间的最短移动距离（不能斜线方向移动）。</p>
<h4 id="输入格式-5"><a href="#输入格式-5" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入共一行，包含三个整数 <em>w</em>,<em>m</em>,<em>n</em>，<em>w</em> 为排号宽度，<em>m</em>,<em>n</em> 为待计算的楼号。</p>
<h4 id="输出格式-5"><a href="#输出格式-5" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，表示 <em>m</em>,<em>n</em> 两楼间最短移动距离。</p>
<h4 id="数据范围-4"><a href="#数据范围-4" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>w</em>,<em>m</em>,<em>n</em>≤10000,</p>
<h4 id="输入样例：-4"><a href="#输入样例：-4" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6 8 2</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-4"><a href="#输出样例：-4" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>

<h3 id="解题思路-2"><a href="#解题思路-2" class="headerlink" title="解题思路"></a>解题思路</h3><p>直接求 m 和 n 的曼哈顿距离，</p>
<p>如何求 m 和 n 的坐标：</p>
<ul>
<li><p>为了方便求横纵坐标，先把 m 和 n 都减一</p>
</li>
<li><p>横坐标直接 m 和 n 除以w</p>
</li>
<li><p>纵坐标要判断奇偶行 ，奇数行纵坐标直接取余，偶数行要用 w 减去取余后的数再减一（因为最开始 m 和 n 减一）</p>
</li>
</ul>
<h3 id="相关代码-4"><a href="#相关代码-4" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> w,m,n;</span><br><span class="line">    cin &gt;&gt; w &gt;&gt; m &gt;&gt; n;</span><br><span class="line">    m--,n--;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//求m和n的横坐标</span></span><br><span class="line">    <span class="type">int</span> x1,y1,x2,y2;</span><br><span class="line">    x1 = m / w, x2 = n / w;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//求m的纵坐标</span></span><br><span class="line">    <span class="keyword">if</span>(x1 % <span class="number">2</span>) y1 = m % w;</span><br><span class="line">    <span class="keyword">else</span> y1 = w - <span class="number">1</span> - m % w;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//求n的纵坐标</span></span><br><span class="line">    <span class="keyword">if</span>(x2 % <span class="number">2</span>) y2 = n % w;</span><br><span class="line">    <span class="keyword">else</span> y2 = w - <span class="number">1</span> - n % w;</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; <span class="built_in">abs</span>(x1 - x2) + <span class="built_in">abs</span>(y1 - y2) &lt;&lt; endl; <span class="comment">//求曼哈顿距离</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1229-日期问题"><a href="#1229-日期问题" class="headerlink" title="1229. 日期问题"></a>1229. 日期问题</h2><h3 id="题目-6"><a href="#题目-6" class="headerlink" title=" 题目"></a><a href="https://www.acwing.com/problem/content/description/1231/"> 题目</a></h3><p>小明正在整理一批历史文献。这些历史文献中出现了很多日期。</p>
<p>小明知道这些日期都在1960年1月1日至2059年12月31日。</p>
<p>令小明头疼的是，这些日期采用的格式非常不统一，有采用年&#x2F;月&#x2F;日的，有采用月&#x2F;日&#x2F;年的，还有采用日&#x2F;月&#x2F;年的。</p>
<p>更加麻烦的是，年份也都省略了前两位，使得文献上的一个日期，存在很多可能的日期与其对应。  </p>
<p>比如02&#x2F;03&#x2F;04，可能是2002年03月04日、2004年02月03日或2004年03月02日。  </p>
<p>给出一个文献上的日期，你能帮助小明判断有哪些可能的日期对其对应吗？</p>
<h4 id="输入格式-6"><a href="#输入格式-6" class="headerlink" title="输入格式"></a>输入格式</h4><p>一个日期，格式是”AA&#x2F;BB&#x2F;CC”。</p>
<p>即每个’&#x2F;’隔开的部分由两个 0-9 之间的数字（不一定相同）组成。</p>
<h4 id="输出格式-6"><a href="#输出格式-6" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出若干个不相同的日期，每个日期一行，格式是”yyyy-MM-dd”。</p>
<p>多个日期按从早到晚排列。  </p>
<h4 id="数据范围-5"><a href="#数据范围-5" class="headerlink" title="数据范围"></a>数据范围</h4><p>0≤<em>A</em>,<em>B</em>,<em>C</em>≤9</p>
<h4 id="输入样例：-5"><a href="#输入样例：-5" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">02/03/04</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-5"><a href="#输出样例：-5" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2002-03-04</span><br><span class="line">2004-02-03</span><br><span class="line">2004-03-02</span><br></pre></td></tr></table></figure>

<h2 id="算法1-2"><a href="#算法1-2" class="headerlink" title="算法1"></a>算法1</h2><p>列举所有1960年1月1日至2059年12月31日的日期，找符合条件的日期</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> days[<span class="number">13</span>]=&#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">29</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断日期是否合法</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> year,<span class="type">int</span> month,<span class="type">int</span> day)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(month == <span class="number">0</span> || month &gt; <span class="number">12</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(days[month] &lt; day||day==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//day==0,条件易忽略</span></span><br><span class="line">    <span class="keyword">if</span>(month == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!(year % <span class="number">100</span> &amp;&amp; year % <span class="number">4</span> == <span class="number">0</span> || year % <span class="number">400</span> == <span class="number">0</span>)) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(day &gt; <span class="number">28</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">     &#125; </span><br><span class="line">     <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b,c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d/%d/%d&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> date = <span class="number">19600101</span>; date &lt;= <span class="number">20591231</span>; date++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> year = date / <span class="number">10000</span>,month=date % <span class="number">10000</span> / <span class="number">100</span>,day = date % <span class="number">10000</span> % <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(year,month,day))</span><br><span class="line">        &#123;<span class="comment">//year%100易忽略</span></span><br><span class="line">            <span class="comment">//判断日期是否满足输入条件</span></span><br><span class="line">            <span class="keyword">if</span>(a == year % <span class="number">100</span> &amp;&amp; b == month &amp;&amp; c == day || a == month &amp;&amp; b == day &amp;&amp; c == year % <span class="number">100</span> || a == day &amp;&amp; b == month &amp;&amp; c == year % <span class="number">100</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d-%02d-%02d\n&quot;</span>,year,month,day);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="算法2-2"><a href="#算法2-2" class="headerlink" title="算法2"></a>算法2</h2><p>列举输入数字的所有可能，找出在1960年1月1日至2059年12月31日之内的日期，还要判断日期，天数大小（情况比较多）</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断日期是否合法</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> year,<span class="type">int</span> month,<span class="type">int</span> Day)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> day[<span class="number">13</span>] = &#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line">    <span class="keyword">if</span>(year % <span class="number">400</span> == <span class="number">0</span> || year % <span class="number">100</span> &amp;&amp; year % <span class="number">4</span> == <span class="number">0</span>) day[<span class="number">2</span>]++;</span><br><span class="line">    <span class="keyword">if</span>(Day &gt; day[month]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">prinf</span><span class="params">(<span class="type">int</span> year,<span class="type">int</span> month,<span class="type">int</span> day)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(year &gt;= <span class="number">1960</span> &amp;&amp; year &lt;= <span class="number">2059</span> &amp;&amp; <span class="built_in">check</span>(year,month,day) &amp;&amp; day &amp;&amp; month &lt;=<span class="number">12</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d-&quot;</span>,year);</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">if</span>(month &gt;= <span class="number">10</span>) <span class="built_in">printf</span>(<span class="string">&quot;%d-&quot;</span>,month);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;0%d-&quot;</span>,month);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(day &gt;= <span class="number">10</span>) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,day);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;0%d\n&quot;</span>,day);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断哪一个月份比较小，先输出比较小的,再输出比较大的</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">max_day</span><span class="params">(<span class="type">int</span> year1,<span class="type">int</span> year2,<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a &lt; b)&#123;</span><br><span class="line">        <span class="built_in">prinf</span>(year2,a,b);</span><br><span class="line">        <span class="built_in">prinf</span>(year2,b,a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a == b) <span class="built_in">prinf</span>(year2,a,b);</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">prinf</span>(year2,b,a);</span><br><span class="line">        <span class="built_in">prinf</span>(year2,a,b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b,c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d/%d/%d&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">19</span>; i &lt;= <span class="number">20</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> year1 = i * <span class="number">100</span> + a;</span><br><span class="line">        <span class="type">int</span> year2 = i * <span class="number">100</span> + c;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(year1 == year2 &amp;&amp; a == b &amp;&amp; b == c) <span class="built_in">prinf</span>(year1,b,c);<span class="comment">//当三个数都相同时</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(year1 &lt; year2)&#123;</span><br><span class="line">            <span class="built_in">prinf</span>(year1,b,c);</span><br><span class="line">            <span class="built_in">max_day</span>(year1,year2,a,b);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(year1 == year2)&#123;</span><br><span class="line">            <span class="built_in">prinf</span>(year1,b,c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">max_day</span>(year1,year2,a,b);</span><br><span class="line">            <span class="built_in">prinf</span>(year1,b,c);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1231-航班时间"><a href="#1231-航班时间" class="headerlink" title="1231. 航班时间"></a>1231. 航班时间</h2><h3 id="题目-7"><a href="#题目-7" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/1233/">题目</a></h3><p>小 <em>h</em> 前往美国参加了蓝桥杯国际赛。小 <em>h</em> 的女朋友发现小 <em>h</em> 上午十点出发，上午十二点到达美国，于是感叹到“现在飞机飞得真快，两小时就能到美国了”。<em>h</em> 对超音速飞行感到十分恐惧。仔细观察后发现飞机的起降时间都是当地时间。由于北京和美国东部有 12 小时时差，故飞机总共需要 14 小时的飞行时间。</p>
<p>不久后小 <em>h</em> 的女朋友去中东交换。小 <em>h</em> 并不知道中东与北京的时差。但是小 <em>h</em> 得到了女朋友来回航班的起降时间。</p>
<p>小 <em>h</em> 想知道女朋友的航班飞行时间是多少。</p>
<p>对于一个可能跨时区的航班，给定来回程的起降时间。</p>
<p>假设飞机来回飞行时间相同，求飞机的飞行时间。</p>
<h4 id="输入格式-7"><a href="#输入格式-7" class="headerlink" title="输入格式"></a>输入格式</h4><p>一个输入包含多组数据。输入第一行为一个正整数 <em>T</em>，表示输入数据组数。</p>
<p>每组数据包含两行，第一行为去程的起降时间，第二行为回程的起降时间。</p>
<p>起降时间的格式如下:</p>
<ol>
<li>h1:m1:s1 h2:m2:s2</li>
<li>h1:m1:s1 h3:m3:s3 (+1)</li>
<li>h1:m1:s1 h4:m4:s4 (+2)</li>
</ol>
<p>第一种格式表示该航班在<strong>当地</strong>时间h1时m1分s1秒起飞，在<strong>当地</strong>时间<strong>当日</strong>h2时m2分s2秒降落。</p>
<p>第二种格式表示该航班在<strong>当地</strong>时间h1时m1分s1秒起飞，在<strong>当地</strong>时间<strong>次日</strong>h2时m2分s2秒降落。</p>
<p>第三种格式表示该航班在<strong>当地</strong>时间h1时m1分s1秒起飞，在<strong>当地</strong>时间<strong>第三日</strong>h2时m2分s2秒降落。</p>
<h4 id="输出格式-7"><a href="#输出格式-7" class="headerlink" title="输出格式"></a>输出格式</h4><p>对于每一组数据输出一行一个时间hh:mm:ss，表示飞行时间为hh小时mm分ss秒。</p>
<p>注意，当时间为一位数时，要补齐前导零，如三小时四分五秒应写为03:04:05。</p>
<h4 id="数据范围-6"><a href="#数据范围-6" class="headerlink" title="数据范围"></a>数据范围</h4><p>保证输入时间合法（0≤<em>h</em>≤23,0≤<em>m</em>,<em>s</em>≤59</p>
<p>），飞行时间不超过24小时。</p>
<h4 id="输入样例：-6"><a href="#输入样例：-6" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">17:48:19 21:57:24</span><br><span class="line">11:05:18 15:14:23</span><br><span class="line">17:21:07 00:31:46 (+1)</span><br><span class="line">23:02:41 16:13:20 (+1)</span><br><span class="line">10:19:19 20:41:24</span><br><span class="line">22:19:04 16:41:09 (+1)</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-6"><a href="#输出样例：-6" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">04:09:05</span><br><span class="line">12:10:39</span><br><span class="line">14:22:05</span><br></pre></td></tr></table></figure>

<h3 id="解题思路-3"><a href="#解题思路-3" class="headerlink" title="解题思路"></a>解题思路</h3><p>去时的时间是 <code>t1-t2-dh</code>,回来的时间是<code>T2-T1+dh</code>两两相加时差就抵消了，所以最后答案直接两个答案相加除以2</p>
<h3 id="相关代码-5"><a href="#相关代码-5" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">getTime</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> h1,m1,s1,h2,m2,s2,d=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d:%d:%d %d:%d:%d (+%d)&quot;</span>,&amp;h1,&amp;m1,&amp;s1,&amp;h2,&amp;m2,&amp;s2,&amp;d);</span><br><span class="line">    <span class="type">int</span> time=d*<span class="number">24</span>*<span class="number">3600</span>+h2*<span class="number">3600</span>+m2*<span class="number">60</span>+s2-(h1*<span class="number">3600</span>+m1*<span class="number">60</span>+s1);</span><br><span class="line">    <span class="keyword">return</span> time;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; t; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> time1=<span class="built_in">getTime</span>();</span><br><span class="line">        <span class="type">int</span> time2=<span class="built_in">getTime</span>();</span><br><span class="line">        <span class="type">int</span> t=(time1+time2)/<span class="number">2</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%02d:%02d:%02d\n&quot;</span>, t/<span class="number">3600</span>, t/<span class="number">60</span>%<span class="number">60</span>, t%<span class="number">60</span>);</span><br><span class="line">    &#125;<span class="comment">//%02表示不足两位就补0</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1241-外卖店优先级"><a href="#1241-外卖店优先级" class="headerlink" title="1241. 外卖店优先级"></a>1241. 外卖店优先级</h2><h3 id="题目-8"><a href="#题目-8" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/1243/">题目</a></h3><p>“饱了么”外卖系统中维护着 <em>N</em> 家外卖店，编号 1∼<em>N</em>。每家外卖店都有一个优先级，初始时 (0 时刻) 优先级都为 0。</p>
<p>每经过 1 个时间单位，如果外卖店没有订单，则优先级会减少 1，最低减到 0；而如果外卖店有订单，则优先级不减反加，每有一单优先级加 2。</p>
<p>如果某家外卖店某时刻优先级大于 5，则会被系统加入优先缓存中；如果优先级小于等于 3，则会被清除出优先缓存。</p>
<p>给定 <em>T</em> 时刻以内的 <em>M</em> 条订单信息，请你计算 <em>T</em> 时刻时有多少外卖店在优先缓存中。</p>
<h4 id="输入格式-8"><a href="#输入格式-8" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含 3 个整数 <em>N</em>,<em>M</em>,<em>T</em>。</p>
<p>以下 <em>M</em> 行每行包含两个整数 <em>t**s</em> 和 <em>i**d</em>，表示 <em>t**s</em> 时刻编号 <em>i**d</em></p>
<p> 的外卖店收到一个订单。</p>
<h4 id="输出格式-8"><a href="#输出格式-8" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数代表答案。</p>
<h4 id="数据范围-7"><a href="#数据范围-7" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>N</em>,<em>M</em>,<em>T</em>≤105,<br>1≤<em>t**s</em>≤<em>T</em>,<br>1≤<em>i**d</em>≤<em>N</em></p>
<h4 id="输入样例：-7"><a href="#输入样例：-7" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 6 6</span><br><span class="line">1 1</span><br><span class="line">5 2</span><br><span class="line">3 1</span><br><span class="line">6 2</span><br><span class="line">2 1</span><br><span class="line">6 2</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-7"><a href="#输出样例：-7" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure>

<h4 id="样例解释-1"><a href="#样例解释-1" class="headerlink" title="样例解释"></a>样例解释</h4><p>6 时刻时，1 号店优先级降到 3，被移除出优先缓存；2 号店优先级升到 6，加入优先缓存。所以是有 1 家店 (2 号) 在优先缓存中。</p>
<h3 id="解题思路-4"><a href="#解题思路-4" class="headerlink" title="解题思路"></a>解题思路</h3><p>先用pair存输入的数据并排序</p>
<ul>
<li>统计相同的订单之间的个数</li>
<li>最后一次接到订单与下一次接到订单的时间差</li>
<li>每次分别计算优先级 以及 是否进入优先缓存</li>
<li>最后单独计算最后一次接到订单的时间与总时间的差值，用之前的优先级减去差值得到最后的优先级</li>
</ul>
<h3 id="相关代码-6"><a href="#相关代码-6" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m,T;</span><br><span class="line"><span class="type">int</span> a[N];<span class="comment">//存每一个店家的优先级</span></span><br><span class="line"><span class="type">int</span> last[N];<span class="comment">//存每一个店家上一次拿到订单的时间</span></span><br><span class="line"><span class="type">bool</span> st[N];<span class="comment">//存每一个店家是否加入优先缓存；</span></span><br><span class="line"></span><br><span class="line">PII order[N];<span class="comment">//存每一次输入</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; T;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;order[i].first,&amp;order[i].second);</span><br><span class="line">    <span class="built_in">sort</span>(order,order+m);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m;)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> j = i;</span><br><span class="line">        <span class="keyword">while</span>(j &lt; m &amp;&amp; order[j] == order[i]) j++;<span class="comment">//判断有多少相同的订单，直接将j移到最后一个相同的订单后面</span></span><br><span class="line">        <span class="type">int</span> t = order[i].first, id = order[i].second, cnt = j - i;<span class="comment">//cnt表示有多少个相同的订单</span></span><br><span class="line">        i = j;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//处理这一次拿到订单和上一次拿到订单的信息</span></span><br><span class="line">        a[id] -= t - last[id] - <span class="number">1</span>;<span class="comment">//a[id]的优先级减去t到last[id]之间没有拿到订单的时刻，所以要减一，因为不包含t时刻的订单</span></span><br><span class="line">        <span class="keyword">if</span>(a[id] &lt; <span class="number">0</span>) a[id] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(a[id] &lt;=<span class="number">3</span>) st[id] = <span class="literal">false</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//处理这一批拿到的订单</span></span><br><span class="line">        a[id] += cnt * <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(a[id] &gt; <span class="number">5</span>) st[id] = <span class="literal">true</span>;<span class="comment">//以上是处理一批拿到订单的信息</span></span><br><span class="line">        </span><br><span class="line">        last[id] = t;<span class="comment">//记录下拿到订单的时间</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//最后一个last[id]后面可能一直没有拿到订单，要单独减去没有拿到订单的时刻</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(last[i] &lt; T)</span><br><span class="line">        &#123;</span><br><span class="line">            a[i] -= T - last[i];</span><br><span class="line">            <span class="keyword">if</span>(a[i] &lt;= <span class="number">3</span>) st[i] = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) res += st[i];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,res);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
        <category>习题</category>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>算法</tag>
        <tag>Acwing</tag>
        <tag>枚举</tag>
        <tag>模拟</tag>
        <tag>排序</tag>
      </tags>
  </entry>
  <entry>
    <title>acwing 蓝桥杯辅导课二分与前缀和章节习题</title>
    <url>/2024/03/04/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E4%BA%8C%E5%88%86%E4%B8%8E%E5%89%8D%E7%BC%80%E5%92%8C/</url>
    <content><![CDATA[<h2 id="789-数的范围"><a href="#789-数的范围" class="headerlink" title="789. 数的范围"></a>789. 数的范围</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>给定一个按照升序排列的长度为 <em>n</em> 的整数数组，以及 <em>q</em> 个查询。对于每个查询，返回一个元素 <em>k</em> 的起始位置和终止位置（位置从 0 开始计数）。如果数组中不存在该元素，则返回 <code>-1 -1</code>。</p>
<span id="more"></span>

<h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含整数 <em>n</em> 和 <em>q</em>，表示数组长度和询问个数。第二行包含 <em>n</em> 个整数（均在 1∼10000 范围内），表示完整数组。接下来 <em>q</em> 行，每行包含一个整数 <em>k</em>，表示一个询问元素。</p>
<h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>共 <em>q</em> 行，每行包含两个整数，表示所求元素的起始位置和终止位置。如果数组中不存在该元素，则返回 <code>-1 -1</code>。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>n</em>≤100000</p>
<p>1≤<em>q</em>≤10000<br>1≤<em>k</em>≤10000</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6 3</span><br><span class="line">1 2 2 3 3 4</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td></tr></table></figure>

<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 4</span><br><span class="line">5 5</span><br><span class="line">-1 -1</span><br></pre></td></tr></table></figure>

<h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>输入有几个数，要查找几个数，分别输入这几个数和要查找的数，如果要查找的数在这几个数中间，则输出这个数的起始和最后位置，如果没有，则输出两个 -1</p>
<h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p><img src="https://s2.loli.net/2024/03/04/PymfQeRu82DslN7.png" alt="image-20220129232147456"> </p>
<p>单调的函数一定可以二分</p>
<p>要用到两个二分，第一个查找起始位置，即&gt;&#x3D;x的第一个数，第二个查找最后位置，即&lt;&#x3D;x的最后一个数字，分别为左端点和右端点，查找右端点时要注意死循环问题，可以将中点设为l+r+1&gt;&gt;2</p>
<h3 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">100010</span>];</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cin &gt;&gt; a[i];<span class="comment">//输入要查找的一组数</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;<span class="comment">//输入要查询的数</span></span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> l = <span class="number">0</span>,r = n - <span class="number">1</span>;<span class="comment">//确定区间范围</span></span><br><span class="line">        <span class="keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">            <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;<span class="comment">//相当于(l+r)/2</span></span><br><span class="line">            <span class="keyword">if</span>(a[mid] &gt;= x) r = mid;<span class="comment">//查找左端点</span></span><br><span class="line">            <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(a[r] == x)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; r &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//查找右端点</span></span><br><span class="line">            r = n<span class="number">-1</span>;<span class="comment">//右端点一定在[左端点,n-1]之间</span></span><br><span class="line">            <span class="keyword">while</span>(l &lt; r)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> mid = l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;<span class="comment">//因为写的使l=mid,所以要加上1</span></span><br><span class="line">                <span class="keyword">if</span>(a[mid] &lt;= x) l = mid;</span><br><span class="line">                <span class="keyword">else</span> r = mid<span class="number">-1</span>;</span><br><span class="line">            &#125;<span class="comment">//退出时l和r必然是相等的</span></span><br><span class="line">            cout &lt;&lt; r &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;-1 -1&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="790-数的三次方根"><a href="#790-数的三次方根" class="headerlink" title="790. 数的三次方根"></a>790. 数的三次方根</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><p>给定一个浮点数 <em>n</em></p>
<p>，求它的三次方根。</p>
<h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含一个浮点数 <em>n</em></p>
<p>。</p>
<h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，包含一个浮点数，表示问题的解。</p>
<p>注意，结果保留 6</p>
<p> 位小数。</p>
<h4 id="数据范围-1"><a href="#数据范围-1" class="headerlink" title="数据范围"></a>数据范围</h4><p>−10000≤<em>n</em>≤10000</p>
<h4 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1000.00</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10.000000</span><br></pre></td></tr></table></figure>

<h3 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h3><p>直接用二分的思想即可</p>
<h3 id="相关代码-1"><a href="#相关代码-1" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;n);</span><br><span class="line">    <span class="type">double</span> l=<span class="number">-10000</span>,r=<span class="number">10000</span>;<span class="comment">//区间</span></span><br><span class="line">    <span class="keyword">while</span>(r-l&gt;<span class="number">1e-8</span>)<span class="comment">//保留六位小数，为了更精确多开两位</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">double</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(mid*mid*mid&lt;n)<span class="comment">//判断条件</span></span><br><span class="line">            l=mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lf\n&quot;</span>,l);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="730-机器人跳跃问题"><a href="#730-机器人跳跃问题" class="headerlink" title="730. 机器人跳跃问题"></a>730. 机器人跳跃问题</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/732/">题目</a></h3><p>机器人正在玩一个古老的基于 DOS 的游戏。</p>
<p>游戏中有 <em>N</em>+1</p>
<p> 座建筑——从 0 到 <em>N</em></p>
<p> 编号，从左到右排列。</p>
<p>编号为 0</p>
<p> 的建筑高度为 0 个单位，编号为 <em>i</em> 的建筑高度为 <em>H</em>(<em>i</em>)</p>
<p> 个单位。</p>
<p>起初，机器人在编号为 0</p>
<p> 的建筑处。</p>
<p>每一步，它跳到下一个（右边）建筑。</p>
<p>假设机器人在第 <em>k</em></p>
<p> 个建筑，且它现在的能量值是 <em>E</em>，下一步它将跳到第 <em>k</em>+1</p>
<p> 个建筑。</p>
<p>如果 <em>H</em>(<em>k</em>+1)&gt;<em>E</em></p>
<p>，那么机器人就失去 <em>H</em>(<em>k</em>+1)−<em>E</em> 的能量值，否则它将得到 <em>E</em>−<em>H</em>(<em>k</em>+1)</p>
<p> 的能量值。</p>
<p>游戏目标是到达第 <em>N</em></p>
<p> 个建筑，在这个过程中能量值不能为负数个单位。</p>
<p>现在的问题是机器人至少以多少能量值开始游戏，才可以保证成功完成游戏？</p>
<h4 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行输入整数 <em>N</em></p>
<p>。</p>
<p>第二行是 <em>N</em></p>
<p> 个空格分隔的整数，<em>H</em>(1),<em>H</em>(2),…,<em>H</em>(<em>N</em>)</p>
<p> 代表建筑物的高度。</p>
<h4 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，表示所需的最少单位的初始能量值上取整后的结果。</p>
<h4 id="数据范围-2"><a href="#数据范围-2" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>N</em>,<em>H</em>(<em>i</em>)≤105</p>
<p>,</p>
<h4 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">3 4 3 2 4</span><br></pre></td></tr></table></figure>

<h4 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>

<h4 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">4 4 4</span><br></pre></td></tr></table></figure>

<h4 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>

<h4 id="输入样例3："><a href="#输入样例3：" class="headerlink" title="输入样例3："></a>输入样例3：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">1 6 4</span><br></pre></td></tr></table></figure>

<h4 id="输出样例3："><a href="#输出样例3：" class="headerlink" title="输出样例3："></a>输出样例3：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>

<h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>输入n个高度h，要求找出一个数x，使得2*x-h[k] 不能为负数，输出最小的这个数</p>
<h3 id="解题思路-2"><a href="#解题思路-2" class="headerlink" title="解题思路"></a>解题思路</h3><p>当大于要找的这个数时，都满足条件，可以用二分的方法</p>
<h3 id="相关代码1"><a href="#相关代码1" class="headerlink" title="相关代码1"></a>相关代码1</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        e=<span class="number">2</span>*e-a[i];<span class="comment">//mid是要经过一系列的计算的，最后相当于结果</span></span><br><span class="line">        <span class="keyword">if</span>(e &gt;= <span class="number">1e5</span>) <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//避免超出int的数据范围，当找的这个数比其中最大的数还要大时，说明一定满足条件(e+(e-h[k])一定大于0）</span></span><br><span class="line">        <span class="keyword">if</span>(e &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> l=<span class="number">0</span>,r=<span class="number">1e5</span>;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(mid)) r=mid;</span><br><span class="line">        <span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,r);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="相关代码2"><a href="#相关代码2" class="headerlink" title="相关代码2"></a>相关代码2</h3><p>不用二分的方法</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">1000010</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> min=<span class="number">0</span>,max=<span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[min] &gt;= a[i]) min = i;</span><br><span class="line">        <span class="keyword">if</span>(a[max] &lt;= a[i]) max = i;</span><br><span class="line">    &#125;<span class="comment">//找到最大值和最小值，因为答案必然在最大值和最小值之间</span></span><br><span class="line">    <span class="type">int</span> res = a[max];</span><br><span class="line">    <span class="type">int</span> i=a[min];</span><br><span class="line">    <span class="keyword">if</span>(min == max) i=<span class="number">0</span>;<span class="comment">//当只有一个元素的时候，i要从0开始</span></span><br><span class="line">    <span class="keyword">for</span>(i;i&lt;=a[max];i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> judge=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            judge = judge*<span class="number">2</span>-a[j];</span><br><span class="line">            <span class="keyword">if</span>(judge &lt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>((judge &gt;=<span class="number">0</span> || judge &lt;<span class="number">-1e9</span>) &amp;&amp; res &gt; i) <span class="comment">//因为judge可能会超过long long的数据范围变为负数所以或者judge&lt;-1e9时也成立</span></span><br><span class="line">            res = i;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1221-四平方和"><a href="#1221-四平方和" class="headerlink" title="1221. 四平方和"></a>1221. 四平方和</h2><p><a href="https://www.acwing.com/solution/content/90014/">AcWing 1221. 四平方和 - AcWing</a>          </p>
<h3 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/1223/">题目</a></h3><p>四平方和定理，又称为拉格朗日定理：</p>
<p>每个正整数都可以表示为至多 4</p>
<p> 个正整数的平方和。</p>
<p>如果把 0</p>
<p> 包括进去，就正好可以表示为 4</p>
<p> 个数的平方和。</p>
<p>比如：</p>
<p>5&#x3D;02+02+12+22</p>
<p>7&#x3D;12+12+12+22</p>
<p>对于一个给定的正整数，可能存在多种平方和的表示法。</p>
<p>要求你对 4</p>
<p> 个数排序：</p>
<p>0≤<em>a</em>≤<em>b</em>≤<em>c</em>≤<em>d</em></p>
<p>并对所有的可能表示法按 <em>a</em>,<em>b</em>,<em>c</em>,<em>d</em></p>
<p> 为联合主键升序排列，最后输出第一个表示法。</p>
<h4 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入一个正整数 <em>N</em></p>
<p>。</p>
<h4 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出4个非负整数，按从小到大排序，中间用空格分开。</p>
<h4 id="数据范围-3"><a href="#数据范围-3" class="headerlink" title="数据范围"></a>数据范围</h4><p>0&lt;<em>N</em>&lt;5∗106</p>
<h4 id="输入样例：-2"><a href="#输入样例：-2" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-2"><a href="#输出样例：-2" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0 0 1 2</span><br></pre></td></tr></table></figure>

<h3 id="解题思路-3"><a href="#解题思路-3" class="headerlink" title="解题思路"></a>解题思路</h3><p>因为直接用三重循环会超时，所以可以分别枚举a,b和c,d的所有情况，<code>a*a+b*b=n-(c*c+d*d)</code>，将<code>c*c+d*d</code>和c,d的所有情况放在一个结构体数组中，<code>s=c*c+d*d</code>  <code>t=n-a*a+b*b</code>,用二分的方法查找满足s&#x3D;t的s</p>
<h3 id="相关代码-2"><a href="#相关代码-2" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">5</span> * <span class="number">1e6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Sum</span>&#123;</span><br><span class="line">    <span class="type">int</span> s,c,d;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>&lt; (<span class="type">const</span> Sum &amp;t) <span class="type">const</span>&#123;<span class="comment">//重载小于号</span></span><br><span class="line">        <span class="keyword">if</span>(s!=t.s) <span class="keyword">return</span> s&lt;t.s;<span class="comment">//和按由小到大排列</span></span><br><span class="line">        <span class="keyword">if</span>(c!=t.c) <span class="keyword">return</span> c&lt;t.c;<span class="comment">//和相同时c按由小到大排列</span></span><br><span class="line">        <span class="keyword">return</span> d&lt;t.d;<span class="comment">//和与c都相同时d从由小到大排列</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;S[N];<span class="comment">//结构体名称</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//先枚举c,d的所有情况，将每一个c,d及其和存到结构体中</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> c = <span class="number">0</span>; c * c &lt;= n;c++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> d = c; c * c + d * d &lt;= n; d++)&#123;</span><br><span class="line">            S[m++] = &#123;c * c + d * d, c, d&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(S, S + m);<span class="comment">//对结构体进行排序，s由小到大排序</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//枚举所有a,b可能的情况</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> a = <span class="number">0</span>; a * a &lt;= n;a++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> b = a; a * a + b*b &lt;= n; b++)&#123;<span class="comment">//a,b从0开始查找</span></span><br><span class="line">            <span class="type">int</span> t = n - a * a - b * b;</span><br><span class="line">            <span class="comment">//用二分法查找结构体中的s,(a*a+b*b=n-s)</span></span><br><span class="line">            <span class="type">int</span> l = <span class="number">0</span>,r = m - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">                <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(S[mid].s &gt;= t) r = mid;</span><br><span class="line">                <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(S[l].s == t)&#123;<span class="comment">//当s与t相等时，满足条件</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d\n&quot;</span>,a,b,S[l].c,S[l].d);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1227-分巧克力"><a href="#1227-分巧克力" class="headerlink" title="1227. 分巧克力"></a>1227. 分巧克力</h2><h3 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/1229/">题目</a></h3><p>儿童节那天有 <em>K</em>位小朋友到小明家做客。小明拿出了珍藏的巧克力招待小朋友们。小明一共有 <em>N</em> 块巧克力，其中第 <em>i</em> 块是 <em>H**i</em>×<em>W**i</em> 的方格组成的长方形。为了公平起见，小明需要从这 <em>N</em> 块巧克力中切出 <em>K</em>块巧克力分给小朋友们。切出的巧克力需要满足：</p>
<ol>
<li><p>形状是正方形，边长是整数  </p>
</li>
<li><p>大小相同</p>
</li>
</ol>
<p>例如一块 6×5 的巧克力可以切出 6 块 2×2 的巧克力或者 2 块 3×3的巧克力。</p>
<p>当然小朋友们都希望得到的巧克力尽可能大，你能帮小明计算出最大的边长是多少么？</p>
<h4 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含两个整数 <em>N</em>和 <em>K</em>。  以下 <em>N</em> 行每行包含两个整数 <em>H**i</em> 和 <em>W**i</em>。输入保证每位小朋友至少能获得一块 1×1 的巧克力。</p>
<h4 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出切出的正方形巧克力最大可能的边长。</p>
<h4 id="数据范围-4"><a href="#数据范围-4" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>N</em>,<em>K</em>≤105</p>
<p>,<br>1≤<em>H**i</em>,<em>W**i</em>≤105</p>
<h4 id="输入样例：-3"><a href="#输入样例：-3" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 10</span><br><span class="line">6 5</span><br><span class="line">5 6</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-3"><a href="#输出样例：-3" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>

<h3 id="题意-2"><a href="#题意-2" class="headerlink" title="题意"></a>题意</h3><p>输入n块巧克力和k个小朋友，再分别输入这n块巧克力的长和宽，要求将巧克力分成正方形分给小朋友，每个人至少有一块巧克力，求巧克力的最大边长</p>
<h3 id="解题思路-4"><a href="#解题思路-4" class="headerlink" title="解题思路"></a>解题思路</h3><p>在1~100000之间找一个数，使得所有(w[i]&#x2F;mid)*(h[i]&#x2F;mid)之和大于k,要求mid为最大，可以用二分，巧克力边长越大，块数越少，边长与块数是一个递减函数</p>
<h3 id="相关代码-3"><a href="#相关代码-3" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> h[N],w[N];</span><br><span class="line"><span class="type">int</span> n,k;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> mid)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> s=<span class="number">0</span>;<span class="comment">//表示块数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        s += (h[i] / mid) * (w[i] / mid);</span><br><span class="line">        <span class="keyword">if</span>(s &gt;= k) <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//块数比要求的块数大时，满足条件，但因为边长与块数是递减函数，要求最大的边长，就要移动左端点</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;h[i],&amp;w[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> l = <span class="number">1</span>, r = <span class="number">1e5</span>;</span><br><span class="line">    <span class="keyword">while</span> (l&lt;r)&#123;</span><br><span class="line">        <span class="type">int</span> mid = l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;<span class="comment">//因为是l=mid，所以要加1避免死循环</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(mid)) l=mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,r);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://s2.loli.net/2024/03/04/cAQOlxPImGXasUR.png" alt="image-20220131001057644">    </p>
<hr>
<h2 id="795-前缀和"><a href="#795-前缀和" class="headerlink" title="795. 前缀和  "></a><a href="https://www.acwing.com/solution/content/88507/">795. 前缀和  </a></h2><h3 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/797/">题目</a></h3><p>输入一个长度为 <em>n</em>的整数序列。接下来再输入 <em>m</em> 个询问，每个询问输入一对 <em>l</em>,<em>r</em>。对于每个询问，输出原序列中第 <em>l</em> 个数到第 <em>r</em> 个数的和。</p>
<h4 id="输入格式-5"><a href="#输入格式-5" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含两个整数 <em>n</em>和 <em>m</em>。</p>
<p>第二行包含 <em>n</em>个整数，表示整数数列。接下来 <em>m</em> 行，每行包含两个整数 <em>l</em> 和 <em>r</em>，表示一个询问的区间范围。</p>
<h4 id="输出格式-5"><a href="#输出格式-5" class="headerlink" title="输出格式"></a>输出格式</h4><p>共 <em>m</em> 行，每行输出一个询问的结果。</p>
<h4 id="数据范围-5"><a href="#数据范围-5" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>l</em>≤<em>r</em>≤<em>n</em>,<br>1≤<em>n</em>,<em>m</em>≤100000,−1000≤数列中元素的值≤1000</p>
<h4 id="输入样例：-4"><a href="#输入样例：-4" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 3</span><br><span class="line">2 1 3 6 4</span><br><span class="line">1 2</span><br><span class="line">1 3</span><br><span class="line">2 4</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-4"><a href="#输出样例：-4" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">6</span><br><span class="line">10</span><br></pre></td></tr></table></figure>

<h3 id="解题思路-5"><a href="#解题思路-5" class="headerlink" title="解题思路"></a>解题思路</h3><p>将所有的和都存起来，s&#x3D;s[r]-s[l-1]<img src="https://img-blog.csdnimg.cn/20201213222213524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYyOTI4NQ==,size_16,color_FFFFFF,t_70" alt="图片"></p>
<h3 id="相关代码-4"><a href="#相关代码-4" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> a[N],s[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        s[i]=s[i<span class="number">-1</span>]+a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="type">int</span> l,r;</span><br><span class="line">        cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,s[r]-s[l<span class="number">-1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="796-子矩阵的和"><a href="#796-子矩阵的和" class="headerlink" title="796. 子矩阵的和"></a><a href="https://www.acwing.com/solution/content/90380/">796. 子矩阵的和</a></h2><h3 id="题目-6"><a href="#题目-6" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/798/">题目</a></h3><p>输入一个 n 行 m 列的整数矩阵，再输入 q 个询问，每个询问包含四个整数 x1,y1,x2,y2，表示一个<br>子矩阵的左上角坐标和右下角坐标。对于每个询问输出子矩阵中所有数的和。</p>
<h4 id="输入格式-6"><a href="#输入格式-6" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含三个整数 <em>n</em>，<em>m</em>，<em>q</em>。</p>
<p>接下来 <em>n</em> 行，每行包含 <em>m</em> 个整数，表示整数矩阵。接下来 <em>q</em> 行，每行包含四个整数 <em>x</em>1,<em>y</em>1,<em>x</em>2,<em>y</em>2，表示一组询问。</p>
<h4 id="输出格式-6"><a href="#输出格式-6" class="headerlink" title="输出格式"></a>输出格式</h4><p>共 <em>q</em> 行，每行输出一个询问的结果。</p>
<h4 id="数据范围-6"><a href="#数据范围-6" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>n</em>,<em>m</em>≤1000,1≤<em>q</em>≤200000,1≤<em>x</em>1≤<em>x</em>2≤<em>n</em>,1≤<em>y</em>1≤<em>y</em>2≤<em>m</em>,−1000≤矩阵内元素的值≤1000</p>
<h4 id="输入样例：-5"><a href="#输入样例：-5" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 4 3</span><br><span class="line">1 7 2 4</span><br><span class="line">3 6 2 8</span><br><span class="line">2 1 2 3</span><br><span class="line">1 1 2 2</span><br><span class="line">2 1 3 4</span><br><span class="line">1 3 3 4</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-5"><a href="#输出样例：-5" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">17</span><br><span class="line">27</span><br><span class="line">21</span><br></pre></td></tr></table></figure>

<h3 id="解题思路-6"><a href="#解题思路-6" class="headerlink" title="解题思路"></a>解题思路</h3><p><img src="https://s2.loli.net/2024/03/04/8mHZNyKETpA6DSh.png" alt="image-20220209160034148"></p>
<p><img src="C:\Users\鑫霜\AppData\Roaming\Typora\typora-user-images\image-20220209160454927.png" alt="image-20220209160454927"></p>
<p>S[x][y]即表示以x,y为右下角的矩阵的和<strong>（前面的一个数+上面的一个数-左上方的一个数+这个位置原来的数得到的就是这个矩阵所有数的和，要求下标从1开始避免越界）</strong></p>
<p><img src="https://s2.loli.net/2024/03/04/tMn6RBCSfyFXio2.png" alt="image-20220209160054391"></p>
<p><img src="https://s2.loli.net/2024/03/04/Pl1XygBOFc8xAzL.png" alt="image-20220209160324182"></p>
<p><img src="C:\Users\鑫霜\AppData\Roaming\Typora\typora-user-images\image-20220209160533598.png" alt="image-20220209160533598"></p>
<h3 id="相关代码-5"><a href="#相关代码-5" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N][N],s[N][N];<span class="comment">//一个表示原数组，一个表示前缀和数组</span></span><br><span class="line"><span class="type">int</span> n,m,q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;q);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i][j]);</span><br><span class="line">            s[i][j]=s[i<span class="number">-1</span>][j]+s[i][j<span class="number">-1</span>]-s[i<span class="number">-1</span>][j<span class="number">-1</span>]+a[i][j];<span class="comment">//利用容斥原理求前缀和矩阵</span></span><br><span class="line">        &#125;</span><br><span class="line">            </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="type">int</span> x1,y1,x2,y2;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>,&amp;x1,&amp;y1,&amp;x2,&amp;y2);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,s[x2][y2]-s[x1<span class="number">-1</span>][y2]-s[x2][y1<span class="number">-1</span>]+s[x1<span class="number">-1</span>][y1<span class="number">-1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="99-激光炸弹"><a href="#99-激光炸弹" class="headerlink" title="99. 激光炸弹"></a>99. 激光炸弹</h2><h3 id="题目-7"><a href="#题目-7" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/101/">题目</a></h3><p>地图上有 <em>N</em>个目标，用整数 <em>X**i</em>,<em>Y**i</em> 表示目标在地图上的位置，每个目标都有一个价值 <em>W**i</em>。</p>
<p><strong>注意</strong>：不同目标可能在同一位置。</p>
<p>现在有一种新型的激光炸弹，可以摧毁一个包含 <em>R</em>×<em>R</em> 个位置的正方形内的所有目标。激光炸弹的投放是通过卫星定位的，但其有一个缺点，就是其爆炸范围，即那个正方形的边必须和 <em>x</em>，<em>y</em> 轴平行。求一颗炸弹最多能炸掉地图上总价值为多少的目标。</p>
<h4 id="输入格式-7"><a href="#输入格式-7" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行输入正整数 <em>N</em> 和 <em>R</em>，分别代表地图上的目标数目和正方形的边长，数据用空格隔开。接下来 <em>N</em> 行，每行输入一组数据，每组数据包括三个整数 <em>X**i</em>,<em>Y**i</em>,<em>W**i</em>，分别代表目标的 <em>x</em> 坐标，<em>y</em> 坐标和价值，数据用空格隔开。</p>
<h4 id="输出格式-7"><a href="#输出格式-7" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个正整数，代表一颗炸弹最多能炸掉地图上目标的总价值数目。</p>
<h4 id="数据范围-7"><a href="#数据范围-7" class="headerlink" title="数据范围"></a>数据范围</h4><p>0≤<em>R</em>≤109<br>0&lt;<em>N</em>≤10000,<br>0≤<em>X**i</em>,<em>Y**i</em>≤5000<br>0≤<em>W**i</em>≤1000</p>
<h4 id="输入样例：-6"><a href="#输入样例：-6" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 1</span><br><span class="line">0 0 1</span><br><span class="line">1 1 1</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-6"><a href="#输出样例：-6" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure>

<h3 id="题意-3"><a href="#题意-3" class="headerlink" title="题意"></a>题意</h3><p>输入目标数目和正方形边长，再依次输入目标的位置和价值，求正方形能框住的目标最大价值是多少。（要注意<strong>目标是在格点上</strong>，不是在格子上，一个边长为r的正方形最多能框住(r+1)*(r+1)个点，但是在正方形边上的点不算，所以要正方形要错开框，最多能框r*r个点，用前缀和下标要从1开始，所以横纵坐标都要加一）</p>
<p><img src="https://s2.loli.net/2024/03/04/B6EMfyilCV3ULxe.png" alt="image-20220211120942864"></p>
<p><img src="https://s2.loli.net/2024/03/04/EY8xu5jbTDSR9wO.png" alt="image-20220211122834773"></p>
<h3 id="解题思路-7"><a href="#解题思路-7" class="headerlink" title="解题思路"></a>解题思路</h3><p>先求出目标价值的前缀和矩阵，因为数据范围不是很大可以直接枚举所有正方形框住的价值，找出最大的即可</p>
<h3 id="相关代码-6"><a href="#相关代码-6" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">5010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m,n;</span><br><span class="line"><span class="type">int</span> cnt,r;</span><br><span class="line"><span class="type">int</span> s[N][N];<span class="comment">//代表代表目标的前缀和数组和原数组，因为前缀和数组可以直接覆盖掉原数组，所以不再开一个原数组避免超过空间限制</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; cnt &gt;&gt; r;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">    r=<span class="built_in">min</span>(<span class="number">5001</span>,r);<span class="comment">//r代表正方形边长，正方形边长不会超出最大目标所在位置的边长</span></span><br><span class="line">    </span><br><span class="line">    m=n=r;<span class="comment">//m,n代表最大的目标位置边长，不会低于正方形的边长</span></span><br><span class="line">    <span class="keyword">while</span>(cnt--)&#123;</span><br><span class="line">        <span class="type">int</span> x,y,w;</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; y &gt;&gt; w;</span><br><span class="line">        x++,y++;<span class="comment">//求前缀和的下标最好从1开始，避免从0开始导致i-1出现负数导致数组越界</span></span><br><span class="line">        m=<span class="built_in">max</span>(m,y),n=<span class="built_in">max</span>(n,x);<span class="comment">//m,n代表最大的目标位置边长</span></span><br><span class="line">        s[x][y] += w;<span class="comment">//目标所在的位置及价值，因为同一个位置可能有多个目标，所以要累加</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            s[i][j]+=s[i<span class="number">-1</span>][j]+s[i][j<span class="number">-1</span>]-s[i<span class="number">-1</span>][j<span class="number">-1</span>];<span class="comment">//求前缀和数组（s同时也代表原数组）</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//枚举所有可能的方案</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=r;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=r;j&lt;=m;j++)&#123;</span><br><span class="line">            res=<span class="built_in">max</span>(res,s[i][j]-s[i-r][j]-s[i][j-r]+s[i-r][j-r]);<span class="comment">//求目标的价值</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1230-K倍区间"><a href="#1230-K倍区间" class="headerlink" title="1230. K倍区间"></a>1230. K倍区间</h2><h3 id="题目-8"><a href="#题目-8" class="headerlink" title="题目"></a><a href="https://www.acwing.com/problem/content/description/1232/">题目</a></h3><p>给定一个长度为 $N$ 的数列，$A_1, A_2, … A_N$，如果其中一段连续的子序列 $A_i, A_{i+1}, … A_j$ 之和是 $K$ 的倍数，我们就称这个区间 $[i, j]$ 是 $K$ 倍区间。</p>
<p>你能求出数列中总共有多少个 $K$ 倍区间吗？</p>
<h4 id="输入格式-8"><a href="#输入格式-8" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含两个整数 $N$ 和 $K$。</p>
<p>以下 $N$ 行每行包含一个整数 $A_i$。</p>
<h4 id="输出格式-8"><a href="#输出格式-8" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，代表 $K$ 倍区间的数目。</p>
<h4 id="数据范围-8"><a href="#数据范围-8" class="headerlink" title="数据范围"></a>数据范围</h4><p>$1 \le N, K \le 100000$,<br>$1 \le A_i \le 100000$</p>
<h4 id="输入样例：-7"><a href="#输入样例：-7" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 2</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-7"><a href="#输出样例：-7" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure>

<h3 id="解题思路-8"><a href="#解题思路-8" class="headerlink" title="解题思路"></a>解题思路</h3><p>先列举右端点，再列举左端点，直接暴力做法，但两重循环就是10的10次方，会超时</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> r=<span class="number">1</span>;r&lt;=n;r++)&#123;<span class="comment">//右端点</span></span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> l=<span class="number">1</span>;l&lt;=r;l++)&#123;<span class="comment">//左端点</span></span><br><span class="line">           <span class="keyword">if</span>((s[r]-s[l<span class="number">-1</span>])%k==<span class="number">0</span>) res++;<span class="comment">//利用前缀和依次求子序列的和，s[N]代表前缀和数组</span></span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>优化一重循环，</p>
<p><code> (s[r] - s[l-1]) % k == 0，即 s[r] % k == s[l-1] % k,</code></p>
<p>由此可以看出我们只要把 <code>s[N] % k </code>的值（即所有前缀和除以k的余数）存下来，然后查找一下有多少对余数相等即可</p>
<p><strong>关于cnt[0]为什么要等与1？</strong></p>
<p>因为我们求的是有多少对余数相等，但当余数等于0时，它本身就构成了一个 k 倍区间，因此也可以不要 cnt[0] &#x3D; 1，直接在最后的答案加上 cnt[0] 即可</p>
<p>不加cnt[0]&#x3D;1</p>
<p><img src="https://s2.loli.net/2024/03/04/429M3hzwronvEY8.png" alt="image-20220213185232722"></p>
<p>加上cnt[0]&#x3D;1后</p>
<p><img src="https://s2.loli.net/2024/03/04/3SrUoywc1VRPHbi.png" alt="image-20220213185802066"></p>
<p><a href="https://www.acwing.com/solution/content/91503/">图参考小成同学</a></p>
<h3 id="相关代码-7"><a href="#相关代码-7" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> s[N],res;<span class="comment">//s[N]代表前缀和，res代表结果，可能会超过int的数据范围，一定要用long long</span></span><br><span class="line"><span class="type">int</span> n,k;</span><br><span class="line"><span class="type">int</span> cnt[N];<span class="comment">//存不同余数的个数，比如cnt[1]就代表余数是1的个数，cnt[2]代表s[i] % k是2的个数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;s[i]);</span><br><span class="line">        s[i]+=s[i<span class="number">-1</span>];<span class="comment">//求前缀和数组</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    cnt[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        res+=cnt[s[i]%k];</span><br><span class="line">        <span class="comment">//因为i相当于是右端点，cnt存了i之前的所有前缀和余数的个数</span></span><br><span class="line">        <span class="comment">//如果此时的s[i]%k是前面出现过的(即出现s[i]的余数与前面的s的余数相等时),那么cnt里面就会有数，有几个相等的余数就可以构成几对k倍区间，所以结果要加上前面所有与此时的s[i]%k相等的余数个数，</span></span><br><span class="line">        <span class="comment">//只要有相同的余数个数就要加到结果里面，相同的余数可能有好几对</span></span><br><span class="line">        cnt[s[i]%k]++;</span><br><span class="line">        <span class="comment">//代表这个余数又多了一个，要加1，保证下次再出现相同的余数时可以加上前面所有有相同余数的个数</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,res);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
        <category>习题</category>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>算法</tag>
        <tag>Acwing</tag>
        <tag>二分与前缀和</tag>
      </tags>
  </entry>
  <entry>
    <title>acwing 蓝桥杯辅导课递归与递推章节习题</title>
    <url>/2024/03/04/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E9%80%92%E5%BD%92%E4%B8%8E%E9%80%92%E6%8E%A8/</url>
    <content><![CDATA[<h2 id="92-递归实现指数型枚举"><a href="#92-递归实现指数型枚举" class="headerlink" title="92. 递归实现指数型枚举"></a>92. 递归实现指数型枚举</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>从 1∼<em>n</em> 这 <em>n</em></p>
<p> 个整数中随机选取任意多个，输出所有可能的选择方案。</p>
<span id="more"></span>

<h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入一个整数 <em>n</em>。</p>
<h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>每行输出一种方案。同一行内的数必须升序排列，相邻两个数用恰好 1 个空格隔开。对于没有选任何数的方案，输出空行。</p>
<p>本题有自定义校验器（SPJ），各行（不同方案）之间的顺序任意。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>n</em>≤15</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>

<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">2</span><br><span class="line">2 3</span><br><span class="line">1</span><br><span class="line">1 3</span><br><span class="line">1 2</span><br><span class="line">1 2 3</span><br></pre></td></tr></table></figure>

<h3 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">16</span>;</span><br><span class="line"><span class="type">int</span>  st[N];<span class="comment">//记录状态，0表示还没考虑，1表示已选择，2表示未选择</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">if</span>(st[i]==<span class="number">1</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    st[u]=<span class="number">2</span>;        <span class="comment">//第一个分支，不选</span></span><br><span class="line">    <span class="built_in">dfs</span>(u+<span class="number">1</span>);</span><br><span class="line">    st[u]=<span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    st[u]=<span class="number">1</span>;        <span class="comment">//第二个分支，选</span></span><br><span class="line">    <span class="built_in">dfs</span>(u+<span class="number">1</span>);</span><br><span class="line">    st[u]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="94-递归实现排列型枚举"><a href="#94-递归实现排列型枚举" class="headerlink" title="94. 递归实现排列型枚举"></a>94. 递归实现排列型枚举</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><p>把 1∼<em>n</em> 这 <em>n</em> 个整数排成一行后随机打乱顺序，输出所有可能的次序。</p>
<h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>一个整数 <em>n</em>。</p>
<h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>按照从小到大的顺序输出所有方案，每行 1 个。 </p>
<p>首先，同一行相邻两个数用一个空格隔开。</p>
<p>其次，对于两个不同的行，对应下标的数一一比较，字典序较小的排在前面。</p>
<h4 id="数据范围-1"><a href="#数据范围-1" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>n</em>≤9</p>
<h4 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 2 3</span><br><span class="line">1 3 2</span><br><span class="line">2 1 3</span><br><span class="line">2 3 1</span><br><span class="line">3 1 2</span><br><span class="line">3 2 1</span><br></pre></td></tr></table></figure>

<h3 id="答案-1"><a href="#答案-1" class="headerlink" title="答案"></a>答案</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> st[N];</span><br><span class="line"><span class="type">bool</span> used[N];<span class="comment">//true表示已经用过了，false表示还没有用过</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u&gt;n)<span class="comment">//边界条件，即一次递归结束的条件</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++) </span><br><span class="line">                cout &lt;&lt; st[j] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;<span class="comment">//一次递归结束</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line">            st[u]=i;</span><br><span class="line">            <span class="keyword">if</span>(!used[i])</span><br><span class="line">            &#123;</span><br><span class="line">                used[i]=<span class="literal">true</span>; <span class="comment">//表示这个数已经被用过了（因为在一次递归的过程中，已经用过了的数就不会再用了）</span></span><br><span class="line">                <span class="built_in">dfs</span>(u+<span class="number">1</span>);</span><br><span class="line">            <span class="comment">//恢复现场，一次递归结束后要恢复之前的状态</span></span><br><span class="line">                st[u]=<span class="number">0</span>;</span><br><span class="line">                used[i]=<span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="93-递归实现组合型枚举"><a href="#93-递归实现组合型枚举" class="headerlink" title="93. 递归实现组合型枚举"></a>93. 递归实现组合型枚举</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3><p>从 1∼<em>n</em> 这 <em>n</em> 个整数中随机选出 <em>m</em> 个，输出所有可能的选择方案。</p>
<h4 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h4><p>两个整数 <em>n</em>,<em>m</em> ,在同一行用空格隔开。</p>
<h4 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h4><p>按照从小到大的顺序输出所有方案，每行 1 个。</p>
<p>首先，同一行内的数升序排列，相邻两个数用一个空格隔开。</p>
<p>其次，对于两个不同的行，对应下标的数一一比较，字典序较小的排在前面（例如 <code>1 3 5 7</code> 排在 <code>1 3 6 8</code> 前面）。</p>
<h4 id="数据范围-2"><a href="#数据范围-2" class="headerlink" title="数据范围"></a>数据范围</h4><p><em>n</em>&gt;0 ,<br>0≤<em>m</em>≤<em>n</em> ,<em>n</em>+(<em>n</em>−<em>m</em>)≤25</p>
<h4 id="输入样例：-2"><a href="#输入样例：-2" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 3</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-2"><a href="#输出样例：-2" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 2 3 </span><br><span class="line">1 2 4 </span><br><span class="line">1 2 5 </span><br><span class="line">1 3 4 </span><br><span class="line">1 3 5 </span><br><span class="line">1 4 5 </span><br><span class="line">2 3 4 </span><br><span class="line">2 3 5 </span><br><span class="line">2 4 5 </span><br><span class="line">3 4 5 </span><br></pre></td></tr></table></figure>

<h3 id="答案-2"><a href="#答案-2" class="headerlink" title="答案"></a>答案</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">25</span>;</span><br><span class="line"><span class="type">int</span> st[N];      <span class="comment">//记录每个位置上的数有用过</span></span><br><span class="line"><span class="type">int</span> m,n;</span><br><span class="line"><span class="type">int</span> start=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u+n-start&lt;m) <span class="keyword">return</span>;<span class="comment">//剪枝，优化代码，提高效率，已经选了u-1个数，还剩n-start+1个数没选，如果加起来都小于m，则无解</span></span><br><span class="line">    <span class="keyword">if</span>(u&gt;m)         <span class="comment">//边界条件</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,st[i]);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=start;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        st[u]=i;</span><br><span class="line">        start=i+<span class="number">1</span>;      <span class="comment">//每一次要从后面的数开始枚举</span></span><br><span class="line">        <span class="built_in">dfs</span>(u+<span class="number">1</span>);</span><br><span class="line">        </span><br><span class="line">        st[u]=<span class="number">0</span>;		<span class="comment">//恢复现场</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1209-带分数"><a href="#1209-带分数" class="headerlink" title="1209. 带分数"></a>1209. 带分数</h2><h3 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h3><p>100 可以表示为带分数的形式：100&#x3D;3+69258&#x2F;714</p>
<p>还可以表示为：100&#x3D;82+3546&#x2F;197</p>
<p>注意特征：带分数中，数字 1∼9</p>
<p> 分别出现且只出现一次（不包含 0）。</p>
<p>类似这样的带分数，100 有 11 种表示法。</p>
<h4 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h4><p>一个正整数。</p>
<h4 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出输入数字用数码 1∼9 不重复不遗漏地组成带分数表示的全部种数。</p>
<h4 id="数据范围-3"><a href="#数据范围-3" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>N</em>&lt;106</p>
<h4 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">100</span><br></pre></td></tr></table></figure>

<h4 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">11</span><br></pre></td></tr></table></figure>

<h4 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">105</span><br></pre></td></tr></table></figure>

<h4 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure>

<h3 id="答案-3"><a href="#答案-3" class="headerlink" title="答案"></a>答案</h3><h4 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h4><p>给定一个数n，要求满足n&#x3D;a+b&#x2F;c，其中a,b,c不重复涵盖1~9的所有数</p>
<h4 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h4><ul>
<li>先列举出1~9的全排列，然后将每一组数分成三份，a,b,c分别对应其中一份代表的数字，最后只要a,b,c满足条件即可</li>
</ul>
<h4 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> num[N];  <span class="comment">//放数字1~9的全排列</span></span><br><span class="line"><span class="type">bool</span> used[N];<span class="comment">//false表示没有用过，true表示用过</span></span><br><span class="line"><span class="type">int</span> cnt;	<span class="comment">//计数</span></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">sum</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span><span class="comment">//用来求a,b,c的值</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=l;i&lt;=r;i++)&#123;</span><br><span class="line">        res=res*<span class="number">10</span>+num[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u==<span class="number">10</span>)&#123;<span class="comment">//用两重循环对每个1~9的排列进行分割</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">7</span>;i++)&#123;<span class="comment">//第一次分割不能超过7，不然则无法分成两部分</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;=<span class="number">8</span>;j++)&#123;<span class="comment">//同理</span></span><br><span class="line">                <span class="type">int</span> a=<span class="built_in">sum</span>(<span class="number">1</span>,i);</span><br><span class="line">                <span class="type">int</span> b=<span class="built_in">sum</span>(i+<span class="number">1</span>,j);</span><br><span class="line">                <span class="type">int</span> c=<span class="built_in">sum</span>(j+<span class="number">1</span>,<span class="number">9</span>);</span><br><span class="line">                <span class="keyword">if</span>(a*c+b == n*c) </span><br><span class="line">                    cnt++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//求1~9的全排列</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!used[i])&#123;</span><br><span class="line">            used[i]=<span class="literal">true</span>;</span><br><span class="line">            num[u]=i;</span><br><span class="line">            <span class="built_in">dfs</span>(u+<span class="number">1</span>);</span><br><span class="line">            <span class="comment">//恢复现场</span></span><br><span class="line">            used[i]=<span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,cnt);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="95-费解的开关"><a href="#95-费解的开关" class="headerlink" title="95. 费解的开关"></a>95. 费解的开关</h2><h3 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a>题目</h3><p>你玩过“拉灯”游戏吗？25 盏灯排成一个 5×5</p>
<p> 的方形。</p>
<p>每一个灯都有一个开关，游戏者可以改变它的状态。每一步，游戏者可以改变某一个灯的状态。游戏者改变一个灯的状态会产生连锁反应：和这个灯上下左右相邻的灯也要相应地改变其状态。我们用数字 1 表示一盏开着的灯，用数字 0 表示关着的灯。</p>
<p>下面这种状态</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10111</span><br><span class="line">01101</span><br><span class="line">10111</span><br><span class="line">10000</span><br><span class="line">11011</span><br></pre></td></tr></table></figure>

<p>在改变了最左上角的灯的状态后将变成：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">01111</span><br><span class="line">11101</span><br><span class="line">10111</span><br><span class="line">10000</span><br><span class="line">11011</span><br></pre></td></tr></table></figure>

<p>再改变它正中间的灯后状态将变成：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">01111</span><br><span class="line">11001</span><br><span class="line">11001</span><br><span class="line">10100</span><br><span class="line">11011</span><br></pre></td></tr></table></figure>

<p>给定一些游戏的初始状态，编写程序判断游戏者是否可能在 6</p>
<p> 步以内使所有的灯都变亮。</p>
<h4 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行输入正整数 <em>n</em>，代表数据中共有 <em>n</em> 个待解决的游戏初始状态。</p>
<p>以下若干行数据分为 <em>n</em> 组，每组数据有 5 行，每行 5 个字符。</p>
<p>每组数据描述了一个游戏的初始状态。</p>
<p>各组数据间用一个空行分隔。</p>
<h4 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式"></a>输出格式</h4><p>一共输出 <em>n</em> 行数据，每行有一个小于等于 6 的整数，它表示对于输入数据中对应的游戏状态最少需要几步才能使所有灯变亮。对于某一个游戏初始状态，若 6</p>
<p> 步以内无法使所有灯变亮，则输出 −1。</p>
<h4 id="数据范围-4"><a href="#数据范围-4" class="headerlink" title="数据范围"></a>数据范围</h4><p>0&lt;<em>n</em>≤500</p>
<h4 id="输入样例：-3"><a href="#输入样例：-3" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">00111</span><br><span class="line">01011</span><br><span class="line">10001</span><br><span class="line">11010</span><br><span class="line">11100</span><br><span class="line"></span><br><span class="line">11101</span><br><span class="line">11101</span><br><span class="line">11110</span><br><span class="line">11111</span><br><span class="line">11111</span><br><span class="line"></span><br><span class="line">01111</span><br><span class="line">11111</span><br><span class="line">11111</span><br><span class="line">11111</span><br><span class="line">11111</span><br></pre></td></tr></table></figure>

<p>输出样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">2</span><br><span class="line">-1</span><br></pre></td></tr></table></figure>

<h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>改变一个灯的状态时，上下左右的灯都会发生相应的变化，通过一定的操作，将所有的灯都变亮。</p>
<h3 id="相关思路"><a href="#相关思路" class="headerlink" title="相关思路"></a>相关思路</h3><p>可以枚举第一行所有的操作方案，因为只要第一行确定了，后面的操作也就相对确定，比如第一行有一个暗的，那么第二行那个暗的下面的灯不论明暗都要操作，这样才可以使第一行所有灯都变亮。这样下来只有最后一行的灯无法操作改变，如果最后一行有暗的，则无法操作成功</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">6</span>;</span><br><span class="line"><span class="type">char</span> g[N][N],backup[N][N];</span><br><span class="line"><span class="type">int</span> dx[<span class="number">5</span>]=&#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,dy[<span class="number">5</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>&#125;;<span class="comment">//表示的是坐标</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">turn</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span><span class="comment">//这个操作是把操作的周围对应改变</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a=x+dx[i],b=y+dy[i];</span><br><span class="line">        <span class="keyword">if</span>(a&lt;<span class="number">0</span> || a&gt;=<span class="number">5</span> || b&lt;<span class="number">0</span> || b&gt;=<span class="number">5</span>) <span class="keyword">continue</span>;<span class="comment">//如果超过边界，直接忽略</span></span><br><span class="line">        g[a][b] ^= <span class="number">1</span>;<span class="comment">//异或，不同时就变成相反的数</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++) cin &gt;&gt; g[i];<span class="comment">//输入每一行，按行输入</span></span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> res=<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> op=<span class="number">0</span>;op&lt;<span class="number">32</span>;op++)<span class="comment">//枚举第一行的32种做法，每种做法都试一遍，不管亮灭，第一行的做法如果确定，后面的做法也就确定了</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">memcpy</span>(backup,g,<span class="keyword">sizeof</span> g);<span class="comment">//backup用来存g，因为每种做法枚举后，后四行要恢复原样</span></span><br><span class="line">            <span class="type">int</span> step=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">                <span class="keyword">if</span>(op &gt;&gt; i &amp; <span class="number">1</span>)<span class="comment">//第一行的做法，1表示按了，0表示没按</span></span><br><span class="line">                &#123;</span><br><span class="line">                    step++;</span><br><span class="line">                    <span class="built_in">turn</span>(<span class="number">0</span>,i);<span class="comment">//周围相应改变</span></span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)<span class="comment">//枚举1到4行需要按的地方，第5行无法操作（第一行最开始的操作是不管明灭的，之后的行数都要根据上一行的明灭情况来决定）</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)</span><br><span class="line">                    <span class="keyword">if</span>(g[i][j] == <span class="string">&#x27;0&#x27;</span>)<span class="comment">//如果有灭的，步骤加一</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        step++;</span><br><span class="line">                        <span class="built_in">turn</span>(i+<span class="number">1</span>,j);</span><br><span class="line">                    &#125;</span><br><span class="line">            <span class="type">bool</span> dark=<span class="literal">false</span>;<span class="comment">//判断最后一行是否有暗的地方，最后一行无法操作，如果有，则表示无法使所有灯变亮</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">                <span class="keyword">if</span>(g[<span class="number">4</span>][i] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                    dark=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(!dark) res=<span class="built_in">min</span>(res,step);</span><br><span class="line">            <span class="built_in">memcpy</span>(g,backup,<span class="keyword">sizeof</span> g);<span class="comment">//恢复原样</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(res&gt;<span class="number">6</span>) res=<span class="number">-1</span>;<span class="comment">//操作步骤大于6，输出-1</span></span><br><span class="line">        cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1208-翻硬币"><a href="#1208-翻硬币" class="headerlink" title="1208. 翻硬币"></a>1208. 翻硬币</h2><h3 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a>题目</h3><p>小明正在玩一个“翻硬币”的游戏。</p>
<p>桌上放着排成一排的若干硬币。我们用 * 表示正面，用 o 表示反面（是小写字母，不是零）。</p>
<p>比如，可能情形是：<code>**oo***oooo</code></p>
<p>如果同时翻转左边的两个硬币，则变为：<code>oooo***oooo</code></p>
<p>现在小明的问题是：如果已知了初始状态和要达到的目标状态，每次只能同时翻转相邻的两个硬币,那么对特定的局面，最少要翻动多少次呢？</p>
<p>我们约定：把翻动相邻的两个硬币叫做一步操作。</p>
<h4 id="输入格式-5"><a href="#输入格式-5" class="headerlink" title="输入格式"></a>输入格式</h4><p>两行等长的字符串，分别表示初始状态和要达到的目标状态。</p>
<h4 id="输出格式-5"><a href="#输出格式-5" class="headerlink" title="输出格式"></a>输出格式</h4><p>一个整数，表示最小操作步数</p>
<h4 id="数据范围-5"><a href="#数据范围-5" class="headerlink" title="数据范围"></a>数据范围</h4><p>输入字符串的长度均不超过100。<br> 数据保证答案一定有解。</p>
<h4 id="输入样例1：-1"><a href="#输入样例1：-1" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">**********</span><br><span class="line">o****o****</span><br></pre></td></tr></table></figure>

<h4 id="输出样例1：-1"><a href="#输出样例1：-1" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure>

<h4 id="输入样例2：-1"><a href="#输入样例2：-1" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*o**o***o***</span><br><span class="line">*o***o**o***</span><br></pre></td></tr></table></figure>

<h4 id="输出样例2：-1"><a href="#输出样例2：-1" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure>

<h3 id="题意-2"><a href="#题意-2" class="headerlink" title="题意"></a>题意</h3><p>翻第一行硬币，一次翻两个，直到第一行和第二行完全相等时，输出翻了几次</p>
<h3 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h3><p>找出两行代码不同的地方，从不同的地方开始翻硬币，直到结束</p>
<h3 id="相关代码-1"><a href="#相关代码-1" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s1,s2;</span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; s1 &gt;&gt; s2;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s1.<span class="built_in">size</span>();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s1[i] != s2[i])&#123;		<span class="comment">//找到s1和s2不同的地方</span></span><br><span class="line">            s1[i]=s2[i]; 		<span class="comment">//先翻第一个</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(s1[i+<span class="number">1</span>]==<span class="string">&#x27;*&#x27;</span>) s1[i+<span class="number">1</span>]=<span class="string">&#x27;o&#x27;</span>;<span class="comment">//再翻第二个</span></span><br><span class="line">            <span class="keyword">else</span> s1[i+<span class="number">1</span>]=<span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">            </span><br><span class="line">            cnt ++;<span class="comment">//翻完次数加一</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; cnt;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="116-飞行员兄弟"><a href="#116-飞行员兄弟" class="headerlink" title="116. 飞行员兄弟"></a>116. 飞行员兄弟</h2><h3 id="题目-6"><a href="#题目-6" class="headerlink" title="题目"></a>题目</h3><p>“飞行员兄弟”这个游戏，需要玩家顺利的打开一个拥有 16</p>
<p> 个把手的冰箱。</p>
<p>已知每个把手可以处于以下两种状态之一：打开或关闭。 </p>
<p>只有当所有把手都打开时，冰箱才会打开。</p>
<p>把手可以表示为一个 4×4</p>
<p> 的矩阵，您可以改变任何一个位置 [<em>i</em>,<em>j</em>]</p>
<p> 上把手的状态。</p>
<p>但是，这也会使得第 <em>i</em></p>
<p> 行和第 <em>j</em></p>
<p> 列上的所有把手的状态也随着改变。</p>
<p>请你求出打开冰箱所需的切换把手的次数最小值是多少。</p>
<h4 id="输入格式-6"><a href="#输入格式-6" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入一共包含四行，每行包含四个把手的初始状态。</p>
<p>符号 <code>+</code> 表示把手处于闭合状态，而符号 <code>-</code> 表示把手处于打开状态。</p>
<p>至少一个手柄的初始状态是关闭的。</p>
<h4 id="输出格式-6"><a href="#输出格式-6" class="headerlink" title="输出格式"></a>输出格式</h4><p>第一行输出一个整数 <em>N</em></p>
<p>，表示所需的最小切换把手次数。</p>
<p>接下来 <em>N</em></p>
<p> 行描述切换顺序，每行输出两个整数，代表被切换状态的把手的行号和列号，数字之间用空格隔开。</p>
<p><strong>注意</strong>：如果存在多种打开冰箱的方式，则按照优先级整体从上到下，同行从左到右打开。</p>
<h4 id="数据范围-6"><a href="#数据范围-6" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>i</em>,<em>j</em>≤4</p>
<h4 id="输入样例：-4"><a href="#输入样例：-4" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-+--</span><br><span class="line">----</span><br><span class="line">----</span><br><span class="line">-+--</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-3"><a href="#输出样例：-3" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">1 1</span><br><span class="line">1 3</span><br><span class="line">1 4</span><br><span class="line">4 1</span><br><span class="line">4 3</span><br><span class="line">4 4</span><br></pre></td></tr></table></figure>

<h3 id="题意-3"><a href="#题意-3" class="headerlink" title="题意"></a>题意</h3><p>输入4x4的<code>+</code>和<code>-</code>的字符数组，操作一定的次数使所有的字符都变成<code>-</code>,每次操作会使对应的行和列都发生改变，输出操作的次数和从小到大每次操作的位置</p>
<h3 id="解题思路-2"><a href="#解题思路-2" class="headerlink" title="解题思路"></a>解题思路</h3><p>枚举所有方案，每一个操作都可以对应一个十六位的二进制数，1表示操作，0表示不操作</p>
<h3 id="相关代码-2"><a href="#相关代码-2" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> g[N][N],backup[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span><span class="comment">//表示每次需要移动的位数（最少0，最多15）（将一个二维的数组看成一个16位的二进制数）</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x*<span class="number">4</span>+y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">turn_one</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span><span class="comment">//改变一次</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(g[x][y] == <span class="string">&#x27;+&#x27;</span>) g[x][y] = <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span> g[x][y] = <span class="string">&#x27;+&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">turn_all</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span><span class="comment">//每次操作后改变行和列的符号</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">turn_one</span>(x,i); <span class="comment">//改变行 </span></span><br><span class="line">        <span class="built_in">turn_one</span>(i,y);<span class="comment">//改变列</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">turn_one</span>(x,y);<span class="comment">//重合的部分上面改变行列时改变了两次，只需要改变一次</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++) cin &gt;&gt; g[i];<span class="comment">//输入字符，g[i]表示的是输入每一行的字符</span></span><br><span class="line">    </span><br><span class="line">    vector&lt;PII&gt; res;<span class="comment">//存最小的方案数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> op=<span class="number">0</span>;op&lt;<span class="number">1</span>&lt;&lt;<span class="number">16</span>;op++)<span class="comment">//1左移16表示2的16次方（枚举所有操作）</span></span><br><span class="line">    &#123;</span><br><span class="line">        vector&lt;PII&gt; temp;<span class="comment">//存每次操作的方案</span></span><br><span class="line">        <span class="built_in">memcpy</span>(backup,g,<span class="keyword">sizeof</span> g);<span class="comment">//备份</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)<span class="comment">//对每次方案进行操作</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)</span><br><span class="line">                <span class="keyword">if</span>(op &gt;&gt; <span class="built_in">get</span>(i,j) &amp; <span class="number">1</span>)<span class="comment">//1表示操作，0表示不操作，找到每个方案要操作的位置（利用位运算来判断每次移动后是否要操作）</span></span><br><span class="line">                &#123;</span><br><span class="line">                    temp.<span class="built_in">push_back</span>(&#123;i,j&#125;);<span class="comment">//将每次操作存到temp中</span></span><br><span class="line">                    <span class="built_in">turn_all</span>(i,j);</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">        <span class="type">bool</span> has_closed = <span class="literal">false</span>;<span class="comment">//判断是否有闭合状态的把手</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)</span><br><span class="line">                <span class="keyword">if</span>(g[i][j] == <span class="string">&#x27;+&#x27;</span>)</span><br><span class="line">                    has_closed=<span class="literal">true</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(has_closed == <span class="literal">false</span>)<span class="comment">//符合条件则判断找出存下最小的操作方案次数</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(res.<span class="built_in">empty</span>() || res.<span class="built_in">size</span>()&gt;temp.<span class="built_in">size</span>()) res=temp;<span class="comment">//刚开始操作时res为空，也要存下temp</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">memcpy</span>(g,backup,<span class="keyword">sizeof</span> g);<span class="comment">//还原，进行下一次操作</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; res.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> op : res) cout &lt;&lt; op.x+<span class="number">1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; op.y+<span class="number">1</span> &lt;&lt; endl;<span class="comment">//原题下标是从1开始，所以要加一</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
        <category>习题</category>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>算法</tag>
        <tag>Acwing</tag>
        <tag>递归与递推</tag>
      </tags>
  </entry>
  <entry>
    <title>acwing C++语法基础课字符串章节习题</title>
    <url>/2024/03/04/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    <content><![CDATA[<h2 id="760-字符串长度"><a href="#760-字符串长度" class="headerlink" title="760. 字符串长度"></a>760. 字符串长度</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>给定一行长度不超过 100</p>
<p> 的<strong>非空</strong>字符串，请你求出它的具体长度。<span id="more"></span></p>
<h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入一行，表示一个字符串。注意字符串中可能包含空格。</p>
<h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，表示它的长度。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤字符串长度≤100</p>
<p> 字符串末尾无回车</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">I love Beijing.</span><br></pre></td></tr></table></figure>

<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">15</span><br></pre></td></tr></table></figure>

<h3 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    <span class="built_in">getline</span>(cin,s);</span><br><span class="line">    cout &lt;&lt; s.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="761-字符串中的数字个数"><a href="#761-字符串中的数字个数" class="headerlink" title="761. 字符串中的数字个数"></a>761. 字符串中的数字个数</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><p>输入一行字符，长度不超过 100</p>
<p>，请你统计一下其中的数字字符的个数。</p>
<h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入一行字符。注意其中可能包含空格。</p>
<h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，表示字数字字符的个数。</p>
<h4 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">I am 18 years old this year.</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>

<h3 id="答案-1"><a href="#答案-1" class="headerlink" title="答案"></a>答案</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">getline</span>(cin,s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">char</span> c : s) <span class="keyword">if</span>(c&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; c&lt;=<span class="string">&#x27;9&#x27;</span>) cnt++;</span><br><span class="line">    cout &lt;&lt; cnt;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="763-循环相克令"><a href="#763-循环相克令" class="headerlink" title="763. 循环相克令"></a>763. 循环相克令</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3><p>循环相克令是一个两人玩的小游戏。</p>
<p>令词为“猎人、狗熊、枪”，两人同时说出令词，同时做出一个动作——猎人的动作是双手叉腰;狗熊的动作是双手搭在胸前;枪的动作是双手举起呈手枪状。</p>
<p>双方以此动作判定输赢，猎人赢枪、枪赢狗熊、狗熊赢猎人，动作相同则视为平局。</p>
<p>现在给定你一系列的动作组合，请你判断游戏结果。</p>
<h4 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含整数 <em>T</em></p>
<p>，表示共有 <em>T</em></p>
<p> 组测试数据。</p>
<p>接下来 <em>T</em></p>
<p> 行，每行包含两个字符串，表示一局游戏中两人做出的动作，字符串为 <code>Hunter</code>, <code>Bear</code>, <code>Gun</code> 中的一个，这三个单词分别代表猎人，狗熊和枪。</p>
<h4 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h4><p>如果第一个玩家赢了，则输出 <code>Player1</code>。</p>
<p>如果第二个玩家赢了，则输出 <code>Player2</code>。</p>
<p>如果平局，则输出 <code>Tie</code>。</p>
<h4 id="数据范围-1"><a href="#数据范围-1" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>N</em>≤100</p>
<h3 id="答案-2"><a href="#答案-2" class="headerlink" title="答案"></a>答案</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s1,s2,h,b,g;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    h=<span class="string">&quot;Hunter&quot;</span>;</span><br><span class="line">    b=<span class="string">&quot;Bear&quot;</span>;</span><br><span class="line">    g=<span class="string">&quot;Gun&quot;</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        cin &gt;&gt; s1 ;</span><br><span class="line">        cin &gt;&gt; s2 ;</span><br><span class="line">        <span class="keyword">if</span>(s1==h &amp;&amp; s2==b) cout &lt;&lt; <span class="string">&quot;Player2&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s1==b &amp;&amp; s2==h) cout &lt;&lt; <span class="string">&quot;Player1&quot;</span> &lt;&lt; endl;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(s1==h &amp;&amp; s2==g) cout &lt;&lt; <span class="string">&quot;Player1&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s1==g &amp;&amp; s2==h) cout &lt;&lt; <span class="string">&quot;Player2&quot;</span> &lt;&lt; endl;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(s1==b &amp;&amp; s2==g) cout &lt;&lt; <span class="string">&quot;Player2&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s1==g &amp;&amp; s2==b) cout &lt;&lt; <span class="string">&quot;Player1&quot;</span> &lt;&lt; endl;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(s1==s2) cout&lt;&lt; <span class="string">&quot;Tie&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>换一种思路</li>
</ul>
<p><img src="C:\Users\鑫霜\AppData\Roaming\Typora\typora-user-images\image-20220113185851664.png" alt="image-20220113185851664"></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        string s1,s2;</span><br><span class="line">        cin &gt;&gt; s1 &gt;&gt; s2;</span><br><span class="line">        <span class="keyword">if</span>(s1==<span class="string">&quot;Hunter&quot;</span>)  x=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s1==<span class="string">&quot;Bear&quot;</span>) x=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s1==<span class="string">&quot;Gun&quot;</span>) x=<span class="number">2</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(s2==<span class="string">&quot;Hunter&quot;</span>)  y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s2==<span class="string">&quot;Bear&quot;</span>) y=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s2==<span class="string">&quot;Gun&quot;</span>) y=<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(s1==s2) cout &lt;&lt; <span class="string">&quot;Tie&quot;</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x==(y+<span class="number">1</span>)%<span class="number">3</span>) cout &lt;&lt; <span class="string">&quot;Player1&quot;</span>;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;Player2&quot;</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="765-字符串加空格"><a href="#765-字符串加空格" class="headerlink" title="765.字符串加空格"></a>765.字符串加空格</h2><h3 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h3><p>给定一个字符串，在字符串的每个字符之间都加一个空格。</p>
<p>输出修改后的新字符串。</p>
<h4 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含一个字符串。注意字符串中可能包含空格。</p>
<h4 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出增加空格后的字符串。</p>
<h4 id="数据范围-2"><a href="#数据范围-2" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤字符串长度≤100</p>
<h4 id="输入样例：-2"><a href="#输入样例：-2" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">test case</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-2"><a href="#输出样例：-2" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">t e s t   c a s e</span><br></pre></td></tr></table></figure>

<h3 id="答案-3"><a href="#答案-3" class="headerlink" title="答案"></a>答案</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    <span class="built_in">getline</span>(cin,s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">char</span> c : s)</span><br><span class="line">        cout &lt;&lt; c &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="769-替换字符"><a href="#769-替换字符" class="headerlink" title="769. 替换字符"></a>769. 替换字符</h2><h3 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a>题目</h3><p>给定一个由大小写字母构成的字符串。</p>
<p>把该字符串中特定的字符全部用字符 <code>#</code> 替换。</p>
<p>请你输出替换后的字符串。</p>
<h4 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入共两行。</p>
<p>第一行包含一个长度不超过 30</p>
<p> 的字符串。</p>
<p>第二行包含一个字符，表示要替换掉的特定字符。</p>
<h4 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出共一行，为替换后的字符串。</p>
<h4 id="输入样例：-3"><a href="#输入样例：-3" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hello</span><br><span class="line">l</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-3"><a href="#输出样例：-3" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">he##o</span><br></pre></td></tr></table></figure>

<h3 id="答案-4"><a href="#答案-4" class="headerlink" title="答案"></a>答案</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    <span class="type">char</span> a;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    cin &gt;&gt; a;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">char</span> &amp;c : s)&#123;</span><br><span class="line">        <span class="keyword">if</span>(c==a) cout &lt;&lt; <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; c;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="772-只出现一次的字符"><a href="#772-只出现一次的字符" class="headerlink" title="772. 只出现一次的字符"></a>772. 只出现一次的字符</h2><h3 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a>题目</h3><p>给你一个只包含小写字母的字符串。</p>
<p>请你判断是否存在只在字符串中出现过一次的字符。</p>
<p>如果存在，则输出满足条件的字符中位置最靠前的那个。</p>
<p>如果没有，输出 <code>no</code>。</p>
<h4 id="输入格式-5"><a href="#输入格式-5" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含一个由小写字母构成的字符串。</p>
<p>数据保证字符串的长度不超过 100000</p>
<p>。</p>
<h4 id="输出格式-5"><a href="#输出格式-5" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出满足条件的第一个字符。</p>
<p>如果没有，则输出 <code>no</code>。</p>
<h4 id="输入样例：-4"><a href="#输入样例：-4" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">abceabcd</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-4"><a href="#输出样例：-4" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">e</span><br></pre></td></tr></table></figure>

<h3 id="答案-5"><a href="#答案-5" class="headerlink" title="答案"></a>答案</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="type">int</span> c=<span class="number">0</span>,t;</span><br><span class="line">    <span class="type">int</span> n=s.<span class="built_in">size</span>();</span><br><span class="line">    <span class="type">int</span> a[n]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==s[j]) a[i]++;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&gt;<span class="number">1</span>) <span class="keyword">break</span>;<span class="comment">//避免超时</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==<span class="number">1</span>)&#123;</span><br><span class="line">            c=<span class="number">1</span>;</span><br><span class="line">            t=i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(c==<span class="number">1</span>) cout &lt;&lt; s[t] &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;no&quot;</span> &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="773-字符串插入"><a href="#773-字符串插入" class="headerlink" title="773.字符串插入"></a>773.字符串插入</h2><h3 id="题目-6"><a href="#题目-6" class="headerlink" title="题目"></a>题目</h3><p>有两个不包含空白字符的字符串 <em>s<strong>t</strong>r</em></p>
<p> 和 <em>s<strong>u</strong>b<strong>s</strong>tr</em>，<em>s<strong>t</strong>r</em> 的字符个数不超过 10，<em>s<strong>u</strong>b<strong>s</strong>t**r</em> 的字符个数为 3</p>
<p>。（字符个数不包括字符串结尾处的 <code>\0</code>。）</p>
<p>将 <em>s</em>u<strong>b</strong>s<strong>t</strong>r</p>
<p> 插入到 <em>s<strong>t</strong>r</em></p>
<p> 中 ASCII 码最大的那个字符后面，若有多个最大则只考虑第一个。</p>
<h4 id="输入格式-6"><a href="#输入格式-6" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入包括若干行，每一行为一组测试数据，格式为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">str substr</span><br></pre></td></tr></table></figure>

<h4 id="输出格式-6"><a href="#输出格式-6" class="headerlink" title="输出格式"></a>输出格式</h4><p>对于每一组测试数据，输出插入之后的字符串。</p>
<h4 id="输入样例：-5"><a href="#输入样例：-5" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">abcab eee</span><br><span class="line">12343 555</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-5"><a href="#输出样例：-5" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">abceeeab</span><br><span class="line">12345553</span><br></pre></td></tr></table></figure>

<h3 id="答案-6"><a href="#答案-6" class="headerlink" title="答案"></a>答案</h3><h4 id="答案1"><a href="#答案1" class="headerlink" title="答案1"></a>答案1</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s1,s2;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; s1 &gt;&gt; s2)&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s1.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">             <span class="keyword">if</span>(s1[t]&lt;s1[i]) t=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s1.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            cout &lt;&lt; s1[i];</span><br><span class="line">            <span class="keyword">if</span>(i==t) cout &lt;&lt; s2;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="答案2"><a href="#答案2" class="headerlink" title="答案2"></a>答案2</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s1,s2;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; s1 &gt;&gt; s2)&#123;</span><br><span class="line">        <span class="type">int</span> p=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;s1.<span class="built_in">size</span>();i++)</span><br><span class="line">            <span class="keyword">if</span>(s1[i]&gt;s1[p]) p=i;</span><br><span class="line">        cout &lt;&lt; s1.<span class="built_in">substr</span>(<span class="number">0</span>,p+<span class="number">1</span>)+s2+s1.<span class="built_in">substr</span>(p+<span class="number">1</span>) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="762-字符串匹配"><a href="#762-字符串匹配" class="headerlink" title="762. 字符串匹配"></a>762. 字符串匹配</h2><h3 id="题目-7"><a href="#题目-7" class="headerlink" title="题目"></a>题目</h3><p>给定两个长度相同的字符串 <em>a</em></p>
<p> 和字符串 <em>b</em></p>
<p>如果在某个位置 <em>i</em></p>
<p> 上，满足字符串 <em>a</em> 上的字符 <em>a</em>[<em>i</em>] 和字符串 <em>b</em> 上的字符 <em>b</em>[<em>i</em>]</p>
<p> 相同，那么这个位置上的字符就是匹配的。</p>
<p>如果两个字符串的匹配位置的数量与字符串总长度的比值大于或等于 <em>k</em></p>
<p>，则称两个字符串是匹配的。</p>
<p>现在请你判断给定的两个字符串是否匹配。</p>
<h4 id="输入格式-7"><a href="#输入格式-7" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含一个浮点数 <em>k</em></p>
<p>，第二行包含字符串 <em>a</em>，第三行包含字符串 <em>b</em></p>
<p>。</p>
<p>输入的字符串中不包含空格。</p>
<h4 id="输出格式-7"><a href="#输出格式-7" class="headerlink" title="输出格式"></a>输出格式</h4><p>如果两个字符串匹配，则输出 <code>yes</code>。</p>
<p>否则，输出 <code>no</code>。</p>
<h4 id="数据范围-3"><a href="#数据范围-3" class="headerlink" title="数据范围"></a>数据范围</h4><p>0≤<em>k</em>≤1</p>
<p>,<br> 字符串的长度不超过 100</p>
<p>。</p>
<h4 id="输入样例：-6"><a href="#输入样例：-6" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0.4</span><br><span class="line">abcde</span><br><span class="line">xbacd</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-6"><a href="#输出样例：-6" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">no</span><br></pre></td></tr></table></figure>

<h3 id="答案-7"><a href="#答案-7" class="headerlink" title="答案"></a>答案</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> k;</span><br><span class="line">    <span class="type">double</span> cnt=<span class="number">0</span>;</span><br><span class="line">    string s1,s2;</span><br><span class="line">    cin &gt;&gt; k;</span><br><span class="line">    cin &gt;&gt; s1 &gt;&gt; s2;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s1.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s1[i]==s2[i]) cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cnt/s1.<span class="built_in">size</span>()&gt;=k) cout &lt;&lt; <span class="string">&quot;yes&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;no&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="768-忽略大小写比较字符串大小"><a href="#768-忽略大小写比较字符串大小" class="headerlink" title="768. 忽略大小写比较字符串大小"></a>768. 忽略大小写比较字符串大小</h2><h3 id="题目-8"><a href="#题目-8" class="headerlink" title="题目"></a>题目</h3><p>一般我们用 <em>s<strong>t</strong>r<strong>c</strong>mp</em></p>
<p> 可比较两个字符串的大小，比较方法为对两个字符串从前往后逐个字符相比较（按 ASCII 码值大小比较），直到出现不同的字符或遇到 <code>\0</code> 为止。</p>
<p>如果全部字符都相同，则认为相同；如果出现不相同的字符，则以第一个不相同的字符的比较结果为准。</p>
<p>但在有些时候，我们比较字符串的大小时，希望忽略字母的大小，例如 <code>Hello</code> 和 <code>hello</code> 在忽略字母大小写时是相等的。</p>
<p>请写一个程序，实现对两个字符串进行忽略字母大小写的大小比较。</p>
<h4 id="输入格式-8"><a href="#输入格式-8" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入为两行，每行一个字符串，共两个字符串。注意字符串中可能包含空格。</p>
<p>数据保证每个字符串的长度都不超过 80</p>
<p>。</p>
<h4 id="输出格式-8"><a href="#输出格式-8" class="headerlink" title="输出格式"></a>输出格式</h4><p>如果第一个字符串比第二个字符串小，输出一个字符 <code>&lt;</code>。</p>
<p>如果第一个字符串比第二个字符串大，输出一个字符 <code>&gt;</code>。</p>
<p>如果两个字符串相等，输出一个字符 <code>=</code>。</p>
<h4 id="输入样例：-7"><a href="#输入样例：-7" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello</span><br><span class="line">hello</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-7"><a href="#输出样例：-7" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">=</span><br></pre></td></tr></table></figure>

<h3 id="答案-8"><a href="#答案-8" class="headerlink" title="答案"></a>答案</h3><h4 id="答案1-1"><a href="#答案1-1" class="headerlink" title="答案1"></a>答案1</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s1,s2;</span><br><span class="line">    <span class="built_in">getline</span>(cin,s1);</span><br><span class="line">    <span class="built_in">getline</span>(cin,s2);</span><br><span class="line">    <span class="type">int</span> t=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">80</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s1[i]==s2[i])&#123;</span><br><span class="line">            t=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(((s1[i]&gt;=<span class="string">&#x27;A&#x27;</span> &amp;&amp; s1[i]&lt;=<span class="string">&#x27;Z&#x27;</span>)||(s1[i]&gt;=<span class="string">&#x27;a&#x27;</span> &amp;&amp; s2[i]&lt;=<span class="string">&#x27;z&#x27;</span>)) &amp;&amp; ((s2[i]&gt;=<span class="string">&#x27;A&#x27;</span> &amp;&amp; s2[i]&lt;=<span class="string">&#x27;z&#x27;</span>)||(s1[i]&gt;=<span class="string">&#x27;a&#x27;</span> &amp;&amp; s2[i]&lt;=<span class="string">&#x27;z&#x27;</span>)))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(s2[i]+<span class="number">32</span>==s1[i] || s2[i]<span class="number">-32</span>==s1[i]) t=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(s1[i]<span class="number">-32</span>&gt;s2[i] || s1[i]+<span class="number">32</span>&gt;s2[i]) t=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(s1[i]<span class="number">-32</span>&lt;s2[i] || s1[i]+<span class="number">32</span>&lt;s2[i]) t=<span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(s1[i]==s2[i]) t=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(s1[i]&gt;s2[i]) t=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(s1[i]&lt;s2[i]) t=<span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(t==<span class="number">0</span>) cout &lt;&lt; <span class="string">&#x27;=&#x27;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">if</span>(t==<span class="number">-1</span>) cout &lt;&lt; <span class="string">&#x27;&lt;&#x27;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">if</span>(t==<span class="number">1</span>) cout &lt;&lt; <span class="string">&#x27;&gt;&#x27;</span> &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="答案2-1"><a href="#答案2-1" class="headerlink" title="答案2"></a>答案2</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> s1[<span class="number">100</span>],s2[<span class="number">100</span>];</span><br><span class="line">    <span class="built_in">fgets</span>(s1,<span class="number">100</span>,stdin);</span><br><span class="line">    <span class="built_in">fgets</span>(s2,<span class="number">100</span>,stdin);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(s1[<span class="built_in">strlen</span>(s1)<span class="number">-1</span>]==<span class="string">&#x27;\n&#x27;</span>) s1[<span class="built_in">strlen</span>(s1)<span class="number">-1</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(s2[<span class="built_in">strlen</span>(s2)<span class="number">-1</span>]==<span class="string">&#x27;\n&#x27;</span>) s2[<span class="built_in">strlen</span>(s2)<span class="number">-1</span>]=<span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;s1[i];i++)</span><br><span class="line">        <span class="keyword">if</span>(s1[i]&gt;=<span class="string">&#x27;A&#x27;</span> &amp;&amp; s1[i]&lt;=<span class="string">&#x27;Z&#x27;</span>) </span><br><span class="line">            s1[i]+=<span class="number">32</span>;</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;s2[i];i++)</span><br><span class="line">        <span class="keyword">if</span>(s2[i]&gt;=<span class="string">&#x27;A&#x27;</span> &amp;&amp; s2[i]&lt;=<span class="string">&#x27;Z&#x27;</span>) </span><br><span class="line">            s2[i]+=<span class="number">32</span>;</span><br><span class="line">            </span><br><span class="line">    <span class="type">int</span> t = <span class="built_in">strcmp</span>(s1,s2);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(t==<span class="number">0</span>) cout &lt;&lt; <span class="string">&#x27;=&#x27;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">if</span>(t&lt;<span class="number">0</span>) cout &lt;&lt; <span class="string">&#x27;&lt;&#x27;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">if</span>(t&gt;<span class="number">0</span>) cout &lt;&lt; <span class="string">&#x27;&gt;&#x27;</span> &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="766-去掉多余的空格"><a href="#766-去掉多余的空格" class="headerlink" title="766. 去掉多余的空格"></a>766. 去掉多余的空格</h2><h3 id="题目-9"><a href="#题目-9" class="headerlink" title="题目"></a>题目</h3><p>输入一个字符串，字符串中可能包含多个连续的空格，请将多余的空格去掉，只留下一个空格。</p>
<h4 id="输入格式-9"><a href="#输入格式-9" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含一个字符串。</p>
<h4 id="输出格式-9"><a href="#输出格式-9" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出去掉多余空格后的字符串，占一行。</p>
<h4 id="数据范围-4"><a href="#数据范围-4" class="headerlink" title="数据范围"></a>数据范围</h4><p>输入字符串的长度不超过 200</p>
<p>。<br> 保证输入字符串的开头和结尾没有空格。</p>
<h4 id="输入样例：-8"><a href="#输入样例：-8" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello      world.This is    c language.</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-8"><a href="#输出样例：-8" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello world.This is c language.</span><br></pre></td></tr></table></figure>

<h3 id="答案-9"><a href="#答案-9" class="headerlink" title="答案"></a>答案</h3><h4 id="答案1-2"><a href="#答案1-2" class="headerlink" title="答案1"></a>答案1</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    <span class="type">int</span> t=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">getline</span>(cin ,s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i] != <span class="string">&#x27; &#x27;</span>) cout &lt;&lt; s[i];</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i;s[i]==<span class="string">&#x27; &#x27;</span>;j++)</span><br><span class="line">                i=j;</span><br><span class="line">            cout &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">            i--;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="答案2-2"><a href="#答案2-2" class="headerlink" title="答案2"></a>答案2</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; s) cout &lt;&lt; s &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="767-信息加密"><a href="#767-信息加密" class="headerlink" title="767. 信息加密"></a>767. 信息加密</h2><h3 id="题目-10"><a href="#题目-10" class="headerlink" title="题目"></a>题目</h3><p>在传输信息的过程中，为了保证信息的安全，我们需要对原信息进行加密处理，形成加密信息，从而使得信息内容不会被监听者窃取。</p>
<p>现在给定一个字符串，对其进行加密处理。</p>
<p>加密的规则如下：</p>
<ol>
<li>字符串中的小写字母，<em>a</em></li>
</ol>
<p> 加密为 <em>b</em>，<em>b</em> 加密为 <em>c</em>，…，<em>y</em> 加密为 <em>z</em>，<em>z</em> 加密为 <em>a</em></p>
<p>。</p>
<p>字符串中的大写字母，<em>A</em></p>
<p> 加密为 <em>B</em>，<em>B</em> 加密为 <em>C</em>，…，<em>Y</em> 加密为 <em>Z</em>，<em>Z</em> 加密为 <em>A</em></p>
<ol>
<li>。</li>
<li>字符串中的其他字符，不作处理。</li>
</ol>
<p>请你输出加密后的字符串。</p>
<h4 id="输入格式-10"><a href="#输入格式-10" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含一个字符串。注意字符串中可能包含空格。</p>
<h4 id="输出格式-10"><a href="#输出格式-10" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出加密后的字符串。</p>
<h4 id="数据范围-5"><a href="#数据范围-5" class="headerlink" title="数据范围"></a>数据范围</h4><p>输入字符串的长度不超过 100</p>
<p>。</p>
<h4 id="输入样例：-9"><a href="#输入样例：-9" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello! How are you!</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-9"><a href="#输出样例：-9" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Ifmmp! Ipx bsf zpv!</span><br></pre></td></tr></table></figure>

<h3 id="答案-10"><a href="#答案-10" class="headerlink" title="答案"></a>答案</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    <span class="built_in">getline</span>(cin,s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">char</span> c : s)&#123;</span><br><span class="line">        <span class="keyword">if</span>(c&gt;=<span class="string">&#x27;a&#x27;</span> &amp;&amp; c&lt;<span class="string">&#x27;z&#x27;</span>)&#123;</span><br><span class="line">            c++;</span><br><span class="line">            cout &lt;&lt; c;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">&#x27;z&#x27;</span>) cout &lt;&lt; <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(c&gt;=<span class="string">&#x27;A&#x27;</span> &amp;&amp; c&lt;<span class="string">&#x27;Z&#x27;</span>)&#123;</span><br><span class="line">            c++;</span><br><span class="line">            cout &lt;&lt; c;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">&#x27;Z&#x27;</span>) cout &lt;&lt; <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; c;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="764-输出字符串"><a href="#764-输出字符串" class="headerlink" title="764. 输出字符串"></a>764. 输出字符串</h2><h3 id="题目-11"><a href="#题目-11" class="headerlink" title="题目"></a>题目</h3><p>给定一个字符串 <em>a</em></p>
<p>，请你按照下面的要求输出字符串 <em>b</em></p>
<p>。</p>
<p>给定字符串 <em>a</em></p>
<p> 的第一个字符的 ASCII 值加第二个字符的 ASCII 值，得到 <em>b</em></p>
<p> 的第一个字符；</p>
<p>给定字符串 <em>a</em></p>
<p> 的第二个字符的 ASCII 值加第三个字符的 ASCII 值，得到 <em>b</em></p>
<p> 的第二个字符；</p>
<p>…</p>
<p>给定字符串 <em>a</em></p>
<p> 的倒数第二个字符的 ASCII 值加最后一个字符的 ASCII 值，得到 <em>b</em></p>
<p> 的倒数第二个字符；</p>
<p>给定字符串 <em>a</em></p>
<p> 的最后一个字符的 ASCII 值加第一个字符的 ASCII 值，得到 <em>b</em></p>
<p> 的最后一个字符。</p>
<h4 id="输入格式-11"><a href="#输入格式-11" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入共一行，包含字符串 <em>a</em></p>
<p>。注意字符串中可能包含空格。</p>
<p>数据保证字符串内的字符的 ASCII 值均不超过 63</p>
<p>。</p>
<h4 id="输出格式-11"><a href="#输出格式-11" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出共一行，包含字符串 <em>b</em></p>
<p>。</p>
<h4 id="数据范围-6"><a href="#数据范围-6" class="headerlink" title="数据范围"></a>数据范围</h4><p>2≤<em>a</em>的长度≤100</p>
<h4 id="输入样例：-10"><a href="#输入样例：-10" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 2 3</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-10"><a href="#输出样例：-10" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">QRRSd</span><br></pre></td></tr></table></figure>

<h3 id="答案-11"><a href="#答案-11" class="headerlink" title="答案"></a>答案</h3><h4 id="答案1-3"><a href="#答案1-3" class="headerlink" title="答案1"></a>答案1</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s,s1;</span><br><span class="line">    <span class="built_in">getline</span>(cin,s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;s.<span class="built_in">size</span>()<span class="number">-1</span>) cout &lt;&lt; <span class="built_in">char</span>(s[i]+s[i+<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="built_in">char</span>(s[i]+s[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="答案2-3"><a href="#答案2-3" class="headerlink" title="答案2"></a>答案2</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string a,b;</span><br><span class="line">    <span class="built_in">getline</span>(cin,a);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;a.<span class="built_in">size</span>();i++) b+=a[i]+a[(i+<span class="number">1</span>)%a.<span class="built_in">size</span>()];</span><br><span class="line">    cout &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="771-字符串中最长的连续出现的字符"><a href="#771-字符串中最长的连续出现的字符" class="headerlink" title="771. 字符串中最长的连续出现的字符"></a>771. 字符串中最长的连续出现的字符</h2><h3 id="题目-12"><a href="#题目-12" class="headerlink" title="题目"></a>题目</h3><p>求一个字符串中最长的连续出现的字符，输出该字符及其出现次数，字符串中无空白字符（空格、回车和 <em>t<strong>a</strong>b</em></p>
<p>），如果这样的字符不止一个，则输出第一个。</p>
<h4 id="输入格式-12"><a href="#输入格式-12" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行输入整数 <em>N</em></p>
<p>，表示测试数据的组数。</p>
<p>每组数据占一行，包含一个不含空白字符的字符串，字符串长度不超过 200</p>
<p>。</p>
<h4 id="输出格式-12"><a href="#输出格式-12" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，输出最长的连续出现的字符及其出现次数，中间用空格隔开。</p>
<h4 id="输入样例：-11"><a href="#输入样例：-11" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">aaaaabbbbbcccccccdddddddddd</span><br><span class="line">abcdefghigk</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-11"><a href="#输出样例：-11" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">d 10</span><br><span class="line">a 1</span><br></pre></td></tr></table></figure>

<h3 id="答案-12"><a href="#答案-12" class="headerlink" title="答案"></a>答案</h3><h4 id="答案1-4"><a href="#答案1-4" class="headerlink" title="答案1"></a>答案1</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    <span class="type">int</span> n,k,t;</span><br><span class="line">    <span class="type">char</span> b[<span class="number">200</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">200</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        t=<span class="number">0</span>;</span><br><span class="line">        b[<span class="number">0</span>]=s[<span class="number">0</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">200</span>;i++)&#123;</span><br><span class="line">            a[i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>,n=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(s[i]==s[i+<span class="number">1</span>])&#123;</span><br><span class="line">                a[n]++;</span><br><span class="line">                b[n]=s[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> n++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&gt;a[t]) t=i;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        cout &lt;&lt; b[t] &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; a[t] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="答案2-4"><a href="#答案2-4" class="headerlink" title="答案2"></a>答案2</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        string s;</span><br><span class="line">        <span class="type">char</span> c;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            <span class="type">int</span> j=i;</span><br><span class="line">     <span class="comment">//第一类双指针</span></span><br><span class="line">            <span class="keyword">while</span>(j&lt;s.<span class="built_in">size</span>() &amp;&amp; s[j]==s[i]) j++;</span><br><span class="line">                <span class="keyword">if</span>(j-i&gt;cnt) cnt=j-i,c=s[i];</span><br><span class="line">                i=j<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">     <span class="comment">//</span></span><br><span class="line">        cout &lt;&lt; c &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; cnt &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="774-最长单词"><a href="#774-最长单词" class="headerlink" title="774. 最长单词"></a>774. 最长单词</h2><h3 id="题目-13"><a href="#题目-13" class="headerlink" title="题目"></a>题目</h3><p>一个以 <code>.</code> 结尾的简单英文句子，单词之间用空格分隔，没有缩写形式和其它特殊形式，求句子中的最长单词。</p>
<h4 id="输入格式-13"><a href="#输入格式-13" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入这个简单英文句子，长度不超过 500</p>
<p>。</p>
<h4 id="输出格式-13"><a href="#输出格式-13" class="headerlink" title="输出格式"></a>输出格式</h4><p>该句子中最长的单词。如果多于一个，则输出第一个。</p>
<h4 id="输入样例：-12"><a href="#输入样例：-12" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">I am a student of Peking University.</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-12"><a href="#输出样例：-12" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">University</span><br></pre></td></tr></table></figure>

<h3 id="答案-13"><a href="#答案-13" class="headerlink" title="答案"></a>答案</h3><h4 id="答案1-5"><a href="#答案1-5" class="headerlink" title="答案1"></a>答案1</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">500</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> b[<span class="number">500</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s,s1;</span><br><span class="line">    <span class="built_in">getline</span>(cin,s);</span><br><span class="line">    <span class="type">int</span> t=<span class="number">1</span>,m,n=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>,k=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="string">&#x27;.&#x27;</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span>(s[i] != <span class="string">&#x27; &#x27;</span>)&#123;</span><br><span class="line">            a[k]++;</span><br><span class="line">            n++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            k++;</span><br><span class="line">            n=<span class="number">0</span>;</span><br><span class="line">            b[k]=i;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;m=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">500</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[m]&lt;a[i]) m=i;</span><br><span class="line">    &#125;<span class="keyword">if</span>(m==<span class="number">0</span>) b[m]--;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=b[m]+<span class="number">1</span>;i&lt;=b[m]+a[m];i++)&#123;</span><br><span class="line">        cout &lt;&lt; s[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="答案2-5"><a href="#答案2-5" class="headerlink" title="答案2"></a>答案2</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s,s1;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; s)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s.<span class="built_in">back</span>()==<span class="string">&#x27;.&#x27;</span>) s.<span class="built_in">pop_back</span>();</span><br><span class="line">        <span class="keyword">if</span>(s.<span class="built_in">size</span>()&gt;s1.<span class="built_in">size</span>()) s1=s;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; s1 &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="775-倒排单词"><a href="#775-倒排单词" class="headerlink" title="775. 倒排单词"></a>775. 倒排单词</h2><h3 id="题目-14"><a href="#题目-14" class="headerlink" title="题目"></a>题目</h3><p>编写程序，读入一行英文(只包含字母和空格，单词间以单个空格分隔)，将所有单词的顺序倒排并输出，依然以单个空格分隔。</p>
<h4 id="输入格式-14"><a href="#输入格式-14" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入为一个字符串（字符串长度至多为 100</p>
<p>）。</p>
<h4 id="输出格式-14"><a href="#输出格式-14" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出为按要求排序后的字符串。</p>
<h4 id="输入样例：-13"><a href="#输入样例：-13" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">I am a student</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-13"><a href="#输出样例：-13" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">student a am I</span><br></pre></td></tr></table></figure>

<h3 id="答案-14"><a href="#答案-14" class="headerlink" title="答案"></a>答案</h3><h4 id="答案1-6"><a href="#答案1-6" class="headerlink" title="答案1"></a>答案1</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>,m;</span><br><span class="line">    <span class="type">char</span> s1[<span class="number">100</span>][<span class="number">100</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">getline</span>(cin,s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cnt++;</span><br><span class="line">            m=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            s1[cnt][m]=s[i];</span><br><span class="line">            m++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=cnt;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;s1[i][j]!=<span class="string">&#x27;\0&#x27;</span>;j++)&#123;</span><br><span class="line">            cout &lt;&lt; s1[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="答案2-6"><a href="#答案2-6" class="headerlink" title="答案2"></a>答案2</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string str[<span class="number">100</span>];</span><br><span class="line">    <span class="type">int</span> n=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; str[n]) n++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) cout &lt;&lt; str[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="770-单词替换"><a href="#770-单词替换" class="headerlink" title="*770. 单词替换"></a>*770. 单词替换</h2><h3 id="题目-15"><a href="#题目-15" class="headerlink" title="题目"></a>题目</h3><p>输入一个字符串，以回车结束（字符串长度不超过 100</p>
<p>）。</p>
<p>该字符串由若干个单词组成，单词之间用一个空格隔开，所有单词区分大小写。</p>
<p>现需要将其中的某个单词替换成另一个单词，并输出替换之后的字符串。</p>
<h4 id="输入格式-15"><a href="#输入格式-15" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入共 3</p>
<p> 行。</p>
<p>第 1</p>
<p> 行是包含多个单词的字符串 <em>s</em></p>
<p>;</p>
<p>第 2</p>
<p> 行是待替换的单词 <em>a</em>(长度不超过 100</p>
<p>);</p>
<p>第 3</p>
<p> 行是 <em>a</em> 将被替换的单词 <em>b</em>(长度不超过 100</p>
<p>)。</p>
<h4 id="输出格式-15"><a href="#输出格式-15" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，输出将 <em>s</em></p>
<p> 中所有单词 <em>a</em> 替换成 <em>b</em></p>
<p> 之后的字符串。</p>
<h4 id="输入样例：-14"><a href="#输入样例：-14" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">You want someone to help you</span><br><span class="line">You</span><br><span class="line">I</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-14"><a href="#输出样例：-14" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">I want someone to help you</span><br></pre></td></tr></table></figure>

<h3 id="答案-15"><a href="#答案-15" class="headerlink" title="答案"></a>答案</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;sstream&gt;</span><span class="comment">//</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s,a,b;</span><br><span class="line">    <span class="built_in">getline</span>(cin,s);</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="function">stringstream <span class="title">ssin</span><span class="params">(s)</span></span>;<span class="comment">//初始化</span></span><br><span class="line">    string str;</span><br><span class="line">    <span class="keyword">while</span>(ssin &gt;&gt; str)<span class="comment">//ssin就相当于cin,只不过是从s中读入符合条件的str</span></span><br><span class="line">        <span class="keyword">if</span>(str==a) cout &lt;&lt; b &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; str &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="776-字符串移位包含问题"><a href="#776-字符串移位包含问题" class="headerlink" title="*776. 字符串移位包含问题"></a>*776. 字符串移位包含问题</h2><h3 id="题目-16"><a href="#题目-16" class="headerlink" title="题目"></a>题目</h3><p>对于一个字符串来说，定义一次循环移位操作为：将字符串的第一个字符移动到末尾形成新的字符串。</p>
<p>给定两个字符串 <em>s</em>1</p>
<p> 和 <em>s</em>2</p>
<p>，要求判定其中一个字符串是否是另一字符串通过若干次循环移位后的新字符串的子串。</p>
<p>例如 <code>CDAA</code> 是由 <code>AABCD</code> 两次移位后产生的新串 <code>BCDAA</code> 的子串，而 <code>ABCD</code> 与 <code>ACBD</code> 则不能通过多次移位来得到其中一个字符串是新串的子串。</p>
<h4 id="输入格式-16"><a href="#输入格式-16" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含两个字符串，中间由单个空格隔开。</p>
<p>字符串只包含字母和数字，长度不超过 30</p>
<p>。</p>
<h4 id="输出格式-16"><a href="#输出格式-16" class="headerlink" title="输出格式"></a>输出格式</h4><p>如果一个字符串是另一字符串通过若干次循环移位产生的新串的子串，则输出 <code>true</code>，否则输出 <code>false</code>。</p>
<h4 id="输入样例：-15"><a href="#输入样例：-15" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AABCD CDAA</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-15"><a href="#输出样例：-15" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">true</span><br></pre></td></tr></table></figure>

<h3 id="答案-16"><a href="#答案-16" class="headerlink" title="答案"></a>答案</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string a,b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="keyword">if</span>(a.<span class="built_in">size</span>()&lt;b.<span class="built_in">size</span>()) <span class="built_in">swap</span>(a,b);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;a.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        a=a.<span class="built_in">substr</span>(<span class="number">1</span>)+a[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j+b.<span class="built_in">size</span>()&lt;=a.<span class="built_in">size</span>();j++)&#123;<span class="comment">//j是起点，起点后面的长度加上b的长度必须要小于a的长度</span></span><br><span class="line">            <span class="type">int</span> k;</span><br><span class="line">            <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;b.<span class="built_in">size</span>();k++)</span><br><span class="line">                <span class="keyword">if</span>(a[j+k]!=b[k])</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(k==b.<span class="built_in">size</span>())&#123;</span><br><span class="line">                <span class="built_in">puts</span>(<span class="string">&quot;true&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;false&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="777-字符串乘方"><a href="#777-字符串乘方" class="headerlink" title="777. 字符串乘方"></a>777. 字符串乘方</h2><h3 id="题目-17"><a href="#题目-17" class="headerlink" title="题目"></a>题目</h3><p>给定两个字符串 <em>a</em></p>
<p> 和 <em>b</em>，我们定义 <em>a</em>×<em>b</em></p>
<p> 为他们的连接。</p>
<p>例如，如果 <em>a</em>&#x3D;</p>
<p><code>abc</code> 而 <em>b</em>&#x3D;<code>def</code>， 则 <em>a</em>×<em>b</em>&#x3D;</p>
<p><code>abcdef</code>。 </p>
<p>如果我们将连接考虑成乘法，一个非负整数的乘方将用一种通常的方式定义：<em>a</em>0&#x3D;</p>
<p>&#96;&#96;(空字符串)，<em>a</em>(<em>n</em>+1)&#x3D;<em>a</em>×(<em>a**n</em>)</p>
<p>。</p>
<h4 id="输入格式-17"><a href="#输入格式-17" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入包含多组测试样例，每组测试样例占一行。</p>
<p>每组样例包含一个字符串 <em>s</em></p>
<p>，<em>s</em> 的长度不超过 100</p>
<p>。</p>
<p>最后的测试样例后面将是一个点号作为一行。</p>
<h4 id="输出格式-17"><a href="#输出格式-17" class="headerlink" title="输出格式"></a>输出格式</h4><p>对于每一个 <em>s</em></p>
<p>，你需要输出最大的 <em>n</em>，使得存在一个字符串 <em>a</em>，让 <em>s</em>&#x3D;<em>a**n</em></p>
<p>。</p>
<h4 id="输入样例：-16"><a href="#输入样例：-16" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">abcd</span><br><span class="line">aaaa</span><br><span class="line">ababab</span><br><span class="line">.</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-16"><a href="#输出样例：-16" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">4</span><br><span class="line">3</span><br></pre></td></tr></table></figure>

<h3 id="答案-17"><a href="#答案-17" class="headerlink" title="答案"></a>答案</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; s,s!=<span class="string">&quot;.&quot;</span>)&#123;</span><br><span class="line">        <span class="type">int</span> len=s.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> n=len;n;n--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(len%n==<span class="number">0</span>)&#123;<span class="comment">//n一定是len的约数</span></span><br><span class="line">                <span class="type">int</span> m=len/n;</span><br><span class="line">                string a=s.<span class="built_in">substr</span>(<span class="number">0</span>,m);</span><br><span class="line">                string r;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) r+=a;</span><br><span class="line">                <span class="keyword">if</span>(r==s)&#123;</span><br><span class="line">                    cout &lt;&lt; n &lt;&lt; endl;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="778-字符串最大跨距"><a href="#778-字符串最大跨距" class="headerlink" title="*778. 字符串最大跨距"></a>*778. 字符串最大跨距</h2><h3 id="题目-18"><a href="#题目-18" class="headerlink" title="题目"></a>题目</h3><p>有三个字符串 <em>S</em>,<em>S</em>1,<em>S</em>2</p>
<p>，其中，<em>S</em> 长度不超过 300，<em>S</em>1 和 <em>S</em>2 的长度不超过 10</p>
<p>。</p>
<p>现在，我们想要检测 <em>S</em>1</p>
<p> 和 <em>S</em>2 是否同时在 <em>S</em> 中出现，且 <em>S</em>1 位于 <em>S</em>2 的左边，并在 <em>S</em> 中互不交叉（即，<em>S</em>1 的右边界点在 <em>S</em>2</p>
<p> 的左边界点的左侧）。</p>
<p>计算满足上述条件的最大跨距（即，最大间隔距离：最右边的 <em>S</em>2</p>
<p> 的起始点与最左边的 <em>S</em>1</p>
<p> 的终止点之间的字符数目）。</p>
<p>如果没有满足条件的 <em>S</em>1</p>
<p>，<em>S</em>2 存在，则输出 −1</p>
<p>。 </p>
<p>例如，<em>S</em>&#x3D;</p>
<p><code>abcd123ab888efghij45ef67kl</code>, <em>S</em>1&#x3D;<code>ab</code>, <em>S</em>2&#x3D;<code>ef</code>，其中，<em>S</em>1 在 <em>S</em> 中出现了 2 次，<em>S</em>2 也在 <em>S</em> 中出现了 2 次，最大跨距为：18</p>
<p>。</p>
<h4 id="输入格式-18"><a href="#输入格式-18" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入共一行，包含三个字符串 <em>S</em>,<em>S</em>1,<em>S</em>2</p>
<p>，字符串之间用逗号隔开。</p>
<p>数据保证三个字符串中不含空格和逗号。</p>
<h4 id="输出格式-18"><a href="#输出格式-18" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，表示最大跨距。</p>
<p>如果没有满足条件的 <em>S</em>1</p>
<p> 和 <em>S</em>2 存在，则输出 −1</p>
<p>。</p>
<h4 id="输入样例：-17"><a href="#输入样例：-17" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">abcd123ab888efghij45ef67kl,ab,ef</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-17"><a href="#输出样例：-17" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">18</span><br></pre></td></tr></table></figure>

<h3 id="答案-18"><a href="#答案-18" class="headerlink" title="答案"></a>答案</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s,s1,s2;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; c, c!=<span class="string">&#x27;,&#x27;</span>) s+=c;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; c, c!=<span class="string">&#x27;,&#x27;</span>) s1+=c;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; c) s2+=c;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(s.<span class="built_in">size</span>() &lt; s1.<span class="built_in">size</span>() || s.<span class="built_in">size</span>() &lt; s2.<span class="built_in">size</span>()) <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="type">int</span> l=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(l+s1.<span class="built_in">size</span>()&lt;=s.<span class="built_in">size</span>())&#123;</span><br><span class="line">            <span class="type">int</span> k=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(k&lt;s1.<span class="built_in">size</span>())&#123;</span><br><span class="line">                <span class="keyword">if</span>(s[l+k] != s1[k]) <span class="keyword">break</span>; </span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(k==s1.<span class="built_in">size</span>()) <span class="keyword">break</span>;</span><br><span class="line">            l++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> r=s.<span class="built_in">size</span>()-s2.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">while</span>(r&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">int</span> k=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(k&lt;s2.<span class="built_in">size</span>())&#123;</span><br><span class="line">                <span class="keyword">if</span>(s[r+k] != s2[k]) <span class="keyword">break</span>;</span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(k==s2.<span class="built_in">size</span>()) <span class="keyword">break</span>;</span><br><span class="line">            r--;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        l+=s1.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">if</span>(l&gt;=r) <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,r-l<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="779-最长公共字符串后缀"><a href="#779-最长公共字符串后缀" class="headerlink" title="*779. 最长公共字符串后缀"></a>*779. 最长公共字符串后缀</h2><h3 id="题目-19"><a href="#题目-19" class="headerlink" title="题目"></a>题目</h3><p>给出若干个字符串，输出这些字符串的最长公共后缀。</p>
<h4 id="输入格式-19"><a href="#输入格式-19" class="headerlink" title="输入格式"></a>输入格式</h4><p>由若干组输入组成。</p>
<p>每组输入的第一行是一个整数 <em>N</em></p>
<p>。</p>
<p><em>N</em></p>
<p> 为 0 时表示输入结束，否则后面会继续有 <em>N</em></p>
<p> 行输入，每行是一个字符串（字符串内不含空白符）。</p>
<p>每个字符串的长度不超过 200</p>
<p>。</p>
<h4 id="输出格式-19"><a href="#输出格式-19" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，为 <em>N</em></p>
<p> 个字符串的最长公共后缀（可能为空）。</p>
<h4 id="数据范围-7"><a href="#数据范围-7" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤<em>N</em>≤200</p>
<h4 id="输入样例：-18"><a href="#输入样例：-18" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">baba</span><br><span class="line">aba</span><br><span class="line">cba</span><br><span class="line">2</span><br><span class="line">aa</span><br><span class="line">cc</span><br><span class="line">2</span><br><span class="line">aa</span><br><span class="line">a</span><br><span class="line">0</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-18"><a href="#输出样例：-18" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ba</span><br><span class="line"></span><br><span class="line">a</span><br></pre></td></tr></table></figure>

<h3 id="答案-19"><a href="#答案-19" class="headerlink" title="答案"></a>答案</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">200</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">string str[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; n,n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> len=<span class="number">1000</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="comment">//找到一组字符串中最短的那一个，以最短的这个为最开始的后缀长度，依次减少</span></span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; str[i];</span><br><span class="line">            <span class="keyword">if</span>(len &gt; str[i].<span class="built_in">size</span>()) len=str[i].<span class="built_in">size</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(len)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">bool</span> success=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">bool</span> is_same=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=len;j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(str[<span class="number">0</span>][str[<span class="number">0</span>].<span class="built_in">size</span>()-j] != str[i][str[i].<span class="built_in">size</span>()-j])<span class="comment">//判断后缀是否相同</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        is_same=<span class="literal">false</span>;</span><br><span class="line">                        <span class="keyword">break</span>;<span class="comment">//只要有一个不同，那len就应该要减一</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(!is_same)<span class="comment">//有一个不同就不成功</span></span><br><span class="line">                &#123;</span><br><span class="line">                    success=<span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(success) <span class="keyword">break</span>;<span class="comment">//全部相同，成立，直接跳出循环</span></span><br><span class="line">            <span class="keyword">else</span> len--;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; str[<span class="number">0</span>].<span class="built_in">substr</span>(str[<span class="number">0</span>].<span class="built_in">size</span>()-len) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
        <category>习题</category>
        <category>语法基础</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>Acwing</tag>
        <tag>语法基础</tag>
        <tag>字符串</tag>
      </tags>
  </entry>
  <entry>
    <title>acwing C++语法基础课选择结构章节习题</title>
    <url>/2024/03/04/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h1 id="665-倍数"><a href="#665-倍数" class="headerlink" title="665.倍数"></a>665.倍数</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>读取两个正整数值 A 和 B。</p>
<p>如果其中一个是另一个的整数倍，则输出 <code>Sao Multiplos</code>，否则输出 <code>Nao sao Multiplos</code>。</p>
<span id="more"></span>

<h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，两个整数 A 和 B。</p>
<h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>按题目所述，输出结果。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>0&lt;A,B&lt;100 </p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6 24</span><br></pre></td></tr></table></figure>

<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Sao Multiplos</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>难度：<strong>简单</strong></th>
</tr>
</thead>
<tbody><tr>
<td>时&#x2F;空限制：1s &#x2F; 64MB</td>
</tr>
<tr>
<td>总通过数：6051</td>
</tr>
<tr>
<td>总尝试数：9957</td>
</tr>
<tr>
<td>来源：语法题</td>
</tr>
<tr>
<td>算法标签</td>
</tr>
</tbody></table>
<hr>
<h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="keyword">if</span>(a%b==<span class="number">0</span> || b%a==<span class="number">0</span>)</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Sao Multiplos&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Nao sao Multiplos&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    <span class="keyword">if</span>(b%a==<span class="number">0</span> || a%b==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Sao Multiplos&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Nao sao Multiplos&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="668-游戏时间2"><a href="#668-游戏时间2" class="headerlink" title="668 游戏时间2"></a>668 游戏时间2</h1><h2 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h2><p>读取四个整数 A,B,C,DA,B,C,D，用来表示游戏的开始时间和结束时间。</p>
<p>其中 AA 和 BB 为开始时刻的小时和分钟数，CC 和 DD 为结束时刻的小时和分钟数。</p>
<p>请你计算游戏的持续时间。</p>
<p>比赛最短持续 11 分钟，最长持续 2424 小时。</p>
<h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含四个整数 A,B,C,DA,B,C,D。</p>
<h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出格式为 <code>O JOGO DUROU X HORA(S) E Y MINUTO(S)</code>，表示游戏共持续了 XX 小时 YY 分钟。</p>
<h4 id="数据范围-1"><a href="#数据范围-1" class="headerlink" title="数据范围"></a>数据范围</h4><p>0≤A,C≤230≤A,C≤23,<br>0≤B,D≤590≤B,D≤59</p>
<h4 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7 8 9 10</span><br></pre></td></tr></table></figure>

<h4 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O JOGO DUROU 2 HORA(S) E 2 MINUTO(S)</span><br></pre></td></tr></table></figure>

<h4 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7 7 7 7</span><br></pre></td></tr></table></figure>

<h4 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O JOGO DUROU 24 HORA(S) E 0 MINUTO(S)</span><br></pre></td></tr></table></figure>

<h4 id="输入样例3："><a href="#输入样例3：" class="headerlink" title="输入样例3："></a>输入样例3：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7 10 8 9</span><br></pre></td></tr></table></figure>

<h4 id="输出样例3："><a href="#输出样例3：" class="headerlink" title="输出样例3："></a>输出样例3：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O JOGO DUROU 0 HORA(S) E 59 MINUTO(S)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="答案-1"><a href="#答案-1" class="headerlink" title="答案"></a>答案</h2><hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> hour1,minute1;</span><br><span class="line">	<span class="type">int</span> hour2,minute2;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;hour1,&amp;minute1);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;hour2,&amp;minute2);</span><br><span class="line">	<span class="type">int</span> hour,minute;</span><br><span class="line">	<span class="keyword">if</span>(hour2&gt;hour1)&#123;</span><br><span class="line">		<span class="keyword">if</span>(minute2&gt;=minute1)&#123;</span><br><span class="line">			hour=hour2-hour1;</span><br><span class="line">			minute=minute2-minute1;</span><br><span class="line">		&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">			hour=hour2-hour1<span class="number">-1</span>;</span><br><span class="line">			minute=minute2+<span class="number">60</span>-minute1;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;<span class="keyword">else</span> <span class="keyword">if</span>(hour2 == hour1)&#123;</span><br><span class="line">		<span class="keyword">if</span>(minute2 &gt; minute1)&#123;</span><br><span class="line">			hour=hour2-hour1;</span><br><span class="line">			minute=minute2-minute1;</span><br><span class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(minute2 &lt; minute1)&#123;</span><br><span class="line">			hour=hour2+<span class="number">24</span>-hour1<span class="number">-1</span>;</span><br><span class="line">			minute=minute2+<span class="number">60</span>-minute1;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			hour=<span class="number">24</span>;</span><br><span class="line">			minute=<span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		hour=hour2+<span class="number">24</span>-hour1;</span><br><span class="line">		<span class="keyword">if</span>(minute2&gt;=minute1)&#123;</span><br><span class="line">			minute=minute2-minute1;</span><br><span class="line">		&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">			minute=minute2+<span class="number">60</span>-minute1;</span><br><span class="line">			hour--;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;<span class="built_in">printf</span>(<span class="string">&quot;O JOGO DUROU %d HORA(S) E %d MINUTO(S)&quot;</span>,hour,minute);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>可以全部化成分钟</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b,c,d;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>,&amp;a,&amp;b,&amp;c,&amp;d);</span><br><span class="line">    <span class="type">int</span> start=a*<span class="number">60</span>+b;</span><br><span class="line">    <span class="type">int</span> end=c*<span class="number">60</span>+d;</span><br><span class="line">    <span class="type">int</span> spent_time =end-start;</span><br><span class="line">    <span class="keyword">if</span>(spent_time&lt;=<span class="number">0</span>) spent_time+=<span class="number">1440</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;O JOGO DUROU %d HORA(S) E %d MINUTO(S)&quot;</span>,spent_time/<span class="number">60</span>,spent_time%<span class="number">60</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="672-税"><a href="#672-税" class="headerlink" title="672 税"></a>672 税</h1><h4 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h4><p>读取一个保留两位小数的浮点数值，表示一个公民的工资。</p>
<p>在公民缴纳个人所得税时，不同收入部分需要缴税的税率也是不同的。</p>
<p>请根据下表确定该公民需要缴纳的个人所得税是多少。</p>
<p><img src="https://cdn.acwing.com/media/article/image/2019/04/13/19_59eb56625d-UOJ_1051_en.png" alt="UOJ_1051_en.png"></p>
<h5 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h5><p>共一行，包含一个浮点数。</p>
<h5 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h5><p>如果公民需要缴税，则输出所需缴纳的税额。输出格式为 <code>R$ X</code>，其中 XX 为个税的金额，保留两位小数。</p>
<p>如果公民不需要缴税，则输出 <code>Isento</code>。</p>
<h5 id="数据范围-2"><a href="#数据范围-2" class="headerlink" title="数据范围"></a>数据范围</h5><p>0≤公民工资≤50000≤公民工资≤5000</p>
<h5 id="输入样例1：-1"><a href="#输入样例1：-1" class="headerlink" title="输入样例1："></a>输入样例1：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3002.00</span><br></pre></td></tr></table></figure>

<h5 id="输出样例1：-1"><a href="#输出样例1：-1" class="headerlink" title="输出样例1："></a>输出样例1：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">R$ 80.36</span><br></pre></td></tr></table></figure>

<h5 id="输入样例2：-1"><a href="#输入样例2：-1" class="headerlink" title="输入样例2："></a>输入样例2：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1700.00</span><br></pre></td></tr></table></figure>

<h5 id="输出样例2：-1"><a href="#输出样例2：-1" class="headerlink" title="输出样例2："></a>输出样例2：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Isento</span><br></pre></td></tr></table></figure>

<h5 id="输入样例3：-1"><a href="#输入样例3：-1" class="headerlink" title="输入样例3："></a>输入样例3：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4520.00</span><br></pre></td></tr></table></figure>

<h5 id="输出样例3：-1"><a href="#输出样例3：-1" class="headerlink" title="输出样例3："></a>输出样例3：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">R$ 355.60</span><br></pre></td></tr></table></figure>

<h4 id="答案-2"><a href="#答案-2" class="headerlink" title="答案"></a>答案</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">float</span> a;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;a);</span><br><span class="line">	<span class="type">float</span> taxes;</span><br><span class="line">	<span class="keyword">if</span>(a&lt;=<span class="number">2000</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Isento&quot;</span>);</span><br><span class="line">	&#125;<span class="keyword">else</span> <span class="keyword">if</span>(a&gt;<span class="number">2000</span> &amp;&amp; a&lt;=<span class="number">3000</span>)&#123;</span><br><span class="line">		taxes=(a<span class="number">-2000</span>)*<span class="number">0.08</span>;</span><br><span class="line">	&#125;<span class="keyword">else</span> <span class="keyword">if</span>(a&gt;<span class="number">3000</span> &amp;&amp; a&lt;=<span class="number">4500</span>)&#123;</span><br><span class="line">		taxes=<span class="number">80</span>+(a<span class="number">-3000</span>)*<span class="number">0.18</span>;</span><br><span class="line">	&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">		taxes=<span class="number">350</span>+(a<span class="number">-4500</span>)*<span class="number">0.28</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(a&gt;<span class="number">2000</span>)&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;R$ %.2f&quot;</span>,taxes);</span><br><span class="line">&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;x);</span><br><span class="line">    <span class="type">double</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">2000</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">double</span> y=<span class="number">3000</span>;  <span class="comment">//上限</span></span><br><span class="line">        <span class="keyword">if</span>(x&lt;<span class="number">3000</span>) y=x;</span><br><span class="line">        sum += (y<span class="number">-2000</span>)*<span class="number">0.08</span>;</span><br><span class="line">    &#125;<span class="keyword">if</span>(x&gt;<span class="number">3000</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">double</span> y=<span class="number">4500</span>;</span><br><span class="line">        <span class="keyword">if</span>(x&lt;<span class="number">4500</span>) y=x;</span><br><span class="line">        sum += (y<span class="number">-3000</span>)*<span class="number">0.18</span>;</span><br><span class="line">    &#125;<span class="keyword">if</span>(x&gt;<span class="number">4500</span>) sum += (x<span class="number">-4500</span>)*<span class="number">0.28</span>;</span><br><span class="line">    <span class="keyword">if</span>(sum==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;Isento&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;R$ %.2lf&quot;</span>,sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="663-简单排序"><a href="#663-简单排序" class="headerlink" title="663.简单排序"></a>663.简单排序</h1><h4 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h4><p>读取三个整数并按升序对它们进行排序。</p>
<h5 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h5><p>共一行，包含三个整数。</p>
<h5 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h5><p>首先，将三个整数按升序顺序输出，每行输出一个整数。</p>
<p>然后，输出一个空行。</p>
<p>紧接着，将三个整数按原输入顺序输出，每行输出一个整数。</p>
<h5 id="数据范围-3"><a href="#数据范围-3" class="headerlink" title="数据范围"></a>数据范围</h5><p>−100≤输入整数≤100−100≤输入整数≤100</p>
<h5 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7 21 -14</span><br></pre></td></tr></table></figure>

<h5 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-14</span><br><span class="line">7</span><br><span class="line">21</span><br><span class="line"></span><br><span class="line">7</span><br><span class="line">21</span><br><span class="line">-14</span><br></pre></td></tr></table></figure>

<h4 id="答案-3"><a href="#答案-3" class="headerlink" title="答案"></a>答案</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> a,b,c;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">	<span class="type">int</span> t;</span><br><span class="line">	<span class="type">int</span> x,y,z;</span><br><span class="line">	x=a;y=b;z=c;</span><br><span class="line">	<span class="keyword">if</span>(a&gt;b)&#123;</span><br><span class="line">		t=a;</span><br><span class="line">		a=b;</span><br><span class="line">		b=t;</span><br><span class="line">	&#125; <span class="keyword">if</span>(a&gt;c)&#123;</span><br><span class="line">		t=a;</span><br><span class="line">		a=c;</span><br><span class="line">		c=t;</span><br><span class="line">	&#125; <span class="keyword">if</span>(b&gt;c)&#123;</span><br><span class="line">		t=b;</span><br><span class="line">		b=c;</span><br><span class="line">		c=t;</span><br><span class="line">	&#125;<span class="built_in">printf</span>(<span class="string">&quot;%d\n%d\n%d\n\n&quot;</span>,a,b,c);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n%d\n%d\n&quot;</span>,x,y,z);</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure>

<h1 id="658-一元二次方程"><a href="#658-一元二次方程" class="headerlink" title="658.一元二次方程"></a>658.一元二次方程</h1><h4 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a>题目</h4><p>读取三个浮点数 a,b,ca,b,c 的值，利用一元二次方程求根公式对方程 ax2+bx+c&#x3D;0ax2+bx+c&#x3D;0 进行求解。</p>
<p>一元二次方程求根公式为：</p>
<p>x&#x3D;−b±b2−4ac−−−−−−−√2ax&#x3D;−b±b2−4ac2a</p>
<p>如果 b2−4ac&lt;0b2−4ac&lt;0 导致方程无解或 a&#x3D;0a&#x3D;0，则输出 <code>Impossivel calcular</code>。</p>
<h5 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式"></a>输入格式</h5><p>输入三个浮点数 a,b,ca,b,c。</p>
<h5 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式"></a>输出格式</h5><p>参照输出格式，输出方程的根，输出结果保留五位小数，如果无解则输出 <code>Impossivel calcular</code>。</p>
<p>两个根可以按任意顺序输出，都算正确。</p>
<p>数据保证不存在只有一个解的情况。</p>
<h5 id="数据范围-4"><a href="#数据范围-4" class="headerlink" title="数据范围"></a>数据范围</h5><p>−1000.0≤a,b,c≤1000.0−1000.0≤a,b,c≤1000.0</p>
<h5 id="输入样例：-2"><a href="#输入样例：-2" class="headerlink" title="输入样例："></a>输入样例：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10.0 20.1 5.1</span><br></pre></td></tr></table></figure>

<h5 id="输出样例：-2"><a href="#输出样例：-2" class="headerlink" title="输出样例："></a>输出样例：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">R1 = -0.29788</span><br><span class="line">R2 = -1.71212</span><br></pre></td></tr></table></figure>

<h4 id="答案-4"><a href="#答案-4" class="headerlink" title="答案"></a>答案</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">float</span> a,b,c;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%f%f%f&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">	<span class="type">float</span> x1,x2;</span><br><span class="line">	<span class="type">float</span> p,q;</span><br><span class="line">	p=-b/(<span class="number">2</span>*a);</span><br><span class="line">	q=<span class="built_in">sqrt</span>(b*b<span class="number">-4</span>*a*c)/(<span class="number">2</span>*a);</span><br><span class="line">	x1=p+q;</span><br><span class="line">	x2=p-q;</span><br><span class="line">	<span class="keyword">if</span>(b*b<span class="number">-4</span>*a*c&gt;=<span class="number">0</span> &amp;&amp; a!=<span class="number">0</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;R1 = %.5f\nR2 = %.5f&quot;</span>,x1,x2);</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Impossivel calcular&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="661-平均数3"><a href="#661-平均数3" class="headerlink" title="661. 平均数3"></a>661. 平均数3</h1><h4 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a>题目</h4><p>读取 4 个数字 N1,N2,N3,N4N1,N2,N3,N4，这 44 个数字都是保留 11 位小数的浮点数，对应于学生获得的 44 个分数。</p>
<p>这 44 个分数的权重分别为 2,3,4,12,3,4,1，请你计算学生成绩的平均值 XX 并输出 <code>Media: X</code>。</p>
<p>接下来分为以下三种情况：</p>
<ol>
<li>如果平均值为 7.07.0 或更高，则输出 <code>Aluno aprovado.</code>。</li>
<li>如果平均值小于 5.05.0，则输出 <code>Aluno reprovado.</code>。</li>
<li>如果平均值大于等于 5.05.0 并且小于 7.07.0，则输出 <code>Aluno em exame.</code>，并再读取一个数字 YY，然后输出 <code>Nota do exame: Y</code>。接下来重新计算平均值 Z&#x3D;(X+Y)&#x2F;2Z&#x3D;(X+Y)&#x2F;2，如果 ZZ 大于或等于 5.05.0，则输出 <code>Aluno aprovado.</code>，否则输出 <code>Aluno reprovado.</code>。最后输出 <code>Media final: Z</code>，表示学生的最终成绩。</li>
</ol>
<h5 id="输入格式-5"><a href="#输入格式-5" class="headerlink" title="输入格式"></a>输入格式</h5><p>输入中包含四个浮点数，表示学生的四个成绩。</p>
<p>也有部分满足情况 33 的数据，多包含一个浮点数。</p>
<h5 id="输出格式-5"><a href="#输出格式-5" class="headerlink" title="输出格式"></a>输出格式</h5><p>输出的结果均保留 11 位小数，具体形式参照题目描述和输出样例。</p>
<h5 id="数据范围-5"><a href="#数据范围-5" class="headerlink" title="数据范围"></a>数据范围</h5><p>0≤输入数据≤10.00≤输入数据≤10.0</p>
<h5 id="输入样例1：-2"><a href="#输入样例1：-2" class="headerlink" title="输入样例1："></a>输入样例1：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2.0 4.0 7.5 8.0</span><br><span class="line">6.4</span><br></pre></td></tr></table></figure>

<h5 id="输出样例1：-2"><a href="#输出样例1：-2" class="headerlink" title="输出样例1："></a>输出样例1：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Media: 5.4</span><br><span class="line">Aluno em exame.</span><br><span class="line">Nota do exame: 6.4</span><br><span class="line">Aluno aprovado.</span><br><span class="line">Media final: 5.9</span><br></pre></td></tr></table></figure>

<h5 id="输入样例2：-2"><a href="#输入样例2：-2" class="headerlink" title="输入样例2："></a>输入样例2：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2.0 6.6 4.0 9.0</span><br></pre></td></tr></table></figure>

<h5 id="输出样例2：-2"><a href="#输出样例2：-2" class="headerlink" title="输出样例2："></a>输出样例2：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Media: 4.9</span><br><span class="line">Aluno reprovado.</span><br></pre></td></tr></table></figure>

<h5 id="输入样例3：-2"><a href="#输入样例3：-2" class="headerlink" title="输入样例3："></a>输入样例3：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">9.0 4.0 8.5 9.0</span><br></pre></td></tr></table></figure>

<h5 id="输出样例3：-2"><a href="#输出样例3：-2" class="headerlink" title="输出样例3："></a>输出样例3：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Media: 7.3</span><br><span class="line">Aluno aprovado.</span><br></pre></td></tr></table></figure>

<h4 id="答案-5"><a href="#答案-5" class="headerlink" title="答案"></a>答案</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">float</span> a,b,c,d;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%f%f%f%f&quot;</span>,&amp;a,&amp;b,&amp;c,&amp;d);</span><br><span class="line">	<span class="type">float</span> x;</span><br><span class="line">	x=(a*<span class="number">2</span>+b*<span class="number">3</span>+c*<span class="number">4</span>+d*<span class="number">1</span>)/<span class="number">10</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Media: %.1f\n&quot;</span>,x);</span><br><span class="line">	<span class="keyword">if</span>(x&gt;=<span class="number">7</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Aluno aprovado.\n&quot;</span>);</span><br><span class="line">	&#125;<span class="keyword">else</span> <span class="keyword">if</span>(x&lt;<span class="number">5</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Aluno reprovado.\n&quot;</span>);</span><br><span class="line">	&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Aluno em exame.\n&quot;</span>);</span><br><span class="line">		<span class="type">float</span> y;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;y);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Nota do exame: %.1f\n&quot;</span>,y);</span><br><span class="line">		<span class="type">float</span> z;</span><br><span class="line">		z=(x+y)/<span class="number">2.0</span>;</span><br><span class="line">		<span class="keyword">if</span>(z&gt;=<span class="number">5</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Aluno aprovado.\n&quot;</span>);</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Aluno reprovado.\n&quot;</span>);</span><br><span class="line">		</span><br><span class="line">		&#125;	<span class="built_in">printf</span>(<span class="string">&quot;Mediafinal: %.1f\n&quot;</span>,z);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="670-动物"><a href="#670-动物" class="headerlink" title="670 动物"></a>670 动物</h1><h3 id="题目-6"><a href="#题目-6" class="headerlink" title="题目"></a>题目</h3><p>给定你三个葡萄牙语单词，这些词将根据下表从左到右定义一个动物。</p>
<p>请你确定并输出这个动物的名称。</p>
<p><img src="https://cdn.acwing.com/media/article/image/2019/04/13/19_c2433a725d-UOJ_1049_b.png" alt="UOJ_1049_b.png"></p>
<h4 id="输入格式-6"><a href="#输入格式-6" class="headerlink" title="输入格式"></a>输入格式</h4><p>根据上表，输入包含三个单词，每行一个，用以识别动物，单词由小写字母构成。</p>
<h4 id="输出格式-6"><a href="#输出格式-6" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出识别出的动物的名称。</p>
<h4 id="输入样例：-3"><a href="#输入样例：-3" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vertebrado</span><br><span class="line">mamifero</span><br><span class="line">onivoro</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-3"><a href="#输出样例：-3" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">homem</span><br></pre></td></tr></table></figure>

<h3 id="答案-6"><a href="#答案-6" class="headerlink" title="答案"></a>答案</h3><ul>
<li><strong>gets()<strong>是字符串输入函数（字符串的输入也可用</strong>scanf(“%s”,a)</strong>,注意这里不能加取地址符号，但这里不能用scanf，比较不出来）</li>
<li>**puts()**是字符串输出函数</li>
<li>**strcmp()**是比较字符的大小函数，如果相等则结果为0</li>
</ul>
<p><strong>C程序语言答案</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">char</span> a[<span class="number">20</span>],b[<span class="number">20</span>],c[<span class="number">20</span>];</span><br><span class="line">	gets(a);<span class="comment">//输入字符</span></span><br><span class="line">	gets(b);</span><br><span class="line">	gets(c);</span><br><span class="line">	<span class="keyword">if</span>(<span class="built_in">strcmp</span>(a,<span class="string">&quot;vertebrado&quot;</span>)==<span class="number">0</span>)&#123;<span class="comment">//判断是否相等</span></span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">strcmp</span>(b,<span class="string">&quot;ave&quot;</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(<span class="built_in">strcmp</span>(c,<span class="string">&quot;carnivoro&quot;</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>( <span class="string">&quot;aguia&quot;</span> );</span><br><span class="line">			&#125;  <span class="keyword">if</span>(<span class="built_in">strcmp</span>(c,<span class="string">&quot;onivoro&quot;</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;pomba&quot;</span>);</span><br><span class="line">			&#125;	</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">strcmp</span>(b,<span class="string">&quot;mamifero&quot;</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(<span class="built_in">strcmp</span>(c,<span class="string">&quot;onivoro&quot;</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">				<span class="built_in">printf</span>( <span class="string">&quot;homem&quot;</span> );</span><br><span class="line">			&#125;</span><br><span class="line">			 <span class="keyword">if</span>(<span class="built_in">strcmp</span>(c,<span class="string">&quot;herbivoro&quot;</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>( <span class="string">&quot;vaca&quot;</span> );</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; <span class="keyword">if</span>(<span class="built_in">strcmp</span>(a,<span class="string">&quot;invertebrado&quot;</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">strcmp</span>(b,<span class="string">&quot;inseto&quot;</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(<span class="built_in">strcmp</span>(c,<span class="string">&quot;hematofago&quot;</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">				<span class="built_in">printf</span>( <span class="string">&quot;pulga&quot;</span> );</span><br><span class="line">			&#125; <span class="keyword">if</span>(<span class="built_in">strcmp</span>(c,<span class="string">&quot;herbivoro&quot;</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">				<span class="built_in">printf</span>( <span class="string">&quot;lagarta&quot;</span> );</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		&#125; <span class="keyword">if</span>(<span class="built_in">strcmp</span>(b,<span class="string">&quot;anelideo&quot;</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(<span class="built_in">strcmp</span>(c,<span class="string">&quot;hematofago&quot;</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">				<span class="built_in">printf</span>( <span class="string">&quot;sanguessuga&quot;</span> );</span><br><span class="line">			&#125; <span class="keyword">if</span>(<span class="built_in">strcmp</span>(c,<span class="string">&quot;onivoro&quot;</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;minhoca&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure>

<p><strong>C++答案</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	string a,b,c;</span><br><span class="line">	cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">	<span class="keyword">if</span>(a==<span class="string">&quot;vertebrado&quot;</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> (b==<span class="string">&quot;ave&quot;</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(c==<span class="string">&quot;carnivoro&quot;</span>)&#123;</span><br><span class="line">				cout &lt;&lt; <span class="string">&quot;aguia&quot;</span> &lt;&lt; endl;</span><br><span class="line">			&#125;  <span class="keyword">if</span>(c==<span class="string">&quot;onivoro&quot;</span>)&#123;</span><br><span class="line">				cout &lt;&lt; <span class="string">&quot;pomba&quot;</span> &lt;&lt; endl;</span><br><span class="line">			&#125;	</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(b==<span class="string">&quot;mamifero&quot;</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(c==<span class="string">&quot;onivoro&quot;</span>)&#123;</span><br><span class="line">				cout &lt;&lt; <span class="string">&quot;homem&quot;</span> &lt;&lt; endl;</span><br><span class="line">			&#125;</span><br><span class="line">			 <span class="keyword">if</span>(c==<span class="string">&quot;herbivoro&quot;</span>)&#123;</span><br><span class="line">				cout &lt;&lt; <span class="string">&quot;vaca&quot;</span> &lt;&lt; endl;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; <span class="keyword">if</span>(a==<span class="string">&quot;invertebrado&quot;</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> (b==<span class="string">&quot;inseto&quot;</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(c==<span class="string">&quot;hematofago&quot;</span>)&#123;</span><br><span class="line">				cout &lt;&lt; <span class="string">&quot;pulga&quot;</span> &lt;&lt; endl;</span><br><span class="line">			&#125; <span class="keyword">if</span>(c==<span class="string">&quot;herbivoro&quot;</span>)&#123;</span><br><span class="line">				cout &lt;&lt; <span class="string">&quot;lagarta&quot;</span> &lt;&lt; endl;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		&#125; <span class="keyword">if</span>(b==<span class="string">&quot;anelideo&quot;</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(c==<span class="string">&quot;hematofago&quot;</span>)&#123;</span><br><span class="line">				cout &lt;&lt; <span class="string">&quot;sanguessuga&quot;</span> &lt;&lt;endl;</span><br><span class="line">			&#125; <span class="keyword">if</span>(c==<span class="string">&quot;onivoro&quot;</span>)&#123;</span><br><span class="line">				cout &lt;&lt; <span class="string">&quot;minhoca&quot;</span> &lt;&lt; endl;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
        <category>习题</category>
        <category>语法基础</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>Acwing</tag>
        <tag>语法基础</tag>
        <tag>选择</tag>
      </tags>
  </entry>
  <entry>
    <title>acwing C++语法基础课数组章节习题</title>
    <url>/2024/03/04/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<h1 id="前面更大的个数"><a href="#前面更大的个数" class="headerlink" title="前面更大的个数"></a>前面更大的个数</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>人比人，气死人；鱼比鱼，难死鱼。小鱼最近参加了一个“比可爱”比赛，比的是每只鱼的可爱程度。参赛的鱼被从左到右排成一排，头都朝向左边，然后每只鱼会得到一个整数数值，表示这只鱼的可爱程度，很显然整数越大，表示这只鱼越可爱，而且任意两只鱼的可爱程度可能一样。由于所有的鱼头都朝向左<span id="more"></span>边，所以每只鱼只能看见在它左边的鱼的可爱程度，它们心里都在计算，在自己的眼力范围内有多少只鱼不如自己可爱呢。请你帮这些可爱但是鱼脑不够用的小鱼们计算一下。**(比较前面有多少个比它大的数并输出)**</p>
<h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行输入一个整数 n，表示鱼的数目。</p>
<p>第二行内输入 n 个整数，用空格间隔，依次表示从左到右每只小鱼的可爱程度。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>行内输出 n<em>n</em> 个整数，用空格间隔，依次表示每只小鱼眼中有多少只鱼不如自己可爱。</p>
<h3 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><p><strong>输入 #1</strong>复制</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">4 3 0 5 1 2</span><br></pre></td></tr></table></figure>

<p><strong>输出 #1</strong>复制</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0 0 0 3 1 2</span><br></pre></td></tr></table></figure>

<h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> n,i,j,m;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	<span class="type">int</span> a[n];</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;<span class="comment">//输入数组</span></span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]); </span><br><span class="line">	&#125;<span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">		m=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=j;i++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[j]&gt;a[i])&#123;<span class="comment">//将a[j]与a[j]前的每一项进行比较</span></span><br><span class="line">				m++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,m);</span><br><span class="line">	&#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<h1 id="737-数组替换"><a href="#737-数组替换" class="headerlink" title="737. 数组替换"></a>737. 数组替换</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>输入一个长度为 1010 的整数数组 X[10]X[10]，将里面的非正整数全部替换为 11，输出替换完成后的数组。</p>
<h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入包含 1010 个整数，每个整数占一行。</p>
<h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出新数组中的所有元素，每个元素占一行。</p>
<p>输出格式为 <code>X[i] = x</code>，其中 ii 为元素编号（从 00 开始），xx 为元素的值。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>−100≤X[i]≤100−100≤X[i]≤100</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line">-9</span><br><span class="line">0</span><br><span class="line">-4</span><br><span class="line">-10</span><br><span class="line">0</span><br><span class="line">-2</span><br><span class="line">-7</span><br><span class="line">7</span><br><span class="line">4</span><br></pre></td></tr></table></figure>

<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">X[0] = 10</span><br><span class="line">X[1] = 1</span><br><span class="line">X[2] = 1</span><br><span class="line">X[3] = 1</span><br><span class="line">X[4] = 1</span><br><span class="line">X[5] = 1</span><br><span class="line">X[6] = 1</span><br><span class="line">X[7] = 1</span><br><span class="line">X[8] = 7</span><br><span class="line">X[9] = 4</span><br></pre></td></tr></table></figure>

<h2 id="答案-1"><a href="#答案-1" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123; </span><br><span class="line">    cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">if</span>(a[i]&lt;=<span class="number">0</span>) a[i]=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;X[%d] = %d\n&quot;</span>,i,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="738-数组填充"><a href="#738-数组填充" class="headerlink" title="738. 数组填充"></a>738. 数组填充</h1><h2 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h2><p>输入一个整数 V，输出一个长度为 10 的数组 N，数组中的第一个元素为 V，每个后续元素的值都为上一个元素的值的 2 倍。</p>
<p>例如，如果输入整数为 1，则数组为：1,2,4,8…</p>
<h4 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入一个整数 V。</p>
<h4 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出数组中的所有元素，每个元素占一行。</p>
<p>输出格式为 <code>N[i] = x</code>，其中 ii 为元素编号（从 00 开始），xx 为元素的值。</p>
<h4 id="数据范围-1"><a href="#数据范围-1" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤V≤50</p>
<h4 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">N[0] = 1</span><br><span class="line">N[1] = 2</span><br><span class="line">N[2] = 4</span><br><span class="line">N[3] = 8</span><br><span class="line">N[4] = 16</span><br><span class="line">N[5] = 32</span><br><span class="line">N[6] = 64</span><br><span class="line">N[7] = 128</span><br><span class="line">N[8] = 256</span><br><span class="line">N[9] = 512</span><br></pre></td></tr></table></figure>

<h2 id="答案-2"><a href="#答案-2" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>]=&#123;n&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;N[%d] = %d\n&quot;</span>,<span class="number">0</span>,a[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">        a[i]=a[i<span class="number">-1</span>]*<span class="number">2</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;N[%d] = %d\n&quot;</span>,i,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="739-数组选择"><a href="#739-数组选择" class="headerlink" title="739. 数组选择"></a>739. 数组选择</h1><h2 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h2><p>输入一个长度为 100 的数组 A，请你按顺序输出其中不大于 10 的所有元素。</p>
<h4 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入 100 个数，每个数占一行，表示数组的所有元素的值。</p>
<p>每个数可能是整数也可能是浮点数。</p>
<h4 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h4><p>按顺序输出数组中的所有不大于 10 的元素，每个元素占一行。</p>
<p>输出格式为 <code>A[i] = x</code>，其中 ii 为元素编号，xx 为元素的值。</p>
<p>注意，所有的 xx 均保留一位小数。</p>
<h4 id="数据范围-2"><a href="#数据范围-2" class="headerlink" title="数据范围"></a>数据范围</h4><p>−100≤A[i]≤100−100≤A[i]≤100</p>
<h4 id="输入样例：-2"><a href="#输入样例：-2" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0</span><br><span class="line">-5</span><br><span class="line">63</span><br><span class="line">-8.5</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-2"><a href="#输出样例：-2" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A[0] = 0.0</span><br><span class="line">A[1] = -5.0</span><br><span class="line">A[3] = -8.5</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<h2 id="答案-3"><a href="#答案-3" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> a[<span class="number">100</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        <span class="keyword">if</span>(a[i] &lt;= <span class="number">10</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;A[%d] = %.1lf\n&quot;</span>,i,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="743-数组中的行"><a href="#743-数组中的行" class="headerlink" title="743. 数组中的行"></a>743. 数组中的行</h1><h2 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h2><p>输入一个二维数组 M[12][12]M[12][12]，根据输入的要求，求出二维数组中某一行的元素的平均值或元素的和。</p>
<h4 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行输入整数 L，表示所求的具体行数（行数从 0 开始计数）。</p>
<p>第二行包含一个大写字母，若为 <code>S</code>，则表示需要求出第 L 行的元素的和，若为 <code>M</code>，则表示需要求出第 LL 行的元素的平均值。</p>
<p>接下来 12 行，每行包含 12 个用空格隔开的浮点数，表示这个二维数组，其中第 i+1 行的第 j+1 个数表示数组元素 M [ i ][ j ]M[ i ][ j ]。</p>
<h4 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个数，表示所求的平均数或元素的和的值，保留一位小数。</p>
<h4 id="数据范围-3"><a href="#数据范围-3" class="headerlink" title="数据范围"></a>数据范围</h4><p>−100.0≤M[i][j]≤100.0</p>
<h4 id="输入样例：-3"><a href="#输入样例：-3" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7</span><br><span class="line">S</span><br><span class="line">8.3 -9.4 -5.6 9.9 2.2 3.2 6.9 7.7 -2.9 -6.3 3.9 -1.4</span><br><span class="line">-0.5 4.3 -0.3 2.3 0.7 -3.1 -6.3 5.7 -7.7 -3.7 9.7 3.8</span><br><span class="line">5.8 -9.1 3.5 7.0 2.5 -2.3 6.9 2.7 5.8 -4.6 -7.8 4.3</span><br><span class="line">-1.7 -8.9 -2.6 7.5 -9.6 6.4 -4.7 -8.0 0.6 6.7 -1.8 -0.4</span><br><span class="line">-9.8 8.9 -3.8 -2.1 5.8 -9.4 1.3 6.3 -1.3 -6.3 -6.6 8.8</span><br><span class="line">-6.3 -7.2 -6.3 -5.9 6.2 9.3 2.0 -4.3 2.7 3.6 -4.6 8.7</span><br><span class="line">3.8 7.4 8.7 -2.8 6.0 -9.2 1.9 3.1 -7.2 -6.0 9.7 -8.4</span><br><span class="line">-9.8 6.6 8.6 2.3 1.1 -2.9 6.6 -1.5 2.1 -5.1 6.4 -7.5</span><br><span class="line">-0.6 -1.6 9.5 -6.6 3.0 3.4 -7.5 -7.9 3.1 2.0 1.7 -7.6</span><br><span class="line">-9.0 9.4 6.6 -0.2 1.4 6.5 8.6 2.0 -1.3 0.2 4.0 -2.4</span><br><span class="line">-7.3 -6.3 -8.6 -7.5 8.5 1.4 -3.3 7.1 0.8 3.3 3.0 0.1</span><br><span class="line">3.3 9.0 1.7 5.2 -3.7 8.9 3.8 -7.4 -2.8 0.6 -2.4 7.1</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-3"><a href="#输出样例：-3" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6.9</span><br></pre></td></tr></table></figure>

<h2 id="答案-4"><a href="#答案-4" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">double</span> sum;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">double</span> a[<span class="number">12</span>][<span class="number">12</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">char</span> b;</span><br><span class="line">    cin &gt;&gt; b;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">12</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">12</span>;j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n,j=<span class="number">0</span>;j&lt;<span class="number">12</span>;j++)</span><br><span class="line">        sum += a[i][j];</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">if</span>(b == <span class="string">&#x27;S&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%.1lf&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">if</span>(b == <span class="string">&#x27;M&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%.1f&quot;</span>,sum/<span class="number">12.0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="745-数组的右上半部分"><a href="#745-数组的右上半部分" class="headerlink" title="745. 数组的右上半部分"></a>745. 数组的右上半部分</h1><h2 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a>题目</h2><p>输入一个二维数组 M[12][12]M[12][12]，根据输入的要求，求出二维数组的右上半部分元素的平均值或元素的和。</p>
<p>右上半部分是指主对角线上方的部分，如下图所示，黄色部分为对角线，绿色部分为右上半部分：</p>
<p><img src="https://cdn.acwing.com/media/article/image/2019/05/03/19_799a14f86d-UOJ_1183.png" alt="UOJ_1183.png"></p>
<h4 id="输入格式-5"><a href="#输入格式-5" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行输入一个大写字母，若为 <code>S</code>，则表示需要求出右上半部分的元素的和，若为 <code>M</code>，则表示需要求出右上半部分的元素的平均值。</p>
<p>接下来 12 行，每行包含 12 个用空格隔开的浮点数，表示这个二维数组，其中第 i+1 行的第 j+1 个数表示数组元素 M[ i ][ j ]</p>
<h4 id="输出格式-5"><a href="#输出格式-5" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个数，表示所求的平均数或元素的和的值，保留一位小数。</p>
<h4 id="数据范围-4"><a href="#数据范围-4" class="headerlink" title="数据范围"></a>数据范围</h4><p>−100.0≤M[i][j]≤100.0</p>
<h4 id="输入样例：-4"><a href="#输入样例：-4" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">M</span><br><span class="line">-6.5 8.2 0.7 9.0 0.8 -4.3 0.9 -0.0 -7.9 7.1 -1.6 4.6</span><br><span class="line">-9.4 -9.0 1.5 -9.0 -5.1 -0.5 -2.8 -9.1 8.0 -6.9 -5.5 -6.6</span><br><span class="line">-6.8 0.3 3.8 6.1 -9.9 -9.3 8.5 8.6 5.0 6.9 -3.6 -3.0</span><br><span class="line">-0.8 -1.6 -7.3 -6.7 4.4 -9.1 -9.0 1.6 0.3 -6.0 6.0 -0.8</span><br><span class="line">-0.8 -6.0 -4.9 -3.9 6.4 6.2 -4.2 -0.9 7.9 1.6 -8.2 -9.2</span><br><span class="line">7.8 -5.8 -5.8 -5.8 7.2 0.5 -7.9 1.2 -6.8 -9.1 0.3 -1.4</span><br><span class="line">4.3 -7.2 3.5 -6.4 -9.1 -6.0 3.5 -5.1 -5.6 -6.9 -9.1 -2.1</span><br><span class="line">-7.6 -7.1 0.7 -1.7 5.0 -9.0 1.4 -6.2 7.6 4.8 -7.5 4.0</span><br><span class="line">-0.2 0.3 -4.2 8.4 0.7 -6.4 -2.7 3.5 -0.9 3.7 0.9 -2.7</span><br><span class="line">7.1 0.1 8.4 -5.1 -7.9 -0.5 -5.3 -5.7 -4.6 9.6 -8.3 7.0</span><br><span class="line">9.6 -9.8 3.3 -9.9 -6.8 6.7 3.1 1.2 -9.5 -4.3 -1.7 -9.7</span><br><span class="line">1.8 5.0 8.3 -0.7 -0.9 3.2 2.5 0.5 7.3 8.3 0.3 0.9</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-4"><a href="#输出样例：-4" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1.2</span><br></pre></td></tr></table></figure>

<h2 id="答案-5"><a href="#答案-5" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> a[<span class="number">12</span>][<span class="number">12</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">double</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> b;</span><br><span class="line">    cin &gt;&gt; b;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">12</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">12</span>;j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">    <span class="type">int</span> c=<span class="number">0</span>;        </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">12</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;<span class="number">12</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum += a[i][j];</span><br><span class="line">            c++;</span><br><span class="line">        &#125;</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">if</span>(b == <span class="string">&#x27;S&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%.1lf&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">if</span>(b == <span class="string">&#x27;M&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%.1lf&quot;</span>,sum/c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="747-数组的左上半部分"><a href="#747-数组的左上半部分" class="headerlink" title="747. 数组的左上半部分"></a>747. 数组的左上半部分</h1><h2 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a>题目</h2><p>输入一个二维数组 M[12][12]M[12][12]，根据输入的要求，求出二维数组的左上半部分元素的平均值或元素的和。</p>
<p>左上半部分是指次对角线上方的部分，如下图所示，黄色部分为对角线，绿色部分为左上半部分：</p>
<p><img src="https://cdn.acwing.com/media/article/image/2019/05/03/19_0803f9d66d-UOJ_1185.png" alt="UOJ_1185.png"></p>
<h4 id="输入格式-6"><a href="#输入格式-6" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行输入一个大写字母，若为 <code>S</code>，则表示需要求出左上半部分的元素的和，若为 <code>M</code>，则表示需要求出左上半部分的元素的平均值。</p>
<p>接下来 1212 行，每行包含 1212 个用空格隔开的浮点数，表示这个二维数组，其中第 i+1i+1 行的第 j+1j+1 个数表示数组元素 M[i][j]M[i][j]。</p>
<h4 id="输出格式-6"><a href="#输出格式-6" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个数，表示所求的平均数或和的值，保留一位小数。</p>
<h4 id="数据范围-5"><a href="#数据范围-5" class="headerlink" title="数据范围"></a>数据范围</h4><p>−100.0≤M[i][j]≤100.0−100.0≤M[i][j]≤100.0</p>
<h4 id="输入样例：-5"><a href="#输入样例：-5" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">M</span><br><span class="line">-0.4 -7.7 8.8 1.9 -9.1 -8.8 4.4 -8.8 0.5 -5.8 1.3 -8.0</span><br><span class="line">-1.7 -4.6 -7.0 4.7 9.6 2.0 8.2 -6.4 2.2 2.3 7.3 -0.4</span><br><span class="line">-8.1 4.0 -6.9 8.1 6.2 2.5 -0.2 -6.2 -1.5 9.4 -9.8 -3.5</span><br><span class="line">-2.3 8.4 1.3 1.4 -7.7 1.3 -2.3 -0.1 -5.4 -7.6 2.5 -7.7</span><br><span class="line">6.2 -1.5 -6.9 -3.9 -7.9 5.1 -8.8 9.0 -7.4 -3.9 -2.7 0.9</span><br><span class="line">-6.8 0.8 -9.9 9.1 -3.7 -8.4 4.4 9.8 -6.3 -6.4 -3.7 2.8</span><br><span class="line">-3.8 5.0 -4.6 2.0 4.0 9.2 -8.9 0.5 -3.9 6.5 -4.3 -9.9</span><br><span class="line">-7.2 6.2 -1.2 4.1 -7.4 -4.6 4.7 -0.4 -2.2 -9.1 0.4 -5.8</span><br><span class="line">9.1 -6.4 9.2 0.7 10.0 -5.7 -9.7 -4.4 4.7 4.7 4.9 2.1</span><br><span class="line">-1.2 -6.2 -8.2 7.0 -5.3 4.9 5.5 7.2 3.4 3.2 -0.2 9.9</span><br><span class="line">-6.9 -6.2 5.1 8.5 7.1 -0.8 -0.7 2.7 -6.0 4.2 -8.2 -9.8</span><br><span class="line">-3.5 7.7 5.4 2.8 1.6 -1.0 6.1 7.7 -6.5 -8.3 -8.5 9.4</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-5"><a href="#输出样例：-5" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-0.8</span><br></pre></td></tr></table></figure>

<h2 id="答案-6"><a href="#答案-6" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> a[<span class="number">12</span>][<span class="number">12</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">double</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> b;</span><br><span class="line">    cin &gt;&gt; b;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">12</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">12</span>;j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">12</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">12</span>-i<span class="number">-1</span>;j++)</span><br><span class="line">            sum += a[i][j];</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">if</span>(b == <span class="string">&#x27;S&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%.1lf&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">if</span>(b == <span class="string">&#x27;M&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%.1lf&quot;</span>,sum/<span class="number">66</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="749-数组的上方区域"><a href="#749-数组的上方区域" class="headerlink" title="749. 数组的上方区域"></a>749. 数组的上方区域</h1><h2 id="题目-6"><a href="#题目-6" class="headerlink" title="题目"></a>题目</h2><p>输入一个二维数组 M[12][12]M[12][12]，根据输入的要求，求出二维数组的上方区域元素的平均值或元素的和。</p>
<p>数组的两条对角线将数组分为了上下左右四个部分，如下图所示，黄色部分为对角线，绿色部分为上方区域：</p>
<p><img src="https://cdn.acwing.com/media/article/image/2019/05/03/19_fb1e71426d-UOJ_1187.png" alt="UOJ_1187.png"></p>
<h4 id="输入格式-7"><a href="#输入格式-7" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行输入一个大写字母，若为 <code>S</code>，则表示需要求出上方区域的元素的和，若为 <code>M</code>，则表示需要求出上方区域的元素的平均值。</p>
<p>接下来 1212 行，每行包含 1212 个用空格隔开的浮点数，表示这个二维数组，其中第 i+1i+1 行的第 j+1j+1 个数表示数组元素 M[i][j]M[i][j]。</p>
<h4 id="输出格式-7"><a href="#输出格式-7" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个数，表示所求的平均数或和的值，保留一位小数。</p>
<p>输出结果与标准答案据对误差不超过 0.10.1 即视为正确。</p>
<h4 id="数据范围-6"><a href="#数据范围-6" class="headerlink" title="数据范围"></a>数据范围</h4><p>−100.0≤M[i][j]≤100.0−100.0≤M[i][j]≤100.0</p>
<h4 id="输入样例：-6"><a href="#输入样例：-6" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">S</span><br><span class="line">-4.8 -8.0 -2.9 6.7 -7.0 2.6 6.5 1.7 1.9 5.6 -1.6 -6.3</span><br><span class="line">-4.3 1.5 8.7 -0.3 5.4 -9.3 4.8 7.0 3.6 -8.3 -1.0 1.3</span><br><span class="line">-9.9 9.7 -6.3 5.8 2.9 2.9 -7.7 4.9 -0.6 7.2 6.4 7.7</span><br><span class="line">2.8 -5.8 -0.0 2.2 4.0 7.7 -3.0 -7.5 -3.5 9.7 -4.3 -8.6</span><br><span class="line">-1.8 -0.1 5.4 0.6 9.9 -3.7 -1.1 0.8 -0.2 -0.0 9.9 4.5</span><br><span class="line">3.0 -3.9 2.1 -9.7 5.5 9.4 -4.6 3.3 -9.6 5.1 -4.5 1.5</span><br><span class="line">4.3 -5.4 -7.9 9.2 -7.7 -9.6 -1.5 -1.6 -7.2 2.0 -3.7 -0.7</span><br><span class="line">8.0 2.8 -4.1 7.1 8.4 -5.6 3.9 -9.7 -1.1 3.0 -8.5 -3.3</span><br><span class="line">1.7 5.1 0.1 9.2 4.5 9.7 7.2 8.6 8.7 1.1 6.7 0.3</span><br><span class="line">-3.6 -7.1 -8.9 7.1 -5.9 1.6 -7.4 6.7 3.9 4.3 -2.4 -3.7</span><br><span class="line">8.9 -6.2 5.0 -8.6 -1.3 -8.8 2.6 8.9 5.5 9.0 -2.2 -4.4</span><br><span class="line">5.7 3.7 1.8 -2.1 -7.3 -7.9 4.7 6.0 3.3 -2.8 1.4 -6.9</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-6"><a href="#输出样例：-6" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">21.7</span><br></pre></td></tr></table></figure>

<h2 id="答案-7"><a href="#答案-7" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> a[<span class="number">12</span>][<span class="number">12</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">double</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> b;</span><br><span class="line">    cin &gt;&gt; b;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">12</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">12</span>;j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;<span class="number">12</span>-i<span class="number">-1</span>;j++)</span><br><span class="line">            sum += a[i][j];</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">if</span>(b == <span class="string">&#x27;S&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%.1lf&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">if</span>(b == <span class="string">&#x27;M&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%.1lf&quot;</span>,sum/<span class="number">30</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="751-数组的左方区域"><a href="#751-数组的左方区域" class="headerlink" title="751. 数组的左方区域"></a>751. 数组的左方区域</h1><h2 id="题目-7"><a href="#题目-7" class="headerlink" title="题目"></a>题目</h2><p>输入一个二维数组 M[12][12]M[12][12]，根据输入的要求，求出二维数组的左方区域元素的平均值或元素的和。</p>
<p>数组的两条对角线将数组分为了上下左右四个部分，如下图所示，黄色部分为对角线，绿色部分为左方区域：</p>
<p><img src="https://cdn.acwing.com/media/article/image/2019/05/03/19_4750e19a6d-UOJ_1189.png" alt="UOJ_1189.png"></p>
<h4 id="输入格式-8"><a href="#输入格式-8" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行输入一个大写字母，若为 <code>S</code>，则表示需要求出左方区域的元素的和，若为 <code>M</code>，则表示需要求出左方区域的元素的平均值。</p>
<p>接下来 1212 行，每行包含 1212 个用空格隔开的浮点数，表示这个二维数组，其中第 i+1i+1 行的第 j+1j+1 个数表示数组元素 M[i][j]M[i][j]。</p>
<h4 id="输出格式-8"><a href="#输出格式-8" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个数，表示所求的平均数或和的值，保留一位小数。</p>
<h4 id="数据范围-7"><a href="#数据范围-7" class="headerlink" title="数据范围"></a>数据范围</h4><p>−100.0≤M[i][j]≤100.0−100.0≤M[i][j]≤100.0</p>
<h4 id="输入样例：-7"><a href="#输入样例：-7" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">S</span><br><span class="line">4.7 -3.3 -2.3 4.5 -7.0 8.7 -4.1 -3.0 -7.6 6.3 -6.6 -4.7</span><br><span class="line">-7.2 9.3 -7.6 9.1 9.2 9.0 5.5 -7.5 -9.3 -1.6 -3.5 -4.2</span><br><span class="line">0.5 -7.5 -8.3 -9.0 -6.4 3.8 0.1 -3.5 7.9 2.1 2.4 -6.2</span><br><span class="line">7.0 5.7 -9.0 -5.8 1.6 2.6 -9.2 -6.2 4.6 8.2 -8.3 -1.4</span><br><span class="line">3.8 -9.9 6.2 -2.5 -3.5 9.4 1.6 7.0 3.3 -0.5 6.7 6.0</span><br><span class="line">1.6 -3.8 5.0 8.8 4.2 7.7 0.7 7.4 7.9 -5.9 4.4 3.3</span><br><span class="line">3.7 6.2 6.7 -1.4 6.1 -6.0 8.5 9.1 5.7 -4.2 5.9 -3.5</span><br><span class="line">5.0 0.3 2.2 -3.6 6.3 -10.0 9.5 -4.7 2.7 8.1 7.5 -8.4</span><br><span class="line">-5.7 -0.3 -3.7 -3.3 7.7 9.3 -1.3 1.0 0.3 1.9 9.9 9.0</span><br><span class="line">-7.4 1.3 -9.6 -3.6 2.2 3.4 -3.6 3.5 8.3 0.5 9.7 -6.8</span><br><span class="line">1.0 -2.7 -1.5 5.4 -6.5 -3.7 5.6 8.0 -9.9 0.1 2.2 7.6</span><br><span class="line">5.6 4.3 1.5 -0.8 5.8 -5.1 5.5 6.2 -5.8 8.8 -0.6 -2.3</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-7"><a href="#输出样例：-7" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">13.3</span><br></pre></td></tr></table></figure>

<h2 id="答案-8"><a href="#答案-8" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> a[<span class="number">12</span>][<span class="number">12</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">double</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> b;</span><br><span class="line">    cin &gt;&gt; b;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">12</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">12</span>;j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">    <span class="type">int</span> c=<span class="number">1</span>;       </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++)&#123;</span><br><span class="line">        <span class="type">int</span> t=i;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">5</span>)&#123;</span><br><span class="line">            t=t-c;</span><br><span class="line">            c += <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;t;j++)</span><br><span class="line">           sum += a[i][j];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(b == <span class="string">&#x27;S&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%.1lf&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">if</span>(b == <span class="string">&#x27;M&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%.1lf&quot;</span>,sum/<span class="number">30</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="753-平方矩阵-I"><a href="#753-平方矩阵-I" class="headerlink" title="*753. 平方矩阵 I"></a>*753. 平方矩阵 I</h1><h2 id="题目-8"><a href="#题目-8" class="headerlink" title="题目"></a>题目</h2><p>输入整数 N，输出一个 N 阶的回字形二维数组。</p>
<p>数组的最外层为 1，次外层为 2，以此类推。</p>
<h4 id="输入格式-9"><a href="#输入格式-9" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入包含多行，每行包含一个整数 N。</p>
<p>当输入行为 N&#x3D;0 时，表示输入结束，且该行无需作任何处理。</p>
<h4 id="输出格式-9"><a href="#输出格式-9" class="headerlink" title="输出格式"></a>输出格式</h4><p>对于每个输入整数 N，输出一个满足要求的 N 阶二维数组。</p>
<p>每个数组占 N 行，每行包含 N 个用空格隔开的整数。</p>
<p>每个数组输出完毕后，输出一个空行。</p>
<h4 id="数据范围-8"><a href="#数据范围-8" class="headerlink" title="数据范围"></a>数据范围</h4><p>0≤N≤100</p>
<h4 id="输入样例：-8"><a href="#输入样例：-8" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">0</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-8"><a href="#输出样例：-8" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line"></span><br><span class="line">1 1</span><br><span class="line">1 1</span><br><span class="line"></span><br><span class="line">1 1 1</span><br><span class="line">1 2 1</span><br><span class="line">1 1 1</span><br><span class="line"></span><br><span class="line">1 1 1 1</span><br><span class="line">1 2 2 1</span><br><span class="line">1 2 2 1</span><br><span class="line">1 1 1 1</span><br><span class="line"></span><br><span class="line">1 1 1 1 1</span><br><span class="line">1 2 2 2 1</span><br><span class="line">1 2 3 2 1</span><br><span class="line">1 2 2 2 1</span><br><span class="line">1 1 1 1 1</span><br></pre></td></tr></table></figure>

<h2 id="答案-9"><a href="#答案-9" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; n,n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">                <span class="type">int</span> up=i,down=n-i+<span class="number">1</span>,left=j,right=n-j+<span class="number">1</span>;<span class="comment">//到上下左右的最小距离</span></span><br><span class="line">                cout &lt;&lt; <span class="built_in">min</span>(<span class="built_in">min</span>(up,down),<span class="built_in">min</span>(left,right)) &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">            &#125;cout &lt;&lt; endl;</span><br><span class="line">        &#125;cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="740-数组变换"><a href="#740-数组变换" class="headerlink" title="740. 数组变换"></a>740. 数组变换</h1><h2 id="题目-9"><a href="#题目-9" class="headerlink" title="题目"></a>题目</h2><p>输入一个长度为 20  的整数数组 N，将整个数组翻转，使得第一个元素成为倒数第一个元素，第二个元素成为倒数第二个元素，…，倒数第二个元素成为第二个元素，倒数第一个元素成为第一个元素。</p>
<p>输出翻转后的数组。</p>
<h4 id="输入格式-10"><a href="#输入格式-10" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入包含 20 个整数，每个数占一行。</p>
<h4 id="输出格式-10"><a href="#输出格式-10" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出新数组中的所有元素，每个元素占一行。</p>
<p>输出格式为 <code>N[i] = x</code>，其中 i 为元素编号（从 0 开始） ，x 为元素的值。</p>
<h4 id="数据范围-9"><a href="#数据范围-9" class="headerlink" title="数据范围"></a>数据范围</h4><p>−100≤N[i]≤100 </p>
<h4 id="输入样例：-9"><a href="#输入样例：-9" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0</span><br><span class="line">-5</span><br><span class="line">...</span><br><span class="line">63</span><br><span class="line">23</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-9"><a href="#输出样例：-9" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">N[0] = 23</span><br><span class="line">N[1] = 63</span><br><span class="line">...</span><br><span class="line">N[18] = -5</span><br><span class="line">N[19] = 0</span><br></pre></td></tr></table></figure>

<h2 id="答案-10"><a href="#答案-10" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">20</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> b[<span class="number">20</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)&#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> t=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)&#123;</span><br><span class="line">        b[i]=a[<span class="number">19</span>-t];</span><br><span class="line">        t++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;N[%d] = %d\n&quot;</span>,i,b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="741-斐波那契数列"><a href="#741-斐波那契数列" class="headerlink" title="741. 斐波那契数列"></a>741. 斐波那契数列</h1><h2 id="题目-10"><a href="#题目-10" class="headerlink" title="题目"></a>题目</h2><p>输入整数 N，求出斐波那契数列中的第 N 项是多少。</p>
<p>斐波那契数列的第 0 项是 0，第 1 项是 1，从第 2 项开始的每一项都等于前两项之和。</p>
<h4 id="输入格式-11"><a href="#输入格式-11" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含整数 T，表示共 有 T 个测试数据。</p>
<p>接下来 T 行，每行包含一个整数 N。</p>
<h4 id="输出格式-11"><a href="#输出格式-11" class="headerlink" title="输出格式"></a>输出格式</h4><p>每个测试数据输出一个结果，每个结果占一行，</p>
<p>结果格式为 <code>Fib(N) = x</code>，其中 N 为项数， x 为第 N 项的值。</p>
<h4 id="数据范围-10"><a href="#数据范围-10" class="headerlink" title="数据范围"></a>数据范围</h4><p>0≤N≤60 </p>
<h4 id="输入样例：-10"><a href="#输入样例：-10" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">0</span><br><span class="line">4</span><br><span class="line">2</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-10"><a href="#输出样例：-10" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Fib(0) = 0</span><br><span class="line">Fib(4) = 3</span><br><span class="line">Fib(2) = 1</span><br></pre></td></tr></table></figure>

<h2 id="答案-11"><a href="#答案-11" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,t;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> a[<span class="number">60</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> m=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; m,n--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(m==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;Fib(0) = 0\n&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;<span class="number">60</span>;i++)&#123;</span><br><span class="line">            a[i]=a[i<span class="number">-1</span>]+a[i<span class="number">-2</span>];</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(a[m]==a[i]) <span class="built_in">printf</span>(<span class="string">&quot;Fib(%d) = %lld\n&quot;</span>,m,a[m]);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="742-最小数和它的位置"><a href="#742-最小数和它的位置" class="headerlink" title="742. 最小数和它的位置"></a>742. 最小数和它的位置</h1><h2 id="题目-11"><a href="#题目-11" class="headerlink" title="题目"></a>题目</h2><p>输入一个整数 N 和一个长度为 N 的整数数组 X。</p>
<p>请你找到数组中最小的元素，并输出它的值和下标。</p>
<p>注意，如果有多个最小值，则返回下标最小的那个。</p>
<h4 id="输入格式-12"><a href="#输入格式-12" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含整数 N。</p>
<p>第二行包含 N 个用空格隔开的整数 X[i]。</p>
<h4 id="输出格式-12"><a href="#输出格式-12" class="headerlink" title="输出格式"></a>输出格式</h4><p>第一行输出 <code>Minimum value: x</code>，其中 xx 为数组元素最小值。</p>
<p>第二行输出 <code>Position: y</code>，其中 y 为最小值元素的下标（下标从 0 开始计数）。</p>
<h4 id="数据范围-11"><a href="#数据范围-11" class="headerlink" title="数据范围"></a>数据范围</h4><p>1&lt;N≤1000 ，<br>−1000≤X[i]≤1000 </p>
<h4 id="输入样例：-11"><a href="#输入样例：-11" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line">1 2 3 4 -5 6 7 8 9 10</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-11"><a href="#输出样例：-11" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Minimum value: -5</span><br><span class="line">Position: 4</span><br></pre></td></tr></table></figure>

<h2 id="答案-12"><a href="#答案-12" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> a[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&lt;a[k])&#123;</span><br><span class="line">            k=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Minimum value: %d\nPosition: %d&quot;</span>,a[k],k);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="744-数组中的列"><a href="#744-数组中的列" class="headerlink" title="744. 数组中的列"></a>744. 数组中的列</h1><h2 id="题目-12"><a href="#题目-12" class="headerlink" title="题目"></a>题目</h2><p>输入一个二维数组 M[12][12]M[12][12]，根据输入的要求，求出二维数组中某一列的元素的平均值或元素的和。</p>
<h4 id="输入格式-13"><a href="#输入格式-13" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行输入整数 C，表示所求的具体列数（列数从 0 开始计数）。</p>
<p>第二行包含一个大写字母，若为 <code>S</code>，则表示需要求出第 CC 列的元素的和，若为 <code>M</code>，则表示需要求出第 CC 列的元素的平均值。</p>
<p>接下来 12 行，每行包含 12 个用空格隔开的浮点数，表示这个二维数组，其中第 i+1 行的第 j+1 个数表示数组元素 M[i][j]M[i][j]。</p>
<h4 id="输出格式-13"><a href="#输出格式-13" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个数，表示所求的平均数或元素的和的值，保留一位小数。</p>
<h4 id="数据范围-12"><a href="#数据范围-12" class="headerlink" title="数据范围"></a>数据范围</h4><p>−100.0≤M[i][j]≤100.0 </p>
<h4 id="输入样例：-12"><a href="#输入样例：-12" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">S</span><br><span class="line">-9.0 -2.4 -3.3 2.4 -9.7 -5.7 -5.3 6.5 -7.3 4.8 -4.1 3.9</span><br><span class="line">1.6 -0.9 9.2 -7.5 1.0 -8.0 -4.1 -4.0 -0.1 -9.0 8.4 4.9</span><br><span class="line">-8.2 -0.3 -5.1 -5.6 6.6 0.9 -1.0 -5.4 -2.1 -4.5 -8.7 -1.1</span><br><span class="line">-4.2 6.5 -8.2 3.6 -4.6 -9.2 -1.7 6.9 -9.0 -9.8 7.7 -3.4</span><br><span class="line">-8.0 5.7 4.8 0.3 -1.4 2.8 -6.3 9.3 0.3 6.3 1.5 -1.7</span><br><span class="line">1.7 -0.0 9.7 -6.6 1.3 -2.0 -6.1 2.0 -7.8 -4.7 -9.1 6.0</span><br><span class="line">-8.2 -1.7 9.4 -1.2 -1.0 -9.0 -7.0 -6.9 -1.6 -6.8 -6.7 1.8</span><br><span class="line">4.8 1.3 -6.1 -0.6 0.5 -2.9 -6.8 1.5 5.8 3.2 0.0 7.7</span><br><span class="line">6.3 1.1 4.7 7.3 7.6 5.6 0.9 9.2 1.3 -4.9 7.8 -4.9</span><br><span class="line">0.5 3.5 -5.0 9.0 8.8 8.7 7.5 7.5 -9.6 -6.9 -1.6 6.9</span><br><span class="line">7.8 5.6 -6.4 3.6 2.3 0.5 4.1 6.1 8.6 -9.3 2.2 -0.4</span><br><span class="line">9.9 0.9 6.4 -2.8 -4.2 -7.6 0.6 9.6 3.0 0.9 5.1 4.5</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-12"><a href="#输出样例：-12" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">19.3</span><br></pre></td></tr></table></figure>

<h2 id="答案-13"><a href="#答案-13" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">double</span> a[<span class="number">12</span>][<span class="number">12</span>]; </span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; c;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">12</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">12</span>;j++)</span><br><span class="line">        cin &gt;&gt; a[i][j];</span><br><span class="line">     </span><br><span class="line">    <span class="type">double</span> sum=<span class="number">0</span>;   </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">12</span>;i++)&#123;</span><br><span class="line">      sum += a[i][n];  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(c==<span class="string">&#x27;S&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%.1lf&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">if</span>(c==<span class="string">&#x27;M&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%.1lf&quot;</span>,sum/<span class="number">12</span>);</span><br><span class="line">        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="748-数组的右下半部分"><a href="#748-数组的右下半部分" class="headerlink" title="748. 数组的右下半部分"></a>748. 数组的右下半部分</h1><h2 id="题目-13"><a href="#题目-13" class="headerlink" title="题目"></a>题目</h2><p>输入一个二维数组 M[12][12] ，根据输入的要求，求出二维数组的右下半部分元素的平均值或元素的和。</p>
<p>右下半部分是指次对角线下方的部分，如下图所示，黄色部分为对角线，绿色部分为右下半部分：</p>
<p><img src="https://cdn.acwing.com/media/article/image/2019/05/03/19_fde98b8e6d-UOJ_1186.png" alt="UOJ_1186.png"></p>
<h4 id="输入格式-14"><a href="#输入格式-14" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行输入一个大写字母，若为 <code>S</code>，则表示需要求出右下半部分的元素的和，若为 <code>M</code>，则表示需要求出右下半部分的元素的平均值。</p>
<p>接下来 12 行，每行包含 12 个用空格隔开的浮点数，表示这个二维数组，其中第 i+1 行的第 j+1个数表示数组元素 M[i][j] 。</p>
<h4 id="输出格式-14"><a href="#输出格式-14" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个数，表示所求的平均数或和的值，保留一位小数。</p>
<h4 id="数据范围-13"><a href="#数据范围-13" class="headerlink" title="数据范围"></a>数据范围</h4><p>−100.0≤M[i][j]≤100.0 </p>
<h4 id="输入样例：-13"><a href="#输入样例：-13" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">S</span><br><span class="line">9.7 -4.9 6.1 -6.1 -9.6 1.0 -3.2 0.6 3.2 -9.8 4.9 1.2</span><br><span class="line">-2.8 -5.3 2.8 -1.9 -5.4 7.5 -2.0 5.7 2.3 5.3 -7.5 8.9</span><br><span class="line">6.0 4.3 3.8 -6.7 8.1 -0.5 7.8 -2.2 -1.0 4.0 -4.9 -9.4</span><br><span class="line">5.4 3.7 -6.5 -3.9 -3.3 4.1 -2.5 -4.7 8.2 1.4 1.8 4.7</span><br><span class="line">2.4 9.0 -4.3 9.6 8.6 -6.1 -7.4 8.6 5.6 0.5 -0.4 5.2</span><br><span class="line">-5.2 2.9 -5.6 4.0 -0.2 3.8 -4.1 -1.6 -3.8 -3.1 -1.1 3.3</span><br><span class="line">-9.4 -1.4 0.6 6.5 -4.3 -8.3 6.1 2.9 -5.2 2.5 9.8 -7.7</span><br><span class="line">-2.9 -3.6 7.9 -5.8 -4.7 8.2 -6.2 1.0 7.4 -1.0 -4.4 -4.5</span><br><span class="line">0.1 9.5 4.9 1.5 0.8 -8.2 0.4 9.5 -0.8 -0.9 9.7 -2.1</span><br><span class="line">0.1 -7.6 7.8 -6.9 5.5 1.4 4.0 7.8 1.0 -1.2 9.7 -1.9</span><br><span class="line">-4.6 2.3 -5.5 8.2 -4.8 -3.7 5.4 0.2 -2.4 -0.8 7.4 0.0</span><br><span class="line">-0.1 8.2 0.8 -3.5 -7.6 -0.5 5.6 8.4 -8.6 0.9 9.0 -7.5</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-13"><a href="#输出样例：-13" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">53.0</span><br></pre></td></tr></table></figure>

<h2 id="答案-14"><a href="#答案-14" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> a[<span class="number">12</span>][<span class="number">12</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">double</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> b;</span><br><span class="line">    cin &gt;&gt; b;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">12</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">12</span>;j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">    <span class="type">int</span> c=<span class="number">0</span>;       </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;<span class="number">12</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">12</span>-i;j&lt;<span class="number">12</span>;j++)&#123;</span><br><span class="line">            sum += a[i][j];</span><br><span class="line">            c++;</span><br><span class="line">        &#125;</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">if</span>(b == <span class="string">&#x27;S&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%.1lf&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">if</span>(b == <span class="string">&#x27;M&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%.1lf&quot;</span>,sum/c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="746-数组的左下半部分"><a href="#746-数组的左下半部分" class="headerlink" title="746. 数组的左下半部分"></a>746. 数组的左下半部分</h1><h2 id="题目-14"><a href="#题目-14" class="headerlink" title="题目"></a>题目</h2><p>输入一个二维数组 M[12][12] ，根据输入的要求，求出二维数组的左下半部分元素的平均值或元素的和。</p>
<p>左下半部分是指主对角线下方的部分，如下图所示，黄色部分为对角线，绿色部分为左下半部分：</p>
<p><img src="https://cdn.acwing.com/media/article/image/2019/05/03/19_5f9eed246d-UOJ_1184.png" alt="UOJ_1184.png"></p>
<h4 id="输入格式-15"><a href="#输入格式-15" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行输入一个大写字母，若为 <code>S</code>，则表示需要求出左下半部分的元素的和，若为 <code>M</code>，则表示需要求出左下半部分的元素的平均值。</p>
<p>接下来 12 行，每行包含 12 个用空格隔开的浮点数，表示这个二维数组，其中第 i+1 行的第 j+1 个数表示数组元素 M[i][j]。</p>
<h4 id="输出格式-15"><a href="#输出格式-15" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个数，表示所求的平均数或和的值，保留一位小数。</p>
<h4 id="数据范围-14"><a href="#数据范围-14" class="headerlink" title="数据范围"></a>数据范围</h4><p>−100.0≤M[i][j]≤100.0 输入样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">S</span><br><span class="line">8.7 5.6 -2.0 -2.1 -7.9 -9.0 -6.4 1.7 2.9 -2.3 8.4 4.0</span><br><span class="line">-7.3 -2.1 0.6 -9.8 9.6 5.6 -1.3 -3.8 -9.3 -8.0 -2.0 2.9</span><br><span class="line">-4.9 -0.5 -5.5 -0.2 -4.4 -6.1 7.6 6.9 -8.0 6.8 9.1 -8.5</span><br><span class="line">-1.3 5.5 4.6 6.6 8.1 7.9 -9.3 9.6 4.6 0.9 -3.5 -4.3</span><br><span class="line">-7.0 -1.2 7.0 7.1 -5.7 7.8 -2.3 4.3 0.2 -0.4 -6.6 7.6</span><br><span class="line">-3.2 -5.4 -4.7 4.7 3.6 8.8 5.1 -3.1 -2.9 2.8 -4.3 -1.4</span><br><span class="line">-1.8 -3.3 -5.6 1.8 8.3 -0.5 2.0 -3.9 -1.0 -8.6 8.0 -3.3</span><br><span class="line">-2.5 -9.8 9.2 -0.8 -9.4 -0.5 1.6 1.5 3.4 -0.1 7.0 -6.2</span><br><span class="line">-1.0 4.9 2.2 -8.7 -0.9 4.8 2.3 2.0 -3.2 -7.5 -4.0 9.9</span><br><span class="line">-1.1 -2.9 8.7 3.6 7.4 7.8 10.0 -9.0 1.6 8.3 6.3 -5.8</span><br><span class="line">-9.9 0.6 2.0 -3.8 -6.3 0.6 7.3 3.8 -7.1 9.5 2.2 1.3</span><br><span class="line">-2.8 -9.1 7.1 -0.2 0.6 -6.5 1.1 -0.1 -3.6 4.0 -5.4 1.1</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-14"><a href="#输出样例：-14" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-2.8</span><br></pre></td></tr></table></figure>

<h2 id="答案-15"><a href="#答案-15" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> a[<span class="number">12</span>][<span class="number">12</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">double</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> b;</span><br><span class="line">    cin &gt;&gt; b;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">12</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">12</span>;j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">    <span class="type">int</span> c=<span class="number">0</span>;       </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;<span class="number">12</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=i<span class="number">-1</span>;j++)&#123;</span><br><span class="line">            sum += a[i][j];</span><br><span class="line">            c++;</span><br><span class="line">        &#125;</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">if</span>(b == <span class="string">&#x27;S&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%.1lf&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">if</span>(b == <span class="string">&#x27;M&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%.1lf&quot;</span>,sum/c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="750-数组的下方区域"><a href="#750-数组的下方区域" class="headerlink" title="750. 数组的下方区域"></a>750. 数组的下方区域</h1><h2 id="题目-15"><a href="#题目-15" class="headerlink" title="题目"></a>题目</h2><p>输入一个二维数组 M[12][12] ，根据输入的要求，求出二维数组的下方区域元素的平均值或元素的和。</p>
<p>数组的两条对角线将数组分为了上下左右四个部分，如下图所示，黄色部分为对角线，绿色部分为下方区域：</p>
<p><img src="https://cdn.acwing.com/media/article/image/2019/05/03/19_eaad51506d-UOJ_1188.png" alt="UOJ_1188.png"></p>
<h4 id="输入格式-16"><a href="#输入格式-16" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行输入一个大写字母，若为 <code>S</code>，则表示需要求出下方区域的元素的和，若为 <code>M</code>，则表示需要求出下方区域的元素的平均值。</p>
<p>接下来 12 行，每行包含 12 个用空格隔开的浮点数，表示这个二维数组，其中第 i+1 行的第 j+1 个数表示数组元素 M[i][j] 。</p>
<h4 id="输出格式-16"><a href="#输出格式-16" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个数，表示所求的平均数或和的值，保留一位小数。</p>
<h4 id="数据范围-15"><a href="#数据范围-15" class="headerlink" title="数据范围"></a>数据范围</h4><p>−100.0≤M[i][j]≤100.0 </p>
<h4 id="输入样例：-14"><a href="#输入样例：-14" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">S</span><br><span class="line">-6.0 0.7 -8.4 -5.7 -4.1 7.6 9.5 -9.7 4.1 0.6 -6.5 -4.9</span><br><span class="line">6.6 4.9 -3.1 5.3 0.3 -4.5 3.9 -1.5 6.6 7.0 5.1 2.5</span><br><span class="line">-8.5 1.8 -2.7 0.1 -4.9 -7.2 4.3 6.0 -1.4 2.7 -3.0 2.0</span><br><span class="line">4.8 -7.0 -1.3 0.8 1.0 4.5 -1.1 -2.9 -3.9 -3.9 -8.9 5.8</span><br><span class="line">-2.1 -9.6 5.1 0.2 1.0 -1.7 6.4 4.1 2.8 -6.9 2.4 9.3</span><br><span class="line">-6.0 -9.1 -7.0 -7.0 7.8 5.1 6.9 -7.6 0.4 -7.2 5.5 6.0</span><br><span class="line">-1.9 5.5 1.9 -8.5 -5.3 2.3 -9.3 2.0 -0.2 1.2 5.6 -1.8</span><br><span class="line">8.2 2.3 3.5 1.4 4.0 -5.1 -6.9 -2.8 1.7 -7.0 7.8 1.8</span><br><span class="line">-6.0 -4.1 -4.6 -9.4 -4.9 -4.1 4.2 6.3 -2.8 8.7 8.1 -0.9</span><br><span class="line">8.8 -6.5 -4.3 6.1 -6.2 -3.9 -7.0 7.3 5.0 -0.9 -0.0 5.6</span><br><span class="line">-2.4 1.4 8.5 -2.2 0.9 5.3 3.6 8.8 -8.1 3.0 -3.1 6.5</span><br><span class="line">-3.8 -6.4 2.3 4.2 -9.8 -0.3 -9.9 -7.4 3.5 1.5 -0.2 7.0</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-15"><a href="#输出样例：-15" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-11.9</span><br></pre></td></tr></table></figure>

<h2 id="答案-16"><a href="#答案-16" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> a[<span class="number">12</span>][<span class="number">12</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">double</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> b;</span><br><span class="line">    cin &gt;&gt; b;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">12</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">12</span>;j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">7</span>;i&lt;<span class="number">12</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">12</span>-i;j&lt;=i<span class="number">-1</span>;j++)</span><br><span class="line">            sum += a[i][j];</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">if</span>(b == <span class="string">&#x27;S&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%.1lf&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">if</span>(b == <span class="string">&#x27;M&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%.1lf&quot;</span>,sum/<span class="number">30</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="752-数组的右方区域"><a href="#752-数组的右方区域" class="headerlink" title="752. 数组的右方区域"></a>752. 数组的右方区域</h1><h2 id="题目-16"><a href="#题目-16" class="headerlink" title="题目"></a>题目</h2><p>输入一个二维数组 M[12][12] ，根据输入的要求，求出二维数组的右方区域元素的平均值或元素的和。</p>
<p>数组的两条对角线将数组分为了上下左右四个部分，如下图所示，黄色部分为对角线，绿色部分为右方区域：</p>
<p><img src="https://cdn.acwing.com/media/article/image/2019/05/03/19_c833ee0a6d-UOJ_1190.png" alt="UOJ_1190.png"></p>
<h4 id="输入格式-17"><a href="#输入格式-17" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行输入一个大写字母，若为 <code>S</code>，则表示需要求出右方区域的元素的和，若为 <code>M</code>，则表示需要求出右方区域的元素的平均值。</p>
<p>接下来 12 行，每行包含 12 个用空格隔开的浮点数，表示这个二维数组，其中第 i+1 行的第 j+1 个数表示数组元素 M[i][j]。</p>
<h4 id="输出格式-17"><a href="#输出格式-17" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个数，表示所求的平均数或和的值，保留一位小数。</p>
<h4 id="数据范围-16"><a href="#数据范围-16" class="headerlink" title="数据范围"></a>数据范围</h4><p>−100.0≤M[i][j]≤100.0 </p>
<h4 id="输入样例：-15"><a href="#输入样例：-15" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">S</span><br><span class="line">2.4 7.8 9.4 -5.6 6.9 -4.9 4.8 0.8 3.6 1.7 -1.4 9.7</span><br><span class="line">-6.8 -3.7 -2.0 -4.9 -4.5 -5.3 6.1 7.5 -4.3 5.9 -9.5 9.7</span><br><span class="line">-6.5 -0.4 1.6 3.7 -4.4 -3.3 1.9 7.7 -1.4 4.5 7.4 -3.0</span><br><span class="line">-1.2 0.4 9.8 9.8 -4.3 -1.3 -1.6 0.5 2.8 -4.0 8.5 3.9</span><br><span class="line">0.2 -2.0 -6.4 -9.8 3.7 -2.0 1.7 -3.6 -3.4 2.4 -1.2 -3.9</span><br><span class="line">-8.3 5.8 -1.0 -4.4 1.0 -2.4 2.8 -4.6 2.1 8.7 -6.8 -8.3</span><br><span class="line">6.3 -6.8 -7.0 9.3 -7.7 -1.7 8.2 -6.5 -1.8 6.7 8.2 4.4</span><br><span class="line">0.4 8.6 -1.2 8.6 -4.6 1.8 9.6 1.6 2.0 -1.0 3.9 -9.2</span><br><span class="line">7.5 -3.1 6.2 -4.5 -3.0 2.5 -7.7 2.9 0.3 3.3 -2.7 3.4</span><br><span class="line">-5.0 3.0 -0.0 4.3 9.5 -0.0 -9.9 -8.6 -0.9 -5.5 7.7 6.5</span><br><span class="line">4.9 -9.6 -2.9 8.5 2.0 -9.9 -4.9 -1.5 -2.4 -7.6 1.7 8.5</span><br><span class="line">-6.4 6.8 -3.7 -4.7 0.2 5.8 -5.4 0.6 7.0 -4.2 -7.5 -2.4</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-16"><a href="#输出样例：-16" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">40.9</span><br></pre></td></tr></table></figure>

<h2 id="答案-17"><a href="#答案-17" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> a[<span class="number">12</span>][<span class="number">12</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">double</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> b;</span><br><span class="line">    cin &gt;&gt; b;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">12</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">12</span>;j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;<span class="number">11</span>;i++)</span><br><span class="line">    <span class="keyword">if</span>(i&lt;<span class="number">6</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">12</span>-i;j&lt;<span class="number">12</span>;j++)</span><br><span class="line">            sum += a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;<span class="number">12</span>;j++)</span><br><span class="line">            sum += a[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">    <span class="keyword">if</span>(b == <span class="string">&#x27;S&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%.1lf&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">if</span>(b == <span class="string">&#x27;M&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;%.1lf&quot;</span>,sum/<span class="number">30</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="754-平方矩阵-II"><a href="#754-平方矩阵-II" class="headerlink" title="*754. 平方矩阵 II"></a>*754. 平方矩阵 II</h1><h2 id="题目-17"><a href="#题目-17" class="headerlink" title="题目"></a>题目</h2><p>输入整数 N，输出一个 N 阶的二维数组。</p>
<p>数组的形式参照样例。</p>
<h4 id="输入格式-18"><a href="#输入格式-18" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入包含多行，每行包含一个整数 N。</p>
<p>当输入行为 N&#x3D;0时，表示输入结束，且该行无需作任何处理。</p>
<h4 id="输出格式-18"><a href="#输出格式-18" class="headerlink" title="输出格式"></a>输出格式</h4><p>对于每个输入整数  N，输出一个满足要求的 N  阶二维数组。</p>
<p>每个数组占  N 行，每行包含 N  个用空格隔开的整数。</p>
<p>每个数组输出完毕后，输出一个空行。</p>
<h4 id="数据范围-17"><a href="#数据范围-17" class="headerlink" title="数据范围"></a>数据范围</h4><p>0≤N≤100 </p>
<h4 id="输入样例：-16"><a href="#输入样例：-16" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">0</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-17"><a href="#输出样例：-17" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line"></span><br><span class="line">1 2</span><br><span class="line">2 1</span><br><span class="line"></span><br><span class="line">1 2 3</span><br><span class="line">2 1 2</span><br><span class="line">3 2 1</span><br><span class="line"></span><br><span class="line">1 2 3 4</span><br><span class="line">2 1 2 3</span><br><span class="line">3 2 1 2</span><br><span class="line">4 3 2 1</span><br><span class="line"></span><br><span class="line">1 2 3 4 5</span><br><span class="line">2 1 2 3 4</span><br><span class="line">3 2 1 2 3</span><br><span class="line">4 3 2 1 2</span><br><span class="line">5 4 3 2 1</span><br></pre></td></tr></table></figure>

<h2 id="答案-18"><a href="#答案-18" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">100</span>][<span class="number">100</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; n,n)&#123; </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            a[i][i]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>,k=<span class="number">2</span>;j&lt;n;j++,k++) a[i][j]=k;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>,k=<span class="number">2</span>;j&lt;n;j++,k++) a[j][i]=k;<span class="comment">//关于1对称，交换一下i和j就可以了</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">                cout &lt;&lt; a[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;cout &lt;&lt; endl;</span><br><span class="line">        &#125;cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>​	也有一个规律i-j的绝对值加1就是每一个数</li>
</ul>
<h1 id="755-平方矩阵-III"><a href="#755-平方矩阵-III" class="headerlink" title="755.平方矩阵 III"></a>755.平方矩阵 III</h1><h2 id="题目-18"><a href="#题目-18" class="headerlink" title="题目"></a>题目</h2><p>输入整数 N，输出一个 N 阶的二维数组 M。</p>
<p>这个 N 阶二维数组满足 M[i][j]&#x3D;2i+j 。</p>
<p>具体形式可参考样例。</p>
<h4 id="输入格式-19"><a href="#输入格式-19" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入包含多行，每行包含一个整数 N。</p>
<p>当输入行为 N&#x3D;0 时，表示输入结束，且该行无需作任何处理。</p>
<h4 id="输出格式-19"><a href="#输出格式-19" class="headerlink" title="输出格式"></a>输出格式</h4><p>对于每个输入整数 N，输出一个满足要求的 N 阶二维数组。</p>
<p>每个数组占 N 行，每行包含 N 个用空格隔开的整数。</p>
<p>每个数组输出完毕后，输出一个空行。</p>
<h4 id="数据范围-18"><a href="#数据范围-18" class="headerlink" title="数据范围"></a>数据范围</h4><p>0≤N≤15 </p>
<h4 id="输入样例：-17"><a href="#输入样例：-17" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">0</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-18"><a href="#输出样例：-18" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line"></span><br><span class="line">1 2</span><br><span class="line">2 4</span><br><span class="line"></span><br><span class="line">1 2 4</span><br><span class="line">2 4 8</span><br><span class="line">4 8 16</span><br><span class="line"></span><br><span class="line">1 2 4 8</span><br><span class="line">2 4 8 16</span><br><span class="line">4 8 16 32</span><br><span class="line">8 16 32 64</span><br><span class="line"></span><br><span class="line">1 2 4 8 16</span><br><span class="line">2 4 8 16 32</span><br><span class="line">4 8 16 32 64</span><br><span class="line">8 16 32 64 128</span><br><span class="line">16 32 64 128 256</span><br></pre></td></tr></table></figure>

<h2 id="答案-19"><a href="#答案-19" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">20</span>][<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; n,n)&#123;</span><br><span class="line">        <span class="type">int</span> ret=<span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> k=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            ret*=<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">0</span>) ret=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">                a[i][j]=ret;</span><br><span class="line">                ret*=<span class="number">2</span>;</span><br><span class="line">            &#125;ret=a[k][<span class="number">0</span>];<span class="comment">//ret每次都等于上一行乘2</span></span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        	<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">        		cout &lt;&lt; a[i][j] &lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">			&#125;cout &lt;&lt; endl;</span><br><span class="line">		&#125;cout &lt;&lt; endl;</span><br><span class="line">		 </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; n,n)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">                <span class="type">int</span> v=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;i+j;k++) </span><br><span class="line">                    v*=<span class="number">2</span>;</span><br><span class="line">                cout &lt;&lt; v &lt;&lt; <span class="string">&#x27; &#x27;</span>;<span class="comment">//每一个v都要乘i+j个2</span></span><br><span class="line">            &#125;cout &lt;&lt; endl;</span><br><span class="line">        &#125;cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="756-蛇形矩阵"><a href="#756-蛇形矩阵" class="headerlink" title="*756. 蛇形矩阵"></a>*756. 蛇形矩阵</h1><h2 id="题目-19"><a href="#题目-19" class="headerlink" title="题目"></a>题目</h2><p>输入两个整数  n 和 m，输出一个 n 行 m 列的矩阵，将数字 1 到 n×m 按照回字蛇形填充至矩阵中。</p>
<p>具体矩阵形式可参考样例。</p>
<h4 id="输入格式-20"><a href="#输入格式-20" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入共一行，包含两个整数 n 和  m。</p>
<h4 id="输出格式-20"><a href="#输出格式-20" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出满足要求的矩阵。</p>
<p>矩阵占  n 行，每行包含 m 个空格隔开的整数。</p>
<h4 id="数据范围-19"><a href="#数据范围-19" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n,m≤100  </p>
<h4 id="输入样例：-18"><a href="#输入样例：-18" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 3</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-19"><a href="#输出样例：-19" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 2 3</span><br><span class="line">8 9 4</span><br><span class="line">7 6 5</span><br></pre></td></tr></table></figure>

<h2 id="答案-20"><a href="#答案-20" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> res[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="type">int</span> dx[]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;,dy[]=&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>&#125;;<span class="comment">//偏移量</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">0</span>,y=<span class="number">0</span>,d=<span class="number">0</span>,k=<span class="number">1</span>;k&lt;=n*m;k++)&#123;</span><br><span class="line">        res[x][y]=k;</span><br><span class="line">        <span class="type">int</span> a=x+dx[d],b=y+dy[d];</span><br><span class="line">        <span class="keyword">if</span>(a&gt;=n || a&lt;<span class="number">0</span> || b&gt;=m || b&lt;<span class="number">0</span> || res[a][b])&#123;<span class="comment">//撞墙或重复则改变方向（没有填数的地方是0）</span></span><br><span class="line">            d=(d+<span class="number">1</span>)%<span class="number">4</span>;<span class="comment">//改变方向即横纵坐标规律变成下一个，规律总共有四个</span></span><br><span class="line">            a=x+dx[d],b=y+dy[d];</span><br><span class="line">        &#125;x=a,y=b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">            cout &lt;&lt; res[i][j] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        &#125;cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>![img](file:&#x2F;&#x2F;&#x2F;C:\Users\鑫霜\Documents\Tencent Files\1442566547\Image\C2C\92AC82FD9013711A30F86070AD0772BA.jpg)</p>
]]></content>
      <categories>
        <category>C++</category>
        <category>习题</category>
        <category>语法基础</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>Acwing</tag>
        <tag>语法基础</tag>
        <tag>数组</tag>
      </tags>
  </entry>
  <entry>
    <title>acwing C++语法基础课类、结构体、指针和引用章节习题</title>
    <url>/2024/03/04/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E7%B1%BB%EF%BC%8C%E7%BB%93%E6%9E%84%E4%BD%93%EF%BC%8C%E6%8C%87%E9%92%88%EF%BC%8C%E5%BC%95%E7%94%A8/</url>
    <content><![CDATA[<h1 id="21-斐波那契数列"><a href="#21-斐波那契数列" class="headerlink" title="21. 斐波那契数列"></a>21. 斐波那契数列</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>输入一个整数 n ，求斐波那契数列的第n 项。</p>
<p>假定从 0 开始，第 0 项为 0。(n≤39)<span id="more"></span></p>
<h4 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入整数 n=5 </span><br><span class="line"></span><br><span class="line">返回 5</span><br></pre></td></tr></table></figure>

<h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">Fibonacci</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> a[<span class="number">40</span>];</span><br><span class="line">        a[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">        a[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            a[i]=a[i<span class="number">-1</span>]+a[i<span class="number">-2</span>];</span><br><span class="line">        &#125;<span class="keyword">return</span> a[n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">Fibonacci</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&lt;=<span class="number">1</span>) <span class="keyword">return</span> n;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Fibonacci</span>(n<span class="number">-1</span>)+<span class="built_in">Fibonacci</span>(n<span class="number">-2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h1 id="16-替换空格"><a href="#16-替换空格" class="headerlink" title="*16. 替换空格"></a>*16. 替换空格</h1><h2 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h2><p>请实现一个函数，把字符串中的每个空格替换成<code>&quot;%20&quot;</code>。</p>
<p>你可以假定输入字符串的长度最大是 10001000。</p>
<p>注意输出字符串的长度可能大于 10001000。</p>
<h4 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：&quot;We are happy.&quot;</span><br><span class="line"></span><br><span class="line">输出：&quot;We%20are%20happy.&quot;</span><br></pre></td></tr></table></figure>

<h2 id="答案-1"><a href="#答案-1" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">replaceSpaces</span><span class="params">(string &amp;str)</span> </span>&#123;</span><br><span class="line">        string res;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> c : str)</span><br><span class="line">            <span class="keyword">if</span>(c == <span class="string">&#x27; &#x27;</span>) res += <span class="string">&quot;%20&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span> res+=c;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h1 id="84-求1-2-…-n"><a href="#84-求1-2-…-n" class="headerlink" title="84. 求1+2+…+n"></a>84. 求1+2+…+n</h1><h2 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h2><p>求 1+2+…+n ，要求不能使用乘除法、for、while、if、else、switch、case等关键字及条件判断语句 (A?B:C)。</p>
<h4 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：10</span><br><span class="line"></span><br><span class="line">输出：55</span><br></pre></td></tr></table></figure>

<h3 id="答案-2"><a href="#答案-2" class="headerlink" title="答案"></a>答案</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">getSum</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        n&gt;<span class="number">0</span> &amp;&amp; (sum += <span class="built_in">getSum</span>(n<span class="number">-1</span>)+n);</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h1 id="28-在O-1-时间删除链表结点"><a href="#28-在O-1-时间删除链表结点" class="headerlink" title="28. 在O(1)时间删除链表结点"></a>28. 在O(1)时间删除链表结点</h1><h2 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h2><p>给定单向链表的一个节点指针，定义一个函数在O(1)时间删除该结点。</p>
<p>假设链表一定存在，并且该节点一定不是尾节点。</p>
<h4 id="样例-3"><a href="#样例-3" class="headerlink" title="样例"></a>样例</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：链表 1-&gt;4-&gt;6-&gt;8</span><br><span class="line">      删掉节点：第2个节点即6（头节点为第0个节点）</span><br><span class="line"></span><br><span class="line">输出：新链表 1-&gt;4-&gt;8</span><br></pre></td></tr></table></figure>

<h2 id="答案-3"><a href="#答案-3" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">deleteNode</span><span class="params">(ListNode* node)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//node-&gt;val=node-&gt;next-&gt;val;</span></span><br><span class="line">        <span class="comment">//node-&gt;next=node-&gt;next-&gt;next;</span></span><br><span class="line">        *(node)=*node-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h1 id="36-合并两个排序的链表"><a href="#36-合并两个排序的链表" class="headerlink" title="36. 合并两个排序的链表"></a>36. 合并两个排序的链表</h1><h2 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a>题目</h2><p>输入两个递增排序的链表，合并这两个链表并使新链表中的结点仍然是按照递增排序的。</p>
<h4 id="样例-4"><a href="#样例-4" class="headerlink" title="样例"></a>样例</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：1-&gt;3-&gt;5 , 2-&gt;4-&gt;5</span><br><span class="line"></span><br><span class="line">输出：1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;5</span><br></pre></td></tr></table></figure>

<h2 id="答案-4"><a href="#答案-4" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">merge</span><span class="params">(ListNode* l1, ListNode* l2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">auto</span> dummy = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">-1</span>),tail = dummy;<span class="comment">//</span></span><br><span class="line">       <span class="keyword">while</span>(l1 &amp;&amp; l2)&#123;</span><br><span class="line">           <span class="keyword">if</span>(l1-&gt;val &lt; l2-&gt;val)&#123;</span><br><span class="line">               tail = tail-&gt;next = l1;</span><br><span class="line">               l1 = l1-&gt;next;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span> &#123;</span><br><span class="line">               tail = tail-&gt;next = l2;</span><br><span class="line">               l2 = l2-&gt;next;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">if</span>(l1) tail-&gt;next = l1;</span><br><span class="line">       <span class="keyword">if</span>(l2) tail-&gt;next = l2;</span><br><span class="line">       <span class="keyword">return</span> dummy-&gt;next;<span class="comment">//第一个点是不存在的，返回下一个点</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h1 id="78-左旋转字符串"><a href="#78-左旋转字符串" class="headerlink" title="78.左旋转字符串"></a>78.左旋转字符串</h1><h2 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a>题目</h2><p>字符串的左旋转操作是把字符串前面的若干个字符转移到字符串的尾部。</p>
<p>请定义一个函数实现字符串左旋转操作的功能。</p>
<p>比如输入字符串<code>&quot;abcdefg&quot;</code>和数字 22，该函数将返回左旋转 22 位得到的结果<code>&quot;cdefgab&quot;</code>。</p>
<p><strong>注意：</strong></p>
<ul>
<li>数据保证 nn 小于等于输入字符串的长度。</li>
</ul>
<h4 id="样例-5"><a href="#样例-5" class="headerlink" title="样例"></a>样例</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：&quot;abcdefg&quot; , n=2</span><br><span class="line"></span><br><span class="line">输出：&quot;cdefgab&quot;</span><br></pre></td></tr></table></figure>

<h2 id="答案-5"><a href="#答案-5" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">leftRotateString</span><span class="params">(string str, <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> str.<span class="built_in">substr</span>(n) + str.<span class="built_in">substr</span>(<span class="number">0</span>,n);<span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h1 id="87-把字符串转换成整数"><a href="#87-把字符串转换成整数" class="headerlink" title="87. 把字符串转换成整数"></a>87. 把字符串转换成整数</h1><h2 id="题目-6"><a href="#题目-6" class="headerlink" title="题目"></a>题目</h2><p>请你写一个函数 StrToInt，实现把字符串转换成整数这个功能。</p>
<p>当然，不能使用 atoi 或者其他类似的库函数。</p>
<h4 id="样例-6"><a href="#样例-6" class="headerlink" title="样例"></a>样例</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：&quot;123&quot;</span><br><span class="line"></span><br><span class="line">输出：123</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>:</p>
<p>你的函数应满足下列条件：</p>
<ol>
<li>忽略所有行首空格，找到第一个非空格字符，可以是 ‘+&#x2F;−’ 表示是正数或者负数，紧随其后找到最长的一串连续数字，将其解析成一个整数；</li>
<li>整数后可能有任意非数字字符，请将其忽略；</li>
<li>如果整数长度为 00，则返回 00；</li>
<li>如果整数大于 INT_MAX(231−1231−1)，请返回 INT_MAX；如果整数小于INT_MIN(−231−231) ，请返回 INT_MIN；</li>
</ol>
<h2 id="答案-6"><a href="#答案-6" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">strToInt</span><span class="params">(string str)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> k=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>( k &lt; str.<span class="built_in">size</span>() &amp;&amp; str[k] == <span class="string">&#x27; &#x27;</span>) k++;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> res = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> minus = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(k &lt; str.<span class="built_in">size</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(str[k] == <span class="string">&#x27;-&#x27;</span>) minus = <span class="number">-1</span>,k++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(str[k] == <span class="string">&#x27;+&#x27;</span>)k++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (k &lt; str.<span class="built_in">size</span>() &amp;&amp; str[k] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; str[k] &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            res = res * <span class="number">10</span> + str[k] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span>(res &gt; <span class="number">1e11</span>) <span class="keyword">break</span>;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">        res *= minus;</span><br><span class="line">        <span class="keyword">if</span>(res &gt; INT_MAX) res = INT_MAX;</span><br><span class="line">        <span class="keyword">if</span>(res &lt; INT_MIN) res = INT_MIN;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h1 id="35-反转链表"><a href="#35-反转链表" class="headerlink" title="35. 反转链表"></a>35. 反转链表</h1><h2 id="题目-7"><a href="#题目-7" class="headerlink" title="题目"></a>题目</h2><p>定义一个函数，输入一个链表的头结点，反转该链表并输出反转后链表的头结点。</p>
<p><strong>思考题：</strong></p>
<ul>
<li>请同时实现迭代版本和递归版本。</li>
</ul>
<h4 id="样例-7"><a href="#样例-7" class="headerlink" title="样例"></a>样例</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入:1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL</span><br><span class="line"></span><br><span class="line">输出:5-&gt;4-&gt;3-&gt;2-&gt;1-&gt;NULL</span><br></pre></td></tr></table></figure>

<h2 id="答案-7"><a href="#答案-7" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseList</span><span class="params">(ListNode* head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!head || !head-&gt;next) <span class="keyword">return</span> head;</span><br><span class="line">        <span class="keyword">auto</span> p = head,q= head-&gt;next;</span><br><span class="line">        <span class="keyword">while</span>(q)&#123;</span><br><span class="line">            <span class="keyword">auto</span> o = q-&gt;next;</span><br><span class="line">           q-&gt;next = p;</span><br><span class="line">           p=q;</span><br><span class="line">           q=o;</span><br><span class="line">        &#125;head-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h1 id="66-两个链表的第一个公共结点"><a href="#66-两个链表的第一个公共结点" class="headerlink" title="66. 两个链表的第一个公共结点"></a>66. 两个链表的第一个公共结点</h1><h2 id="题目-8"><a href="#题目-8" class="headerlink" title="题目"></a>题目</h2><p>输入两个链表，找出它们的第一个公共结点。</p>
<p>当不存在公共节点时，返回空节点。</p>
<h4 id="样例-8"><a href="#样例-8" class="headerlink" title="样例"></a>样例</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">给出两个链表如下所示：</span><br><span class="line">A：        a1 → a2</span><br><span class="line">                   ↘</span><br><span class="line">                     c1 → c2 → c3</span><br><span class="line">                   ↗            </span><br><span class="line">B:     b1 → b2 → b3</span><br><span class="line"></span><br><span class="line">输出第一个公共节点c1</span><br></pre></td></tr></table></figure>

<h2 id="答案-8"><a href="#答案-8" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode *<span class="title">findFirstCommonNode</span><span class="params">(ListNode *headA, ListNode *headB)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">auto</span> p = headA, q = headB;</span><br><span class="line">        <span class="keyword">while</span>(p != q)&#123;</span><br><span class="line">            <span class="keyword">if</span>(p) p = p-&gt;next;</span><br><span class="line">            <span class="keyword">else</span> p = headB;</span><br><span class="line">            <span class="keyword">if</span>(q) q = q-&gt;next;</span><br><span class="line">            <span class="keyword">else</span> q = headA;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h1 id="29-删除链表中重复的节点"><a href="#29-删除链表中重复的节点" class="headerlink" title="29. 删除链表中重复的节点"></a>29. 删除链表中重复的节点</h1><h2 id="题目-9"><a href="#题目-9" class="headerlink" title="题目"></a>题目</h2><p>在一个排序的链表中，存在重复的节点，请删除该链表中重复的节点，重复的节点不保留。</p>
<h4 id="样例1"><a href="#样例1" class="headerlink" title="样例1"></a>样例1</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：1-&gt;2-&gt;3-&gt;3-&gt;4-&gt;4-&gt;5</span><br><span class="line"></span><br><span class="line">输出：1-&gt;2-&gt;5</span><br></pre></td></tr></table></figure>

<h4 id="样例2"><a href="#样例2" class="headerlink" title="样例2"></a>样例2</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：1-&gt;1-&gt;1-&gt;2-&gt;3</span><br><span class="line"></span><br><span class="line">输出：2-&gt;3</span><br></pre></td></tr></table></figure>

<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>链表中节点 val 值取值范围 [0,100][0,100]。</p>
<h2 id="答案-9"><a href="#答案-9" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">deleteDuplication</span><span class="params">(ListNode* head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">auto</span> dummy = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">-1</span>);</span><br><span class="line">        dummy-&gt;next = head;</span><br><span class="line">        <span class="keyword">auto</span> p = dummy;</span><br><span class="line">        <span class="keyword">while</span>(p-&gt;next)&#123;</span><br><span class="line">            <span class="keyword">auto</span> q = p-&gt;next;</span><br><span class="line">            <span class="keyword">while</span>(q-&gt;next &amp;&amp; p-&gt;next-&gt;val == q-&gt;next-&gt;val) q=q-&gt;next;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;next == q) p = q;</span><br><span class="line">            <span class="keyword">else</span> p-&gt;next = q-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dummy-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
        <category>习题</category>
        <category>语法基础</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>Acwing</tag>
        <tag>语法基础</tag>
        <tag>类</tag>
        <tag>结构体</tag>
        <tag>指针</tag>
        <tag>引用</tag>
      </tags>
  </entry>
  <entry>
    <title>acwing C++语法基础课函数章节习题</title>
    <url>/2024/03/04/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="804-n的阶乘"><a href="#804-n的阶乘" class="headerlink" title="804. n的阶乘"></a>804. n的阶乘</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>输入一个整数 n，请你编写一个函数，<code>int fact(int n)</code>，计算并输出 nn 的阶乘。<span id="more"></span></p>
<h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含一个整数 n。</p>
<h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，包含一个整数表示 n 的阶乘的值。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤10 </p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>

<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure>

<h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">foo</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> ret=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=a;i++)&#123;</span><br><span class="line">        ret*=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">foo</span>(n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="805-x和y的最大值"><a href="#805-x和y的最大值" class="headerlink" title="805. x和y的最大值"></a>805. x和y的最大值</h1><h2 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h2><p>输入两个整数 x  和 y，请你编写一个函数，<code>int max(int x, int y)</code>，计算并输出 xx 和 yy 的最大值。</p>
<h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含两个整数 x 和 y。</p>
<h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，包含一个整数，表示两个数中较大的那个数。</p>
<h4 id="数据范围-1"><a href="#数据范围-1" class="headerlink" title="数据范围"></a>数据范围</h4><p>−100≤x,y≤100 </p>
<h4 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 6</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure>

<h2 id="答案-1"><a href="#答案-1" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;y) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">max</span>(a,b) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="808-最大公约数"><a href="#808-最大公约数" class="headerlink" title="808. 最大公约数"></a>808. 最大公约数</h1><h2 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h2><p>输入两个整数 a 和 b，请你编写一个函数，<code>int gcd(int a, int b)</code>, 计算并输出 aa 和 bb 的最大公约数。</p>
<h4 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含两个整数 a 和 b。</p>
<h4 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，包含一个整数，表示 a 和 b 的最大公约数。</p>
<h4 id="数据范围-2"><a href="#数据范围-2" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤a,b≤1000 </p>
<h4 id="输入样例：-2"><a href="#输入样例：-2" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12 16</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-2"><a href="#输出样例：-2" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>

<h2 id="答案-2"><a href="#答案-2" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="type">int</span> ret=<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> k;</span><br><span class="line">    <span class="keyword">if</span>(a&gt;b) k=b;</span><br><span class="line">    <span class="keyword">else</span> k=a;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=k;i&gt;<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a%i==<span class="number">0</span> &amp;&amp; b%i==<span class="number">0</span>)&#123; </span><br><span class="line">            ret=i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">    cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">gcd</span>(x,y) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="811-交换数值"><a href="#811-交换数值" class="headerlink" title="811. 交换数值"></a>811. 交换数值</h1><h2 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h2><p>输入两个整数 x 和 y，请你编写一个函数，<code>void swap(int &amp;x, int &amp;y)</code>, 交换两个整数的数值并输出交换后的 x 和 y。</p>
<h4 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含两个整数 x 和 y。</p>
<h4 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，包含交换后的 x 和 y。</p>
<h4 id="数据范围-3"><a href="#数据范围-3" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤x,y≤100 </p>
<h4 id="输入样例：-3"><a href="#输入样例：-3" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 5</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-3"><a href="#输出样例：-3" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 3</span><br></pre></td></tr></table></figure>

<h2 id="答案-3"><a href="#答案-3" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> &amp;x, <span class="type">int</span> &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t=x;</span><br><span class="line">    x=y;</span><br><span class="line">    y=t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="built_in">swap</span>(a,b);</span><br><span class="line">    cout &lt;&lt; x &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; y &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="812-打印数字"><a href="#812-打印数字" class="headerlink" title="812. 打印数字"></a>812. 打印数字</h1><h2 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a>题目</h2><p>输入一个长度为  n 的数组 a 和一个整数 size ，请你编写一个函数, <code>void print(int a[], int size)</code>, 打印数组 a 中的前 size 个数。</p>
<h4 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含两个整数 n 和 size。</p>
<p>第二行包含 n 个整数  a[i]，表示整个数组。</p>
<h4 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，包含  size 个整数，表示数组的前 size 个数。</p>
<h4 id="数据范围-4"><a href="#数据范围-4" class="headerlink" title="数据范围"></a>数据范围</h4><p> 1≤n≤1000,<br> 1≤size≤n,</p>
<h4 id="输入样例：-4"><a href="#输入样例：-4" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 3</span><br><span class="line">1 2 3 4 5</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-4"><a href="#输出样例：-4" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 2 3</span><br></pre></td></tr></table></figure>

<h2 id="答案-4"><a href="#答案-4" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;size;i++)&#123;</span><br><span class="line">        cout &lt;&lt; a[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt;m;</span><br><span class="line">    <span class="type">int</span> a[n]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cin &gt;&gt; a[i];</span><br><span class="line">    <span class="built_in">print</span>(a,m);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="813-打印矩阵"><a href="#813-打印矩阵" class="headerlink" title="813. 打印矩阵"></a>813. 打印矩阵</h1><h2 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a>题目</h2><p>给定一个 row×col 的二维数组 a，请你编写一个函数，<code>void print2D(int a[][N], int row, int col)</code>，打印数组构成的 row 行，col 列的矩阵。</p>
<p>注意，每打印完一整行需要输出一个回车。</p>
<h4 id="输入格式-5"><a href="#输入格式-5" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含两个整数 row,col 。</p>
<p>接下来 row 行，每行包含 col 个整数，表示完整二维数组 a。</p>
<h4 id="输出格式-5"><a href="#输出格式-5" class="headerlink" title="输出格式"></a>输出格式</h4><p>共 row 行，每行 col 个整数，表示打印出的矩阵。</p>
<h4 id="数据范围-5"><a href="#数据范围-5" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤row≤100，<br>1≤col≤100 </p>
<h4 id="输入样例：-5"><a href="#输入样例：-5" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 4</span><br><span class="line">1 3 4 5</span><br><span class="line">2 6 9 4</span><br><span class="line">1 4 7 5</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-5"><a href="#输出样例：-5" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 3 4 5</span><br><span class="line">2 6 9 4</span><br><span class="line">1 4 7 5</span><br></pre></td></tr></table></figure>

<h2 id="答案-5"><a href="#答案-5" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print2D</span><span class="params">(<span class="type">int</span> a[][<span class="number">100</span>], <span class="type">int</span> row, <span class="type">int</span> col)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;row;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;col;j++)&#123;</span><br><span class="line">            cout &lt;&lt; a[i][j] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> a[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">print2D</span>(a,n,m);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="819-递归求阶乘"><a href="#819-递归求阶乘" class="headerlink" title="819. 递归求阶乘"></a>819. 递归求阶乘</h1><h2 id="题目-6"><a href="#题目-6" class="headerlink" title="题目"></a>题目</h2><p>请使用递归的方式求 n 的阶乘。</p>
<h4 id="输入格式-6"><a href="#输入格式-6" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含一个整数 n。</p>
<h4 id="输出格式-6"><a href="#输出格式-6" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，包含一个整数，表示 n 的阶乘的值。</p>
<h4 id="数据范围-6"><a href="#数据范围-6" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤10 </p>
<h4 id="输入样例：-6"><a href="#输入样例：-6" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-6"><a href="#输出样例：-6" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure>

<h2 id="答案-6"><a href="#答案-6" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">fact</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> n*<span class="built_in">fact</span>(n<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">fact</span>(n) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="820-递归求斐波那契数列"><a href="#820-递归求斐波那契数列" class="headerlink" title="*820. 递归求斐波那契数列"></a>*820. 递归求斐波那契数列</h1><h2 id="题目-7"><a href="#题目-7" class="headerlink" title="题目"></a>题目</h2><p>请使用递归的方式求斐波那契数列的第 n 项。</p>
<p>斐波那契数列：1,1,2,3,5… ，这个数列从第 3 项开始，每一项都等于前两项之和</p>
<h4 id="输入格式-7"><a href="#输入格式-7" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含整数 n。</p>
<h4 id="输出格式-7"><a href="#输出格式-7" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，包含一个整数，表示斐波那契数列的第 n 项。</p>
<h4 id="数据范围-7"><a href="#数据范围-7" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤30 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-7"><a href="#输出样例：-7" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>

<h2 id="答案-7"><a href="#答案-7" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;=<span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">f</span>(n<span class="number">-1</span>)+<span class="built_in">f</span>(n<span class="number">-2</span>);<span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">f</span>(n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><img src="C:\Users\鑫霜\Documents\我的坚果云\IMG_20211202_213421.jpg" alt="IMG_20211202_213421"></p>
<h1 id="810-绝对值"><a href="#810-绝对值" class="headerlink" title="810. 绝对值"></a>810. 绝对值</h1><h2 id="题目-8"><a href="#题目-8" class="headerlink" title="题目"></a>题目</h2><p>输入一个整数 x，请你编写一个函数，<code>int abs(int x)</code>，输出 xx 的绝对值。</p>
<h4 id="输入格式-8"><a href="#输入格式-8" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含一个整数 x。</p>
<h4 id="输出格式-8"><a href="#输出格式-8" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，包含 x 的绝对值。</p>
<h4 id="数据范围-8"><a href="#数据范围-8" class="headerlink" title="数据范围"></a>数据范围</h4><p>−100≤x≤100 </p>
<h4 id="输入样例：-7"><a href="#输入样例：-7" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-3</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-8"><a href="#输出样例：-8" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>

<h2 id="答案-8"><a href="#答案-8" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">absn</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;<span class="number">0</span>) <span class="keyword">return</span> -n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">absn</span>(n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="806-两个数的和"><a href="#806-两个数的和" class="headerlink" title="806. 两个数的和"></a>806. 两个数的和</h1><h2 id="题目-9"><a href="#题目-9" class="headerlink" title="题目"></a>题目</h2><p>输入两个浮点数 x 和 y，请你编写一个函数，<code>double add(double x, double y)</code>，计算并输出 x 与 y 的和。</p>
<h4 id="输入格式-9"><a href="#输入格式-9" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含两个浮点数 x 和 y。</p>
<h4 id="输出格式-9"><a href="#输出格式-9" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，包含一个浮点数，表示两个数的和，结果保留 2 位小数。</p>
<h4 id="数据范围-9"><a href="#数据范围-9" class="headerlink" title="数据范围"></a>数据范围</h4><p>−1000≤x,y≤1000 </p>
<h4 id="输入样例：-8"><a href="#输入样例：-8" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.11 2.22</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-9"><a href="#输出样例：-9" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3.33</span><br></pre></td></tr></table></figure>

<h2 id="答案-9"><a href="#答案-9" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">add</span><span class="params">(<span class="type">double</span> x, <span class="type">double</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x+y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> a,b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>,<span class="built_in">add</span>(a,b));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="807-区间求和"><a href="#807-区间求和" class="headerlink" title="807. 区间求和"></a>807. 区间求和</h1><h2 id="题目-10"><a href="#题目-10" class="headerlink" title="题目"></a>题目</h2><p>输入两个整数 l 和 r，请你编写一个函数，<code>int sum(int l, int r)</code>，计算并输出区间 [l,r][l,r] 内所有整数的和。</p>
<h4 id="输入格式-10"><a href="#输入格式-10" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含两个整数 l 和 r。</p>
<h4 id="输出格式-10"><a href="#输出格式-10" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，包含一个整数，表示所求的和。</p>
<h4 id="数据范围-10"><a href="#数据范围-10" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤l≤r≤1000 </p>
<h4 id="输入样例：-9"><a href="#输入样例：-9" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 5</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-10"><a href="#输出样例：-10" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12</span><br></pre></td></tr></table></figure>

<h2 id="答案-10"><a href="#答案-10" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">sum</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=l;i&lt;=r;i++)&#123;</span><br><span class="line">        sum+=i;</span><br><span class="line">    &#125;<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> l,r;</span><br><span class="line">    cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">sum</span>(l,r);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="809-最小公倍数"><a href="#809-最小公倍数" class="headerlink" title="809. 最小公倍数"></a>809. 最小公倍数</h1><h2 id="题目-11"><a href="#题目-11" class="headerlink" title="题目"></a>题目</h2><p>输入两个整数 a 和 b，请你编写一个函数，<code>int lcm(int a, int b)</code>，计算并输出 a 和 b 的最小公倍数。</p>
<h4 id="输入格式-11"><a href="#输入格式-11" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含两个整数 a 和 b。</p>
<h4 id="输出格式-11"><a href="#输出格式-11" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，包含一个整数，表示 aa 和 bb 的最小公倍数。</p>
<h4 id="数据范围-11"><a href="#数据范围-11" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤a,b≤1000 </p>
<h4 id="输入样例：-10"><a href="#输入样例：-10" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6 8</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-11"><a href="#输出样例：-11" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">24</span><br></pre></td></tr></table></figure>

<h2 id="答案-11"><a href="#答案-11" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lcm</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a&gt;b)&#123;</span><br><span class="line">        <span class="type">int</span> t=a;</span><br><span class="line">        a=b;</span><br><span class="line">        b=t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=a;;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i%a==<span class="number">0</span> &amp;&amp; i%b==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">lcm</span>(a,b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="814-复制数组"><a href="#814-复制数组" class="headerlink" title="814. 复制数组"></a>814. 复制数组</h1><h2 id="题目-12"><a href="#题目-12" class="headerlink" title="题目"></a>题目</h2><p>给定两个数组 a 和 b 以及一个整数 size，请你编写一个函数，<code>void copy(int a[], int b[], int size)</code>，将 aa 数组中的前 size 个数字，复制到 bb 数组中。</p>
<p>复制完成后，输出 b 数组。</p>
<h4 id="输入格式-12"><a href="#输入格式-12" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含整数 n,m,sizen，分别表示 a 数组的长度，b 数组的长度以及整数 sizesize。</p>
<p>第二行包含 n 个整数，表示数组 a。</p>
<p>第三行包含 m 个整数，表示数组 b。</p>
<h4 id="输出格式-12"><a href="#输出格式-12" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，包含 m 个整数，表示复制完成后的数组 b。</p>
<h4 id="数据范围-12"><a href="#数据范围-12" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤m≤100 ,<br>1≤size≤n </p>
<h4 id="输入样例：-11"><a href="#输入样例：-11" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 5 2</span><br><span class="line">1 2 3</span><br><span class="line">4 5 6 7 8</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-12"><a href="#输出样例：-12" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 2 6 7 8</span><br></pre></td></tr></table></figure>

<h2 id="答案-12"><a href="#答案-12" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">copy</span><span class="params">(<span class="type">int</span> a[],<span class="type">int</span> b[],<span class="type">int</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;size;i++)&#123;</span><br><span class="line">        b[i]=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m,size;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt;size;</span><br><span class="line">    <span class="type">int</span> a[n],b[m];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++) cin &gt;&gt; b[i];</span><br><span class="line">    <span class="built_in">copy</span>(a,b,size);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++) cout &lt;&lt; b[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="815-打印字符串"><a href="#815-打印字符串" class="headerlink" title="815. 打印字符串"></a>815. 打印字符串</h1><h2 id="题目-13"><a href="#题目-13" class="headerlink" title="题目"></a>题目</h2><p>给定一个字符串，请你编写一个函数，<code>void print(char str[])</code>，将这个字符串打印出来。</p>
<h4 id="输入格式-13"><a href="#输入格式-13" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含一个字符串。</p>
<h4 id="输出格式-13"><a href="#输出格式-13" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，表示打印出的字符串。</p>
<h4 id="数据范围-13"><a href="#数据范围-13" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤字符串长度≤1001≤字符串长度≤100</p>
<h4 id="输入样例：-12"><a href="#输入样例：-12" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">I love AcWing.</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-13"><a href="#输出样例：-13" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">I love AcWing.</span><br></pre></td></tr></table></figure>

<h2 id="答案-13"><a href="#答案-13" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">char</span> str[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">110</span>];</span><br><span class="line">    <span class="built_in">fgets</span>(str,<span class="number">101</span>,stdin);</span><br><span class="line">    <span class="built_in">print</span>(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="816-数组翻转"><a href="#816-数组翻转" class="headerlink" title="816. 数组翻转"></a>816. 数组翻转</h1><h2 id="题目-14"><a href="#题目-14" class="headerlink" title="题目"></a>题目</h2><p>给定一个长度为 n 的数组 a 和一个整数 size ，请你编写一个函数，<code>void reverse(int a[], int size)</code>，实现将数组 a 中的前 size 个数翻转。</p>
<p>输出翻转后的数组 a。</p>
<h4 id="输入格式-14"><a href="#输入格式-14" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含两个整数 n 和 size。</p>
<p>第二行包含 n 个整数，表示数组 a。</p>
<h4 id="输出格式-14"><a href="#输出格式-14" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，包含 n 个整数，表示翻转后的数组 a。</p>
<h4 id="数据范围-14"><a href="#数据范围-14" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤size≤n≤1000 ,<br>1≤a[i]≤1000 </p>
<h4 id="输入样例：-13"><a href="#输入样例：-13" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 3</span><br><span class="line">1 2 3 4 5</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-14"><a href="#输出样例：-14" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 2 1 4 5</span><br></pre></td></tr></table></figure>

<h2 id="答案-14"><a href="#答案-14" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">1000</span>],b[<span class="number">1000</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">reverse</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;size;i++) <span class="comment">//也可以for(int i=0,j=size-1;i&lt;j;i++,j--)</span></span><br><span class="line">        b[i]=a[size<span class="number">-1</span>-i]; <span class="comment">//swap(a[i],a[j]);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,size;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; size;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">reverse</span>(a,size);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;size;i++) cout &lt;&lt; b[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=size;i&lt;n;i++) cout &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="817-数组去重"><a href="#817-数组去重" class="headerlink" title="*817. 数组去重"></a>*817. 数组去重</h1><h2 id="题目-15"><a href="#题目-15" class="headerlink" title="题目"></a>题目</h2><p>给定一个长度为 n 的数组 a，请你编写一个函数：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int get_unique_count(int a[], int n);  // 返回数组前n个数中的不同数的个数</span><br></pre></td></tr></table></figure>

<h4 id="输入格式-15"><a href="#输入格式-15" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含一个整数  n。</p>
<p>第二行包含 n 个整数，表示数组 a。</p>
<h4 id="输出格式-15"><a href="#输出格式-15" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，包含一个整数表示数组中不同数的个数。</p>
<h4 id="数据范围-15"><a href="#数据范围-15" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤1000 ,<br>1≤ai≤1000 。</p>
<h4 id="输入样例：-14"><a href="#输入样例：-14" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">1 1 2 4 5</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-15"><a href="#输出样例：-15" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>

<h2 id="答案-15"><a href="#答案-15" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> b[<span class="number">1001</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get_unique_count</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b[a[i]]==<span class="number">0</span>)&#123;<span class="comment">//</span></span><br><span class="line">            cnt++;</span><br><span class="line">            b[a[i]]=<span class="number">1</span>;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;<span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">1000</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) </span><br><span class="line">	cin &gt;&gt; a[i];</span><br><span class="line">    cout &lt;&lt; <span class="built_in">get_unique_count</span>(a,n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">get_unique_count</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> is_exist=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;i;j++)</span><br><span class="line">            <span class="keyword">if</span>(a[i]==a[j])&#123;</span><br><span class="line">               is_exist=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span>(is_exist) cnt++;</span><br><span class="line">    &#125;<span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="818-数组排序"><a href="#818-数组排序" class="headerlink" title="818. 数组排序"></a>818. 数组排序</h1><h2 id="题目-16"><a href="#题目-16" class="headerlink" title="题目"></a>题目</h2><p>给定一个长度为 n 的数组 a 以及两个整数 l 和 r，请你编写一个函数，<code>void sort(int a[], int l, int r)</code>，将 a[l]∼a[r] 从小到大排序。</p>
<p>输出排好序的数组 aa。</p>
<h4 id="输入格式-16"><a href="#输入格式-16" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含三个整数 n，l，r 。</p>
<p>第二行包含 n 个整数，表示数组 a。</p>
<h4 id="输出格式-16"><a href="#输出格式-16" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，包含 nn 个整数，表示排序完成后的数组 a。</p>
<h4 id="数据范围-16"><a href="#数据范围-16" class="headerlink" title="数据范围"></a>数据范围</h4><p>0≤l≤r&lt;n≤1000 </p>
<h4 id="输入样例：-15"><a href="#输入样例：-15" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 2 4</span><br><span class="line">4 5 1 3 2</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-16"><a href="#输出样例：-16" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4 5 1 2 3</span><br></pre></td></tr></table></figure>

<h2 id="答案-16"><a href="#答案-16" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">sort</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="type">int</span> k=r;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(k&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    	<span class="keyword">for</span>(<span class="type">int</span> i=l;i&lt;k;i++)</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;a[i+<span class="number">1</span>])&#123;</span><br><span class="line">            <span class="type">int</span> t=a[i];</span><br><span class="line">            a[i]=a[i+<span class="number">1</span>];</span><br><span class="line">            a[i+<span class="number">1</span>]=t;</span><br><span class="line">        &#125;</span><br><span class="line">        k--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> a[<span class="number">1000</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,l,r;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; l &gt;&gt; r;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cin &gt;&gt; a[i];</span><br><span class="line">    <span class="built_in">sort</span>(a,l,r);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cout &lt;&lt; a[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>选择排序</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">sort</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=l;i&lt;=r;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i;j&lt;=r;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j]&lt;a[i]) <span class="built_in">swap</span>(a[j],a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="821-跳台阶"><a href="#821-跳台阶" class="headerlink" title="*821. 跳台阶"></a>*821. 跳台阶</h1><h2 id="题目-17"><a href="#题目-17" class="headerlink" title="题目"></a>题目</h2><p>一个楼梯共有 n 级台阶，每次可以走一级或者两级，问从第 0 级台阶走到第 n 级台阶一共有多少种方案。</p>
<h4 id="输入格式-17"><a href="#输入格式-17" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含一个整数 n。</p>
<h4 id="输出格式-17"><a href="#输出格式-17" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，包含一个整数，表示方案数。</p>
<h4 id="数据范围-17"><a href="#数据范围-17" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤15</p>
<h4 id="输入样例：-16"><a href="#输入样例：-16" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-17"><a href="#输出样例：-17" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8</span><br></pre></td></tr></table></figure>

<h2 id="答案-17"><a href="#答案-17" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">t</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;=<span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">t</span>(n<span class="number">-1</span>)+<span class="built_in">t</span>(n<span class="number">-2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">t</span>(n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>用递归(可以直接是函数的值，也可以用函数最后的值来计数)</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> ants;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(k==n) ants++;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(k&lt;n)&#123;</span><br><span class="line">        <span class="built_in">f</span>(k+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">f</span>(k+<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="built_in">f</span>(<span class="number">0</span>);</span><br><span class="line">    cout &lt;&lt; ants;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="822-走方格"><a href="#822-走方格" class="headerlink" title="*822. 走方格"></a>*822. 走方格</h1><h2 id="题目-18"><a href="#题目-18" class="headerlink" title="题目"></a>题目</h2><p>给定一个 n×m  的方格阵，沿着方格的边线走，从左上角 (0,0)开始，每次只能往右或者往下走一个单位距离，问走到右下角 (n,m)一共有多少种不同的走法。</p>
<h4 id="输入格式-18"><a href="#输入格式-18" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含两个整数 n和 m。</p>
<h4 id="输出格式-18"><a href="#输出格式-18" class="headerlink" title="输出格式"></a>输出格式</h4><p>共一行，包含一个整数，表示走法数量。</p>
<h4 id="数据范围-18"><a href="#数据范围-18" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n,m≤10</p>
<h4 id="输入样例：-17"><a href="#输入样例：-17" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 3</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-18"><a href="#输出样例：-18" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure>

<h2 id="答案-18"><a href="#答案-18" class="headerlink" title="答案"></a>答案</h2><ul>
<li>用排列组合</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> m,<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> ret=<span class="number">1</span>,ret1=<span class="number">1</span>,ret2=<span class="number">1</span>,ret3=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;m)&#123;</span><br><span class="line">        <span class="type">int</span> t=n;</span><br><span class="line">        n=m;</span><br><span class="line">        m=t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) ret1*=i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++) ret2*=i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n+m;i++) ret3*=i;</span><br><span class="line">    ret=ret3/(ret2*ret1);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> m,n;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">f</span>(m,n) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>递归</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> ans;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x==n &amp;&amp; y==m ) ans++;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(y&lt;m) <span class="built_in">dfs</span>(x,y+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(x&lt;n) <span class="built_in">dfs</span>(x+<span class="number">1</span>,y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="823-排列"><a href="#823-排列" class="headerlink" title="**823. 排列"></a>**823. 排列</h1><h2 id="题目-19"><a href="#题目-19" class="headerlink" title="题目"></a>题目</h2><p>给定一个整数 nn，将数字 1∼n1∼n 排成一排，将会有很多种排列方法。</p>
<p>现在，请你按照字典序将所有的排列方法输出。</p>
<h4 id="输入格式-19"><a href="#输入格式-19" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含一个整数 nn。</p>
<h4 id="输出格式-19"><a href="#输出格式-19" class="headerlink" title="输出格式"></a>输出格式</h4><p>按字典序输出所有排列方案，每个方案占一行。</p>
<h4 id="数据范围-19"><a href="#数据范围-19" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤91≤n≤9</p>
<h4 id="输入样例：-18"><a href="#输入样例：-18" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-19"><a href="#输出样例：-19" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 2 3</span><br><span class="line">1 3 2</span><br><span class="line">2 1 3</span><br><span class="line">2 3 1</span><br><span class="line">3 1 2</span><br><span class="line">3 2 1</span><br></pre></td></tr></table></figure>

<h2 id="答案-19"><a href="#答案-19" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> num[],<span class="type">int</span> st[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u&gt;n) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            cout &lt;&lt; num[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!st[i])</span><br><span class="line">            &#123;</span><br><span class="line">                st[i]=<span class="number">1</span>;</span><br><span class="line">                num[u]=i;<span class="comment">//第二次u仍然是1，用循环来继续这个过程 </span></span><br><span class="line">                <span class="built_in">dfs</span>(u+<span class="number">1</span>,num,st);<span class="comment">//执行完毕一次输出,然后接着下面的语句进行循环 </span></span><br><span class="line">                st[i]=<span class="number">0</span>;<span class="comment">//恢复现场，即完成一次输出后下一次的i位上也是没有填数的 ，应为0 </span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> num[<span class="number">10</span>];</span><br><span class="line">    <span class="type">int</span> st[<span class="number">10</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>,num,st);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
        <category>习题</category>
        <category>语法基础</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>Acwing</tag>
        <tag>语法基础</tag>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>acwing C++语法基础课循环章节习题</title>
    <url>/2024/02/28/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h1 id="708-偶数"><a href="#708-偶数" class="headerlink" title="708.偶数"></a>708.偶数</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>编写一个程序，输出 11 到 100100 之间（包括 11 和 100100）的全部偶数。</p>
<span id="more"></span>

<h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>无输入。</p>
<h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出全部偶数，每个偶数占一行。</p>
<h4 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">No input</span><br></pre></td></tr></table></figure>

<h4 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">4</span><br><span class="line">6</span><br><span class="line">...</span><br><span class="line">100</span><br></pre></td></tr></table></figure>

<h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;=<span class="number">100</span>;i=i+<span class="number">2</span>)&#123;</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="709-奇数"><a href="#709-奇数" class="headerlink" title="709.奇数"></a>709.奇数</h1><h2 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h2><p>输入一个整数 X，输出 1 到 X 之间（包括 1 和 X）的全部奇数。</p>
<h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>一个整数 X。</p>
<h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出所有满足条件的奇数，每个数占一行。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤X≤1000</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8</span><br></pre></td></tr></table></figure>

<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><figcaption><span>奇数</span></figcaption><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">3</span><br><span class="line">5</span><br><span class="line">7</span><br></pre></td></tr></table></figure>



<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,i;</span><br><span class="line">    cin &gt;&gt; a;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=a;i=i+<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="712-正数"><a href="#712-正数" class="headerlink" title="712. 正数"></a>712. 正数</h1><h2 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h2><p>输入 6 个数字，它们要么是正数，要么是负数。</p>
<p>请你统计并输出正数的个数。</p>
<h4 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h4><p>六个数字，每个占一行。</p>
<h4 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出格式为 <code>x positive numbers</code>，其中 xx 为正数的个数。</p>
<h4 id="数据范围-1"><a href="#数据范围-1" class="headerlink" title="数据范围"></a>数据范围</h4><p>输入数字的绝对值不超过 100100。</p>
<h4 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7</span><br><span class="line">-5</span><br><span class="line">6</span><br><span class="line">-3.4</span><br><span class="line">4.6</span><br><span class="line">12</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4 positive numbers</span><br></pre></td></tr></table></figure>

<h2 id="答案-1"><a href="#答案-1" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> a,n=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)&#123;</span><br><span class="line">        cin &gt;&gt; a;</span><br><span class="line">        <span class="keyword">if</span>(a&gt;<span class="number">0</span>) n++;</span><br><span class="line">    &#125;cout &lt;&lt; n &lt;&lt; <span class="string">&quot; positive numbers&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="714-连续奇数的和-1"><a href="#714-连续奇数的和-1" class="headerlink" title="714 连续奇数的和 1"></a>714 连续奇数的和 1</h1><h2 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h2><p>给定两个整数 X 和 Y，输出在他们之间（不包括 X 和 Y）的所有奇数的和。</p>
<h4 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行输入 X，第二行输入 Y。</p>
<h4 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，表示所有满足条件的奇数的和。</p>
<h4 id="数据范围-2"><a href="#数据范围-2" class="headerlink" title="数据范围"></a>数据范围</h4><p>−100≤X,Y≤100</p>
<h4 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">-5</span><br></pre></td></tr></table></figure>

<h4 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure>

<h4 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">15</span><br><span class="line">12</span><br></pre></td></tr></table></figure>

<h4 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">13</span><br></pre></td></tr></table></figure>

<h4 id="输入样例3："><a href="#输入样例3：" class="headerlink" title="输入样例3："></a>输入样例3：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12</span><br><span class="line">12</span><br></pre></td></tr></table></figure>

<h4 id="输出样例3："><a href="#输出样例3：" class="headerlink" title="输出样例3："></a>输出样例3：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure>

<h2 id="答案-2"><a href="#答案-2" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x,y,t;</span><br><span class="line">	cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">	<span class="keyword">if</span>(x&lt;y)&#123;</span><br><span class="line">		t=x;</span><br><span class="line">		x=y;</span><br><span class="line">		y=t;</span><br><span class="line">	&#125; </span><br><span class="line">	<span class="type">int</span> i,ret=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(i=y+<span class="number">1</span>;i&lt;=x<span class="number">-1</span>;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(i%<span class="number">2</span>)<span class="comment">//如果加一个contiune,就是偶数的和了</span></span><br><span class="line">           ret+=i;</span><br><span class="line">	&#125;cout &lt;&lt; ret &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="716-最大数和它的位置"><a href="#716-最大数和它的位置" class="headerlink" title="716 最大数和它的位置"></a>716 最大数和它的位置</h1><h2 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a>题目</h2><p>给定 100 个整数，请你找出其中最大的数字，以及它的输入位置（位置从 11 开始）。</p>
<h4 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式"></a>输入格式</h4><p>共 100行，每行包含一个整数。</p>
<h4 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式"></a>输出格式</h4><p>第一行输出最大的数字。</p>
<p>第二行输出该数字的输入位置。</p>
<h4 id="数据范围-3"><a href="#数据范围-3" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤输入数字≤500001≤输入数字≤50000,<br>保证输入数字互不相同。</p>
<h4 id="输入样例：-2"><a href="#输入样例：-2" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">22229</span><br><span class="line">48558</span><br><span class="line">24992</span><br><span class="line">4755</span><br><span class="line">11923</span><br><span class="line">...</span><br><span class="line">20213</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-2"><a href="#输出样例：-2" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">48558</span><br><span class="line">2</span><br></pre></td></tr></table></figure>

<h2 id="答案-3"><a href="#答案-3" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x1,x2,i,n=<span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; x2;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line">        cin &gt;&gt; x1;</span><br><span class="line">        <span class="keyword">if</span>(x1&gt;x2)&#123;</span><br><span class="line">        	x2=x1;</span><br><span class="line">        	n=i;</span><br><span class="line">		&#125; </span><br><span class="line">    &#125;cout &lt;&lt; x2 &lt;&lt; endl &lt;&lt; n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="721-递增序列"><a href="#721-递增序列" class="headerlink" title="*721. 递增序列"></a>*721. 递增序列</h1><h2 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a>题目</h2><p>读取一系列的整数 X，对于每个 X，输出一个 1,2,…,X 的序列。</p>
<h4 id="输入格式-5"><a href="#输入格式-5" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入文件中包含若干个整数，其中最后一个为 00，其他的均为正整数。</p>
<p>每个整数占一行。</p>
<p>对于输入的正整数，按题目要求作输出处理。</p>
<p>对于最后一行的整数 0，不作任何处理。</p>
<h4 id="输出格式-5"><a href="#输出格式-5" class="headerlink" title="输出格式"></a>输出格式</h4><p>对于每个输入的正整数 XX，输出一个从 11 到 XX 的递增序列，每个序列占一行。</p>
<h4 id="数据范围-4"><a href="#数据范围-4" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤X≤1001≤X≤100</p>
<h4 id="输入样例：-3"><a href="#输入样例：-3" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">10</span><br><span class="line">3</span><br><span class="line">0</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-3"><a href="#输出样例：-3" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 2 3 4 5</span><br><span class="line">1 2 3 4 5 6 7 8 9 10</span><br><span class="line">1 2 3</span><br></pre></td></tr></table></figure>
<h2 id="答案-4"><a href="#答案-4" class="headerlink" title="答案"></a>答案</h2><h4 id="第一种输入方式"><a href="#第一种输入方式" class="headerlink" title="第一种输入方式"></a>第一种输入方式</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    cin &gt;&gt; x;</span><br><span class="line">    <span class="keyword">while</span>(x)&#123;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=x;i++)&#123;</span><br><span class="line">            cout &lt;&lt; i &lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;cout &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="第二种输入方式"><a href="#第二种输入方式" class="headerlink" title="第二种输入方式"></a>第二种输入方式</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; x &amp;&amp; x)&#123;<span class="comment">//cin读到结束就会停下来</span></span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=x;i++)&#123;</span><br><span class="line">            cout &lt;&lt; i &lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>第三种输入方式</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; x, x)&#123;<span class="comment">//整个表达式的值等于最后一个数的值</span></span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=x;i++)&#123;</span><br><span class="line">            cout &lt;&lt; i &lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x) != <span class="number">-1</span>)<span class="comment">//scanf()读到结束会返回-1</span></span><br></pre></td></tr></table></figure>

<h1 id="724-约数"><a href="#724-约数" class="headerlink" title="724. 约数"></a>724. 约数</h1><h2 id="题目-6"><a href="#题目-6" class="headerlink" title="题目"></a>题目</h2><p>输入一个整数 N，按照从小到大的顺序输出它的全部约数。</p>
<h4 id="输入格式-6"><a href="#输入格式-6" class="headerlink" title="输入格式"></a>输入格式</h4><p>一个整数 NN。</p>
<h4 id="输出格式-6"><a href="#输出格式-6" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出全部约数，每个约数占一行。</p>
<h4 id="数据范围-5"><a href="#数据范围-5" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤N≤1000</p>
<h4 id="输入样例：-4"><a href="#输入样例：-4" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-4"><a href="#输出样例：-4" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">6</span><br></pre></td></tr></table></figure>

<h2 id="答案-5"><a href="#答案-5" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    cin &gt;&gt; x;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=x;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(x%i==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="720-连续整数相加"><a href="#720-连续整数相加" class="headerlink" title="720. 连续整数相加"></a>720. 连续整数相加</h1><h2 id="题目-7"><a href="#题目-7" class="headerlink" title="题目"></a>题目</h2><p>读入两个整数值 A 和 N，计算从 A 开始的 N 个连续整数的和。</p>
<p>注意，如果读入的 N 为 0 或负数，则继续读取数字直至读入 N 值为正整数为止。</p>
<h4 id="输入格式-7"><a href="#输入格式-7" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含整数 A 和若干个整数 N（不超过 100 个）。</p>
<h4 id="输出格式-7"><a href="#输出格式-7" class="headerlink" title="输出格式"></a>输出格式</h4><p>一个整数，表示从 A 开始的 N 个连续整数的和。</p>
<h4 id="数据范围-6"><a href="#数据范围-6" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤A≤100,<br>−100≤N≤100</p>
<h4 id="输入样例1：-1"><a href="#输入样例1：-1" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 2</span><br></pre></td></tr></table></figure>

<h4 id="输出样例1：-1"><a href="#输出样例1：-1" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure>

<h4 id="输入样例2：-1"><a href="#输入样例2：-1" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 -1 0 -2 2</span><br></pre></td></tr></table></figure>

<h4 id="输出样例2：-1"><a href="#输出样例2：-1" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure>

<h2 id="答案-6"><a href="#答案-6" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x,y,i,ret=<span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; x;</span><br><span class="line">    cin &gt;&gt; y;</span><br><span class="line">    <span class="keyword">while</span>(y&lt;=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; y;</span><br><span class="line">    &#125;<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;y;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ret+=x;</span><br><span class="line">        x++;</span><br><span class="line">    &#125;cout &lt;&lt; ret &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="723-PUM"><a href="#723-PUM" class="headerlink" title="723. PUM"></a>723. PUM</h1><h2 id="题目-8"><a href="#题目-8" class="headerlink" title="题目"></a>题目</h2><p>输入两个整数 N 和 M，构造一个 N 行 M 列的数字矩阵，矩阵中的数字从第一行到最后一行，按从左到右的顺序依次为 1,2,3,…,N×M。</p>
<p>矩阵构造完成后，将每行的最后一个数字变为 PUM。</p>
<p>输出最终矩阵。</p>
<h4 id="输入格式-8"><a href="#输入格式-8" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含两个整数 NN 和 MM。</p>
<h4 id="输出格式-8"><a href="#输出格式-8" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出最终矩阵，具体形式参照输出样例。</p>
<h4 id="数据范围-7"><a href="#数据范围-7" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤N,M≤201≤N,M≤20</p>
<h4 id="输入样例：-5"><a href="#输入样例：-5" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7 4</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-5"><a href="#输出样例：-5" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 2 3 PUM</span><br><span class="line">5 6 7 PUM</span><br><span class="line">9 10 11 PUM</span><br><span class="line">13 14 15 PUM</span><br><span class="line">17 18 19 PUM</span><br><span class="line">21 22 23 PUM</span><br><span class="line">25 26 27 PUM</span><br></pre></td></tr></table></figure>

<h2 id="答案-7"><a href="#答案-7" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> line,row;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; line &gt;&gt; row;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;line;j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;row;i++)&#123;</span><br><span class="line">            cout &lt;&lt; cnt &lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">            cnt++;</span><br><span class="line">            </span><br><span class="line">        &#125;<span class="keyword">if</span>(i==row)&#123;</span><br><span class="line">            cnt++;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;PUM&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="715-余数"><a href="#715-余数" class="headerlink" title="715. 余数"></a>715. 余数</h1><h2 id="题目-9"><a href="#题目-9" class="headerlink" title="题目"></a>题目</h2><p>输入一个整数 N，请按顺序输出 1 到 10000 之间（不包括 11和 10000）的所有除以 N 余 2 的数字。</p>
<h4 id="输入格式-9"><a href="#输入格式-9" class="headerlink" title="输入格式"></a>输入格式</h4><p>一个整数 N。</p>
<h4 id="输出格式-9"><a href="#输出格式-9" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出所有满足条件的数字，从小到大每行输出一个。</p>
<h4 id="数据范围-8"><a href="#数据范围-8" class="headerlink" title="数据范围"></a>数据范围</h4><p>2&lt;N&lt;10000</p>
<h4 id="输入样例：-6"><a href="#输入样例：-6" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">13</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-6"><a href="#输出样例：-6" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">15</span><br><span class="line">28</span><br><span class="line">41</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<h2 id="答案-8"><a href="#答案-8" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;<span class="number">10000</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i%n==<span class="number">2</span>) cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="710-六个奇数"><a href="#710-六个奇数" class="headerlink" title="710. 六个奇数"></a>710. 六个奇数</h1><h2 id="题目-10"><a href="#题目-10" class="headerlink" title="题目"></a>题目</h2><p>读取一个整数 X，输出 X 之后的 6 个奇数，如果 X 也是奇数，那么它也算作 6 个奇数之一。</p>
<h4 id="输入格式-10"><a href="#输入格式-10" class="headerlink" title="输入格式"></a>输入格式</h4><p>一个整数 X。</p>
<h4 id="输出格式-10"><a href="#输出格式-10" class="headerlink" title="输出格式"></a>输出格式</h4><p>所有满足条件的奇数，每个占一行。</p>
<h4 id="数据范围-9"><a href="#数据范围-9" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤X≤100</p>
<h4 id="输入样例：-7"><a href="#输入样例：-7" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">9</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-7"><a href="#输出样例：-7" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">9</span><br><span class="line">11</span><br><span class="line">13</span><br><span class="line">15</span><br><span class="line">17</span><br><span class="line">19</span><br></pre></td></tr></table></figure>

<h2 id="答案-9"><a href="#答案-9" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">1</span>,j;</span><br><span class="line">    cin &gt;&gt; x;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=<span class="number">6</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(x%<span class="number">2</span>) </span><br><span class="line">        &#123;   i++;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,x);</span><br><span class="line">        &#125;</span><br><span class="line">        x++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">if</span>(x%<span class="number">2</span>==<span class="number">0</span>) x++;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; x+i*<span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="711-乘法表"><a href="#711-乘法表" class="headerlink" title="711. 乘法表"></a>711. 乘法表</h1><h2 id="题目-11"><a href="#题目-11" class="headerlink" title="题目"></a>题目</h2><p>输入一个整数 N，输出 N 的乘法表，如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 x N = N      </span><br><span class="line">2 x N = 2N        </span><br><span class="line">...       </span><br><span class="line">10 x N = 10N </span><br></pre></td></tr></table></figure>

<h4 id="输入格式-11"><a href="#输入格式-11" class="headerlink" title="输入格式"></a>输入格式</h4><p>一个整数 N。</p>
<h4 id="输出格式-11"><a href="#输出格式-11" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出 N 的乘法表，具体形式参照输出样例。</p>
<h4 id="数据范围-10"><a href="#数据范围-10" class="headerlink" title="数据范围"></a>数据范围</h4><p>1&lt;N&lt;1000</p>
<h4 id="输入样例：-8"><a href="#输入样例：-8" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">140</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-8"><a href="#输出样例：-8" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 x 140 = 140</span><br><span class="line">2 x 140 = 280</span><br><span class="line">3 x 140 = 420</span><br><span class="line">4 x 140 = 560</span><br><span class="line">5 x 140 = 700</span><br><span class="line">6 x 140 = 840</span><br><span class="line">7 x 140 = 980</span><br><span class="line">8 x 140 = 1120</span><br><span class="line">9 x 140 = 1260</span><br><span class="line">10 x 140 = 1400</span><br></pre></td></tr></table></figure>

<h2 id="答案-10"><a href="#答案-10" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,ret;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++)&#123;</span><br><span class="line">        ret=<span class="number">1</span>;</span><br><span class="line">        ret=i*n;</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; <span class="string">&quot; x &quot;</span> &lt;&lt; n &lt;&lt;<span class="string">&quot; = &quot;</span> &lt;&lt; ret &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="718-实验"><a href="#718-实验" class="headerlink" title="718. 实验"></a>718. 实验</h1><h2 id="题目-12"><a href="#题目-12" class="headerlink" title="题目"></a>题目</h2><p>医学部一共进行了 N 场动物实验。</p>
<p>共有三种小动物可用来实验，分别是青蛙、老鼠和兔子。</p>
<p>每次实验都会选取其中一种动物来参与实验，选取数量若干。</p>
<p>现在请你统计一下医学部一共用了多少小动物，每种分别用了多少，每种动物使用数量占总量的百分比分别是多少。</p>
<h4 id="输入格式-12"><a href="#输入格式-12" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含整数 N，表示实验次数。</p>
<p>接下来 N 行，每行包含一个整数 A（表示一次实验使用的小动物的数量）和一个字符 T（表示一次实验使用的小动物的类型，<code>C</code> 表示兔子(coney)，<code>R</code> 表示老鼠(rat)，<code>F</code> 表示青蛙(frog)）。</p>
<h4 id="输出格式-12"><a href="#输出格式-12" class="headerlink" title="输出格式"></a>输出格式</h4><p>请你参照输出样例，输出所用动物总数，每种动物的数量，以及每种动物所占百分比。</p>
<p>注意输出百分比时，保留两位小数。</p>
<h4 id="数据范围-11"><a href="#数据范围-11" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤N≤100,<br>1≤A≤15</p>
<h4 id="输入样例：-9"><a href="#输入样例：-9" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line">10 C</span><br><span class="line">6 R</span><br><span class="line">15 F</span><br><span class="line">5 C</span><br><span class="line">14 R</span><br><span class="line">9 C</span><br><span class="line">6 R</span><br><span class="line">8 F</span><br><span class="line">5 C</span><br><span class="line">14 R</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-9"><a href="#输出样例：-9" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Total: 92 animals</span><br><span class="line">Total coneys: 29</span><br><span class="line">Total rats: 40</span><br><span class="line">Total frogs: 23</span><br><span class="line">Percentage of coneys: 31.52 %</span><br><span class="line">Percentage of rats: 43.48 %</span><br><span class="line">Percentage of frogs: 25.00 %</span><br></pre></td></tr></table></figure>

<h2 id="答案-11"><a href="#答案-11" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    <span class="type">char</span> b;</span><br><span class="line">    <span class="type">int</span> total=<span class="number">0</span>,coneys=<span class="number">0</span>,rats=<span class="number">0</span>,frogs=<span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        total+=a;</span><br><span class="line">        <span class="keyword">if</span>(b==<span class="string">&#x27;C&#x27;</span>) coneys+=a;</span><br><span class="line">        <span class="keyword">if</span>(b==<span class="string">&#x27;R&#x27;</span>) rats+=a;</span><br><span class="line">        <span class="keyword">if</span>(b==<span class="string">&#x27;F&#x27;</span>) frogs+=a;</span><br><span class="line">         cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    &#125;<span class="built_in">printf</span>(<span class="string">&quot;Total: %d animals\nTotal coneys: %d\nTotal rats: %d\nTotal frogs: %d\nPercentage of coneys: %.2lf %%\nPercentage of rats: %.2lf %%\nPercentage of frogs: %.2lf %\n&quot;</span>,total,coneys,rats,frogs,coneys*<span class="number">100.0</span>/total,rats*<span class="number">100.0</span>/total,frogs*<span class="number">100.0</span>/total);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>scanf在读入字符不会自动过滤空格、回车、tab。</li>
</ul>
<h1 id="713-区间-2"><a href="#713-区间-2" class="headerlink" title="713. 区间 2"></a>713. 区间 2</h1><h2 id="题目-13"><a href="#题目-13" class="headerlink" title="题目"></a>题目</h2><p>读取 N 个整数 X1,X2,…,XN，判断这 NN 个整数中有多少个在 [10,20][10,20] 的范围内，有多少个在范围外。</p>
<h4 id="输入格式-13"><a href="#输入格式-13" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含整数 N，表示共有 N 个整数需要进行判断。</p>
<p>接下来 N 行，每行包含一个整数 Xi。</p>
<h4 id="输出格式-13"><a href="#输出格式-13" class="headerlink" title="输出格式"></a>输出格式</h4><p>第一行输出 <code>x in</code>，其中 xx 为在范围内的整数的数量。</p>
<p>第二行输出 <code>y out</code>，其中 yy 为在范围外的整数的数量。</p>
<h4 id="数据范围-12"><a href="#数据范围-12" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤N≤10000,<br>−107&lt;Xi&lt;107</p>
<h4 id="输入样例：-10"><a href="#输入样例：-10" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">14</span><br><span class="line">123</span><br><span class="line">10</span><br><span class="line">-25</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-10"><a href="#输出样例：-10" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 in</span><br><span class="line">2 out</span><br></pre></td></tr></table></figure>

<h2 id="答案-12"><a href="#答案-12" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> in=<span class="number">0</span>,out=<span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)&#123;<span class="comment">//while(n--)也可以</span></span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        <span class="keyword">if</span>(x&gt;=<span class="number">10</span> &amp;&amp; x&lt;=<span class="number">20</span>)&#123;</span><br><span class="line">            in++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            out++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;cout &lt;&lt; in &lt;&lt; <span class="string">&quot; in\n&quot;</span> &lt;&lt; out &lt;&lt;<span class="string">&quot; out\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="719-连续奇数的和-2"><a href="#719-连续奇数的和-2" class="headerlink" title="719. 连续奇数的和 2"></a>719. 连续奇数的和 2</h1><h2 id="题目-14"><a href="#题目-14" class="headerlink" title="题目"></a>题目</h2><p>输入 N 对整数对 X,Y对于每对 X,Y 请你求出它们之间（不包括 X 和 Y）的所有奇数的和。</p>
<h4 id="输入格式-14"><a href="#输入格式-14" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行输入整数 N，表示共有 N 对测试数据。</p>
<p>接下来 N 行，每行输入一组整数 X 和 Y。</p>
<h4 id="输出格式-14"><a href="#输出格式-14" class="headerlink" title="输出格式"></a>输出格式</h4><p>每对 X,Y 输出一个占一行的奇数和。</p>
<h4 id="数据范围-13"><a href="#数据范围-13" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤N≤100,<br>−1000≤X,Y≤1000</p>
<h4 id="输入样例：-11"><a href="#输入样例：-11" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7</span><br><span class="line">4 5</span><br><span class="line">13 10</span><br><span class="line">6 4</span><br><span class="line">3 3</span><br><span class="line">3 5</span><br><span class="line">3 4</span><br><span class="line">3 8</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-11"><a href="#输出样例：-11" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0</span><br><span class="line">11</span><br><span class="line">5</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line">12</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="答案-13"><a href="#答案-13" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    cin &gt;&gt; x &gt;&gt; y; </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;<span class="comment">//while(n--)</span></span><br><span class="line">    <span class="keyword">if</span>(x&gt;y)&#123;</span><br><span class="line">    	<span class="type">int</span> t=y;</span><br><span class="line">    	y=x;</span><br><span class="line">    	x=t;</span><br><span class="line">	&#125;</span><br><span class="line">		<span class="type">int</span> ret=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=x+<span class="number">1</span>;j&lt;y;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(j%<span class="number">2</span>) ret+=j;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ret &lt;&lt; endl;</span><br><span class="line"> 		cin &gt;&gt; x &gt;&gt; y; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>可以用交换函数#include&lt; algorithm &gt;    </p>
<p>swap(x,y)</p>
</li>
</ul>
<h1 id="717-简单斐波那契"><a href="#717-简单斐波那契" class="headerlink" title="717. 简单斐波那契"></a>717. 简单斐波那契</h1><h2 id="题目-15"><a href="#题目-15" class="headerlink" title="题目"></a>题目</h2><p>以下数列 <code>0 1 1 2 3 5 8 13 21 ...</code> 被称为斐波纳契数列。</p>
<p>这个数列从第 3项开始，每一项都等于前两项之和。</p>
<p>输入一个整数 N，请你输出这个序列的前 N 项。</p>
<h4 id="输入格式-15"><a href="#输入格式-15" class="headerlink" title="输入格式"></a>输入格式</h4><p>一个整数 NN。</p>
<h4 id="输出格式-15"><a href="#输出格式-15" class="headerlink" title="输出格式"></a>输出格式</h4><p>在一行中输出斐波那契数列的前 N 项，数字之间用空格隔开。</p>
<h4 id="数据范围-14"><a href="#数据范围-14" class="headerlink" title="数据范围"></a>数据范围</h4><p>0&lt;N&lt;460&lt;N&lt;46</p>
<h4 id="输入样例：-12"><a href="#输入样例：-12" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-12"><a href="#输出样例：-12" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0 1 1 2 3</span><br></pre></td></tr></table></figure>

<h2 id="答案-14"><a href="#答案-14" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> f1=<span class="number">0</span>,f2=<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n+<span class="number">1</span>;i+=<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">2</span>!=<span class="number">0</span> &amp;&amp; n+<span class="number">1</span>==i)&#123;</span><br><span class="line">        	cout &lt;&lt; f1;</span><br><span class="line">		&#125;<span class="keyword">else</span></span><br><span class="line">        cout &lt;&lt; f1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; f2 &lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        f1=f1+f2;</span><br><span class="line">        f2=f1+f2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="type">int</span> a=<span class="number">0</span>,b=<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">while</span>(i&lt;n)&#123;</span><br><span class="line">    cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    c=a+b;</span><br><span class="line">    a=b;</span><br><span class="line">    b=c;</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="722-数字序列和它的和"><a href="#722-数字序列和它的和" class="headerlink" title="722. 数字序列和它的和"></a>722. 数字序列和它的和</h1><h2 id="题目-16"><a href="#题目-16" class="headerlink" title="题目"></a>题目</h2><p>输入若干个整数对 M,N，对于每个数对，输出以这两个数为最大值和最小值的公差为 11 的等差数列。</p>
<p>注意，当输入整数对中，任意一个数为 0 或负整数时，立即停止输入，且该组数对无需作任何处理。</p>
<h4 id="输入格式-16"><a href="#输入格式-16" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入共若干行，每行包含两个整数。</p>
<p>最后一行的两个整数中，至少有一个是非正整数。</p>
<h4 id="输出格式-16"><a href="#输出格式-16" class="headerlink" title="输出格式"></a>输出格式</h4><p>对于每组需作处理的数对，输出一个结果，每个结果占一行。</p>
<p>结果包含从最小值到最大值的数字序列以及数字序列各数字之和。</p>
<p>具体格式请参照输出样例。</p>
<h4 id="数据范围-15"><a href="#数据范围-15" class="headerlink" title="数据范围"></a>数据范围</h4><p>M,N≤100M,N≤100</p>
<h4 id="输入样例：-13"><a href="#输入样例：-13" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 5</span><br><span class="line">6 3</span><br><span class="line">5 0</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-13"><a href="#输出样例：-13" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 3 4 5 Sum=14</span><br><span class="line">3 4 5 6 Sum=18</span><br></pre></td></tr></table></figure>

<h2 id="答案-15"><a href="#答案-15" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b,sum=<span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(a&gt;<span class="number">0</span> &amp;&amp; b&gt;<span class="number">0</span>) </span><br><span class="line">        &#123;</span><br><span class="line">         <span class="built_in">f</span>(b&lt;a)&#123; </span><br><span class="line">           <span class="type">int</span> t=a;;</span><br><span class="line">           a=b;</span><br><span class="line">           b=t;</span><br><span class="line">       &#125;</span><br><span class="line">         sum=<span class="number">0</span>;</span><br><span class="line">         <span class="keyword">for</span>(<span class="type">int</span> i=a;i&lt;=b;i++)&#123;</span><br><span class="line">            sum+=i;</span><br><span class="line">            cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">         &#125;  </span><br><span class="line">         cout &lt;&lt; <span class="string">&quot;Sum=&quot;</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">         cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="725-完全数"><a href="#725-完全数" class="headerlink" title="*725. 完全数"></a>*725. 完全数</h1><h2 id="题目-17"><a href="#题目-17" class="headerlink" title="题目"></a>题目</h2><p>一个整数，除了本身以外的其他所有约数的和如果等于该数，那么我们就称这个整数为完全数。</p>
<p>例如，6 就是一个完全数，因为它的除了本身以外的其他约数的和为 1+2+3&#x3D;6。</p>
<p>现在，给定你 N 个整数，请你依次判断这些数是否是完全数。</p>
<h4 id="输入格式-17"><a href="#输入格式-17" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含整数 N，表示共有 N 个测试用例。</p>
<p>接下来 N 行，每行包含一个需要你进行判断的整数 X。</p>
<h4 id="输出格式-17"><a href="#输出格式-17" class="headerlink" title="输出格式"></a>输出格式</h4><p>每个测试用例输出一个结果，每个结果占一行。</p>
<p>如果测试数据是完全数，则输出 <code>X is perfect</code>，其中 XX 是测试数据。</p>
<p>如果测试数据不是完全数，则输出 <code>X is not perfect</code>，其中 X 是测试数据。</p>
<h4 id="数据范围-16"><a href="#数据范围-16" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤N≤1001≤N≤100,<br>1≤X≤1081≤X≤108</p>
<h4 id="输入样例：-14"><a href="#输入样例：-14" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">6</span><br><span class="line">5</span><br><span class="line">28</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-14"><a href="#输出样例：-14" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6 is perfect</span><br><span class="line">5 is not perfect</span><br><span class="line">28 is perfect</span><br></pre></td></tr></table></figure>

<h2 id="答案（怎样才能不超时？）"><a href="#答案（怎样才能不超时？）" class="headerlink" title="答案（怎样才能不超时？）"></a>答案（怎样才能不超时？）</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> ret;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">	    ret=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j*j&lt;x;j++)&#123;<span class="comment">//或者改成j&lt;=sqrt(x)，但后面判断的时候要把x=1去掉</span></span><br><span class="line">            <span class="keyword">if</span>(x%j==<span class="number">0</span>)&#123;</span><br><span class="line">                ret+=j+x/j;<span class="comment">//j是一个因子，x/j得到的必然是另一个因子，但因子是1的时候会加上它本身，后面要把x减掉</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ret-=x;<span class="comment">//</span></span><br><span class="line">        <span class="keyword">if</span>(ret==x)</span><br><span class="line">		    cout &lt;&lt; x &lt;&lt; <span class="string">&quot; is perfect&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">		   cout &lt;&lt; x &lt;&lt; <span class="string">&quot; is not perfect&quot;</span> &lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="726-质数"><a href="#726-质数" class="headerlink" title="726. 质数"></a>726. 质数</h1><h2 id="题目-18"><a href="#题目-18" class="headerlink" title="题目"></a>题目</h2><p>一个大于 1 的自然数，如果除了 1 和它自身外，不能被其他自然数整除则称该数为质数。</p>
<p>例如 7 就是一个质数，因为它只能被 11 和 77 整除。</p>
<p>现在，给定你 N 个大于 1 的自然数，请你依次判断这些数是否是质数。</p>
<h4 id="输入格式-18"><a href="#输入格式-18" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含整数 N，表示共有 N 个测试数据。</p>
<p>接下来 N 行，每行包含一个自然数 X。</p>
<h4 id="输出格式-18"><a href="#输出格式-18" class="headerlink" title="输出格式"></a>输出格式</h4><p>每个测试用例输出一个结果，每个结果占一行。</p>
<p>如果测试数据是质数，则输出 <code>X is prime</code>，其中 XX 是测试数据。</p>
<p>如果测试数据不是质数，则输出 <code>X is not prime</code>，其中 XX 是测试数据。</p>
<h4 id="数据范围-17"><a href="#数据范围-17" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤N≤100,<br>1&lt;X≤107</p>
<h4 id="输入样例：-15"><a href="#输入样例：-15" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">8</span><br><span class="line">51</span><br><span class="line">7</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-15"><a href="#输出样例：-15" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8 is not prime</span><br><span class="line">51 is not prime</span><br><span class="line">7 is prime</span><br></pre></td></tr></table></figure>

<h2 id="答案-16"><a href="#答案-16" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;   <span class="comment">//注意</span></span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        <span class="type">int</span> isprime=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i*i&lt;=x;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(x%i==<span class="number">0</span>)&#123;</span><br><span class="line">                isprime=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">if</span>(isprime==<span class="number">1</span>)</span><br><span class="line">        cout &lt;&lt; x &lt;&lt; <span class="string">&quot; is prime&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        cout &lt;&lt; x &lt;&lt;<span class="string">&quot; is not prime&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="727-菱形"><a href="#727-菱形" class="headerlink" title="*727. 菱形"></a>*727. 菱形</h1><h2 id="题目-19"><a href="#题目-19" class="headerlink" title="题目"></a>题目</h2><p>输入一个奇数 n，输出一个由 <code>*</code> 构成的 n 阶实心菱形。</p>
<h4 id="输入格式-19"><a href="#输入格式-19" class="headerlink" title="输入格式"></a>输入格式</h4><p>一个奇数 n。</p>
<h4 id="输出格式-19"><a href="#输出格式-19" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个由 <code>*</code> 构成的 n 阶实心菱形。</p>
<p>具体格式参照输出样例。</p>
<h4 id="数据范围-18"><a href="#数据范围-18" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤99</p>
<h4 id="输入样例：-16"><a href="#输入样例：-16" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-16"><a href="#输出样例：-16" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  *  </span><br><span class="line"> *** </span><br><span class="line">*****</span><br><span class="line"> *** </span><br><span class="line">  *  </span><br></pre></td></tr></table></figure>

<h2 id="答案-17"><a href="#答案-17" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> c=<span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> t=(n+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=t;i++)&#123;</span><br><span class="line">    	<span class="keyword">for</span>(<span class="type">int</span> a=t-i;a&gt;<span class="number">0</span>;a--)&#123;</span><br><span class="line">    		<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">		&#125;<span class="keyword">for</span>(<span class="type">int</span> b=<span class="number">2</span>*i<span class="number">-1</span>;b&gt;<span class="number">0</span>;b--)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">		<span class="keyword">if</span>(i&lt;=t) </span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	&#125;<span class="keyword">for</span>(<span class="type">int</span> i=t<span class="number">-1</span>;i&gt;<span class="number">0</span>;i--)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> a=<span class="number">0</span>;a&lt;c;a++)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> b=(i<span class="number">-1</span>)*<span class="number">2</span>+<span class="number">1</span>;b&gt;<span class="number">0</span>;b--)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">		&#125;<span class="keyword">if</span>(i&gt;<span class="number">1</span>)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">		c++;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用曼哈顿距离（横纵坐标绝对值之差之和）![img](file:&#x2F;&#x2F;&#x2F;C:\Users\鑫霜\Documents\Tencent Files\1442566547\Image\C2C\A69CCA1F9E254FE947A73C0FFCADE097.jpg)</p>
<p>![Screenshot_20211125_102519_com.baidu.netdisk](C:\Users\鑫霜\Documents\Tencent Files\1442566547\FileRecv\MobileFile\Screenshot_20211125_102519_com.baidu.netdisk.png)</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> cx = n/<span class="number">2</span>,cy = n/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">abs</span>(i-cx) + <span class="built_in">abs</span>(j-cy) &lt;= x/<span class="number">2</span>)</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;*&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                cout &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="素数和回文数"><a href="#素数和回文数" class="headerlink" title="素数和回文数"></a>素数和回文数</h1><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>因为 151 既是一个质数又是一个回文数（从左到右和从右到左是看一样的），所以 151 是回文质数。</p>
<p>写一个程序来找出范围 [a,b] (5 \le a &lt; b \le 100,000,000)<a href="5%E2%89%A4*a*%3C*b*%E2%89%A4100,000,000"><em>a</em>,<em>b</em></a>( 一亿)间的所有回文质数。</p>
<h4 id="输入格式-20"><a href="#输入格式-20" class="headerlink" title="输入格式"></a>输入格式</h4><p>第 1 行: 二个整数 a 和 b .</p>
<h4 id="输出格式-20"><a href="#输出格式-20" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个回文质数的列表，一行一个。</p>
<p>输入输出样例</p>
<p><strong>输入 #1</strong>复制</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 500</span><br></pre></td></tr></table></figure>

<p><strong>输出 #1</strong>复制</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">7</span><br><span class="line">11</span><br><span class="line">101</span><br><span class="line">131</span><br><span class="line">151</span><br><span class="line">181</span><br><span class="line">191</span><br><span class="line">313</span><br><span class="line">353</span><br><span class="line">373</span><br><span class="line">383</span><br></pre></td></tr></table></figure>

<p>（回文数就是不管正着看还是倒着看都是一样的）</p>
<h3 id="答案-18"><a href="#答案-18" class="headerlink" title="答案"></a>答案</h3><p>（超时了，但我尽力了）</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> a,b,c;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">	<span class="type">int</span> t,i,j;</span><br><span class="line">	<span class="type">int</span> ret,isprime;</span><br><span class="line">	<span class="keyword">for</span>(i=a;i&lt;=b;i++)&#123;</span><br><span class="line">		t=i;</span><br><span class="line">		ret=<span class="number">0</span>;<span class="comment">//先判断回文数</span></span><br><span class="line">		<span class="keyword">while</span>(t&gt;<span class="number">0</span>)&#123;<span class="comment">//将每一个数倒过来</span></span><br><span class="line">			c=t%<span class="number">10</span>;</span><br><span class="line">			t/=<span class="number">10</span>;</span><br><span class="line">			ret=ret*<span class="number">10</span>+c;</span><br><span class="line">		&#125;<span class="keyword">if</span>(ret==i)&#123;<span class="comment">//如果倒过来的这个数和原来的数相等，这个数就是回文数</span></span><br><span class="line">			isprime=<span class="number">1</span>;<span class="comment">//再判断素数</span></span><br><span class="line">			<span class="keyword">for</span>(j=<span class="number">2</span>;j&lt;i;j++)&#123;</span><br><span class="line">				<span class="keyword">if</span>(i%j == <span class="number">0</span>)&#123;</span><br><span class="line">					isprime=<span class="number">0</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;<span class="keyword">if</span>(isprime==<span class="number">1</span>)&#123;</span><br><span class="line">					<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i);</span><br><span class="line">				&#125;</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="小玉在游泳"><a href="#小玉在游泳" class="headerlink" title="小玉在游泳"></a>小玉在游泳</h1><h2 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h2><p>小玉开心的在游泳，可是她很快难过的发现，自己的力气不够，游泳好累哦。已知小玉第一步能游2米，可是随着越来越累，力气越来越小，她接下来的每一步都只能游出上一步距离的98%。现在小玉想知道，如果要游到距离x米的地方，她需要游多少步呢。请你编程解决这个问题。</p>
<h3 id="输入格式-21"><a href="#输入格式-21" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入一个数字（不一定是整数，小于100m），表示要游的目标距离。</p>
<h3 id="输出格式-21"><a href="#输出格式-21" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出一个整数，表示小玉一共需要游多少步。</p>
<h3 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><p><strong>输入 #1</strong>复制</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4.3</span><br></pre></td></tr></table></figure>

<p><strong>输出 #1</strong>复制</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>

<h2 id="答案-19"><a href="#答案-19" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">double</span> a;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;a);</span><br><span class="line">	<span class="type">double</span> ret=<span class="number">0</span>;</span><br><span class="line">	<span class="type">double</span> d=<span class="number">2</span>;</span><br><span class="line">	<span class="type">int</span> n=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(ret&lt;a)&#123;</span><br><span class="line">	ret+=d;<span class="comment">//注意</span></span><br><span class="line">	d*=<span class="number">0.98</span>;<span class="comment">//</span></span><br><span class="line">	n++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,n);</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure>



<h1 id="数字反转"><a href="#数字反转" class="headerlink" title="数字反转"></a>数字反转</h1><h2 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个整数，请将该数各个位上数字反转得到一个新数。新数也应满足整数的常见形式，即除非给定的原数为零，否则反转后得到的新数的最高位数字不应为零（参见样例2）。</p>
<h3 id="输入格式-22"><a href="#输入格式-22" class="headerlink" title="输入格式"></a>输入格式</h3><p>一个整数 N<em>N</em></p>
<h3 id="输出格式-22"><a href="#输出格式-22" class="headerlink" title="输出格式"></a>输出格式</h3><p>一个整数，表示反转后的新数。</p>
<h3 id="输入输出样例-1"><a href="#输入输出样例-1" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><p><strong>输入 #1</strong>复制</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">123</span><br></pre></td></tr></table></figure>

<p><strong>输出 #1</strong>复制</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">321</span><br></pre></td></tr></table></figure>

<p><strong>输入 #2</strong>复制</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-380</span><br></pre></td></tr></table></figure>

<p><strong>输出 #2</strong>复制</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-83</span><br></pre></td></tr></table></figure>

<h2 id="答案-20"><a href="#答案-20" class="headerlink" title="答案"></a>答案</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> a,t,n=<span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> ret=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">	t=a;</span><br><span class="line">	<span class="keyword">if</span>(a&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">		a=-a;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(a&gt;<span class="number">0</span>)&#123;	</span><br><span class="line">		n=a%<span class="number">10</span>;;</span><br><span class="line">		ret=ret*<span class="number">10</span>+n;</span><br><span class="line">		a/=<span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(t&lt;<span class="number">0</span>)&#123;</span><br><span class="line">		ret=-ret;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ret);</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure>

<h4 id=""><a href="#" class="headerlink" title=""></a></h4>]]></content>
      <categories>
        <category>C++</category>
        <category>习题</category>
        <category>语法基础</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>Acwing</tag>
        <tag>语法基础</tag>
        <tag>循环</tag>
      </tags>
  </entry>
</search>
